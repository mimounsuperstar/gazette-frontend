{"ast":null,"code":"/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf\", [], factory);else if (typeof exports === 'object') exports[\"pdfjs-dist/build/pdf\"] = factory();else root[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(this, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __w_pdfjs_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __w_pdfjs_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __w_pdfjs_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __w_pdfjs_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__w_pdfjs_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // define __esModule on exports\n\n      /******/\n\n\n      __w_pdfjs_require__.r = function (exports) {\n        /******/\n        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/\n          Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n\n      /******/\n      // create a fake namespace object\n\n      /******/\n      // mode & 1: value is a module id, require it\n\n      /******/\n      // mode & 2: merge all properties of value into the ns\n\n      /******/\n      // mode & 4: return value when already ns object\n\n      /******/\n      // mode & 8|1: behave like require\n\n      /******/\n\n\n      __w_pdfjs_require__.t = function (value, mode) {\n        /******/\n        if (mode & 1) value = __w_pdfjs_require__(value);\n        /******/\n\n        if (mode & 8) return value;\n        /******/\n\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n\n        var ns = Object.create(null);\n        /******/\n\n        __w_pdfjs_require__.r(ns);\n        /******/\n\n\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n\n        if (mode & 2 && typeof value != 'string') for (var key in value) __w_pdfjs_require__.d(ns, key, function (key) {\n          return value[key];\n        }.bind(null, key));\n        /******/\n\n        return ns;\n        /******/\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __w_pdfjs_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __w_pdfjs_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __w_pdfjs_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __w_pdfjs_require__.p = \"\";\n      /******/\n\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n      /******/\n    }\n    /************************************************************************/\n\n    /******/\n    ([\n    /* 0 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var pdfjsVersion = '2.4.456';\n      var pdfjsBuild = '228a591c';\n\n      var pdfjsSharedUtil = __w_pdfjs_require__(1);\n\n      var pdfjsDisplayAPI = __w_pdfjs_require__(3);\n\n      var pdfjsDisplayTextLayer = __w_pdfjs_require__(16);\n\n      var pdfjsDisplayAnnotationLayer = __w_pdfjs_require__(17);\n\n      var pdfjsDisplayDisplayUtils = __w_pdfjs_require__(4);\n\n      var pdfjsDisplaySVG = __w_pdfjs_require__(18);\n\n      const pdfjsDisplayWorkerOptions = __w_pdfjs_require__(10);\n\n      const pdfjsDisplayAPICompatibility = __w_pdfjs_require__(6);\n\n      {\n        const {\n          isNodeJS\n        } = __w_pdfjs_require__(7);\n\n        if (isNodeJS) {\n          const PDFNodeStream = __w_pdfjs_require__(19).PDFNodeStream;\n\n          pdfjsDisplayAPI.setPDFNetworkStreamFactory(params => {\n            return new PDFNodeStream(params);\n          });\n        } else {\n          const PDFNetworkStream = __w_pdfjs_require__(22).PDFNetworkStream;\n\n          let PDFFetchStream;\n\n          if (pdfjsDisplayDisplayUtils.isFetchSupported()) {\n            PDFFetchStream = __w_pdfjs_require__(23).PDFFetchStream;\n          }\n\n          pdfjsDisplayAPI.setPDFNetworkStreamFactory(params => {\n            if (PDFFetchStream && pdfjsDisplayDisplayUtils.isValidFetchUrl(params.url)) {\n              return new PDFFetchStream(params);\n            }\n\n            return new PDFNetworkStream(params);\n          });\n        }\n      }\n      exports.build = pdfjsDisplayAPI.build;\n      exports.version = pdfjsDisplayAPI.version;\n      exports.getDocument = pdfjsDisplayAPI.getDocument;\n      exports.LoopbackPort = pdfjsDisplayAPI.LoopbackPort;\n      exports.PDFDataRangeTransport = pdfjsDisplayAPI.PDFDataRangeTransport;\n      exports.PDFWorker = pdfjsDisplayAPI.PDFWorker;\n      exports.renderTextLayer = pdfjsDisplayTextLayer.renderTextLayer;\n      exports.AnnotationLayer = pdfjsDisplayAnnotationLayer.AnnotationLayer;\n      exports.createPromiseCapability = pdfjsSharedUtil.createPromiseCapability;\n      exports.PasswordResponses = pdfjsSharedUtil.PasswordResponses;\n      exports.InvalidPDFException = pdfjsSharedUtil.InvalidPDFException;\n      exports.MissingPDFException = pdfjsSharedUtil.MissingPDFException;\n      exports.SVGGraphics = pdfjsDisplaySVG.SVGGraphics;\n      exports.NativeImageDecoding = pdfjsSharedUtil.NativeImageDecoding;\n      exports.CMapCompressionType = pdfjsSharedUtil.CMapCompressionType;\n      exports.PermissionFlag = pdfjsSharedUtil.PermissionFlag;\n      exports.UnexpectedResponseException = pdfjsSharedUtil.UnexpectedResponseException;\n      exports.OPS = pdfjsSharedUtil.OPS;\n      exports.VerbosityLevel = pdfjsSharedUtil.VerbosityLevel;\n      exports.UNSUPPORTED_FEATURES = pdfjsSharedUtil.UNSUPPORTED_FEATURES;\n      exports.createValidAbsoluteUrl = pdfjsSharedUtil.createValidAbsoluteUrl;\n      exports.createObjectURL = pdfjsSharedUtil.createObjectURL;\n      exports.removeNullCharacters = pdfjsSharedUtil.removeNullCharacters;\n      exports.shadow = pdfjsSharedUtil.shadow;\n      exports.Util = pdfjsSharedUtil.Util;\n      exports.RenderingCancelledException = pdfjsDisplayDisplayUtils.RenderingCancelledException;\n      exports.getFilenameFromUrl = pdfjsDisplayDisplayUtils.getFilenameFromUrl;\n      exports.LinkTarget = pdfjsDisplayDisplayUtils.LinkTarget;\n      exports.addLinkAttributes = pdfjsDisplayDisplayUtils.addLinkAttributes;\n      exports.loadScript = pdfjsDisplayDisplayUtils.loadScript;\n      exports.PDFDateString = pdfjsDisplayDisplayUtils.PDFDateString;\n      exports.GlobalWorkerOptions = pdfjsDisplayWorkerOptions.GlobalWorkerOptions;\n      exports.apiCompatibilityParams = pdfjsDisplayAPICompatibility.apiCompatibilityParams;\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.arrayByteLength = arrayByteLength;\n      exports.arraysToBytes = arraysToBytes;\n      exports.assert = assert;\n      exports.bytesToString = bytesToString;\n      exports.createPromiseCapability = createPromiseCapability;\n      exports.getVerbosityLevel = getVerbosityLevel;\n      exports.info = info;\n      exports.isArrayBuffer = isArrayBuffer;\n      exports.isArrayEqual = isArrayEqual;\n      exports.isBool = isBool;\n      exports.isEmptyObj = isEmptyObj;\n      exports.isNum = isNum;\n      exports.isString = isString;\n      exports.isSameOrigin = isSameOrigin;\n      exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n      exports.removeNullCharacters = removeNullCharacters;\n      exports.setVerbosityLevel = setVerbosityLevel;\n      exports.shadow = shadow;\n      exports.string32 = string32;\n      exports.stringToBytes = stringToBytes;\n      exports.stringToPDFString = stringToPDFString;\n      exports.stringToUTF8String = stringToUTF8String;\n      exports.utf8StringToString = utf8StringToString;\n      exports.warn = warn;\n      exports.unreachable = unreachable;\n      exports.IsEvalSupportedCached = exports.IsLittleEndianCached = exports.createObjectURL = exports.FormatError = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.NativeImageDecoding = exports.MissingPDFException = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VerbosityLevel = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = exports.BaseException = void 0;\n\n      __w_pdfjs_require__(2);\n\n      const IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n      exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n      const FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n      exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n      const NativeImageDecoding = {\n        NONE: \"none\",\n        DECODE: \"decode\",\n        DISPLAY: \"display\"\n      };\n      exports.NativeImageDecoding = NativeImageDecoding;\n      const PermissionFlag = {\n        PRINT: 0x04,\n        MODIFY_CONTENTS: 0x08,\n        COPY: 0x10,\n        MODIFY_ANNOTATIONS: 0x20,\n        FILL_INTERACTIVE_FORMS: 0x100,\n        COPY_FOR_ACCESSIBILITY: 0x200,\n        ASSEMBLE: 0x400,\n        PRINT_HIGH_QUALITY: 0x800\n      };\n      exports.PermissionFlag = PermissionFlag;\n      const TextRenderingMode = {\n        FILL: 0,\n        STROKE: 1,\n        FILL_STROKE: 2,\n        INVISIBLE: 3,\n        FILL_ADD_TO_PATH: 4,\n        STROKE_ADD_TO_PATH: 5,\n        FILL_STROKE_ADD_TO_PATH: 6,\n        ADD_TO_PATH: 7,\n        FILL_STROKE_MASK: 3,\n        ADD_TO_PATH_FLAG: 4\n      };\n      exports.TextRenderingMode = TextRenderingMode;\n      const ImageKind = {\n        GRAYSCALE_1BPP: 1,\n        RGB_24BPP: 2,\n        RGBA_32BPP: 3\n      };\n      exports.ImageKind = ImageKind;\n      const AnnotationType = {\n        TEXT: 1,\n        LINK: 2,\n        FREETEXT: 3,\n        LINE: 4,\n        SQUARE: 5,\n        CIRCLE: 6,\n        POLYGON: 7,\n        POLYLINE: 8,\n        HIGHLIGHT: 9,\n        UNDERLINE: 10,\n        SQUIGGLY: 11,\n        STRIKEOUT: 12,\n        STAMP: 13,\n        CARET: 14,\n        INK: 15,\n        POPUP: 16,\n        FILEATTACHMENT: 17,\n        SOUND: 18,\n        MOVIE: 19,\n        WIDGET: 20,\n        SCREEN: 21,\n        PRINTERMARK: 22,\n        TRAPNET: 23,\n        WATERMARK: 24,\n        THREED: 25,\n        REDACT: 26\n      };\n      exports.AnnotationType = AnnotationType;\n      const AnnotationStateModelType = {\n        MARKED: \"Marked\",\n        REVIEW: \"Review\"\n      };\n      exports.AnnotationStateModelType = AnnotationStateModelType;\n      const AnnotationMarkedState = {\n        MARKED: \"Marked\",\n        UNMARKED: \"Unmarked\"\n      };\n      exports.AnnotationMarkedState = AnnotationMarkedState;\n      const AnnotationReviewState = {\n        ACCEPTED: \"Accepted\",\n        REJECTED: \"Rejected\",\n        CANCELLED: \"Cancelled\",\n        COMPLETED: \"Completed\",\n        NONE: \"None\"\n      };\n      exports.AnnotationReviewState = AnnotationReviewState;\n      const AnnotationReplyType = {\n        GROUP: \"Group\",\n        REPLY: \"R\"\n      };\n      exports.AnnotationReplyType = AnnotationReplyType;\n      const AnnotationFlag = {\n        INVISIBLE: 0x01,\n        HIDDEN: 0x02,\n        PRINT: 0x04,\n        NOZOOM: 0x08,\n        NOROTATE: 0x10,\n        NOVIEW: 0x20,\n        READONLY: 0x40,\n        LOCKED: 0x80,\n        TOGGLENOVIEW: 0x100,\n        LOCKEDCONTENTS: 0x200\n      };\n      exports.AnnotationFlag = AnnotationFlag;\n      const AnnotationFieldFlag = {\n        READONLY: 0x0000001,\n        REQUIRED: 0x0000002,\n        NOEXPORT: 0x0000004,\n        MULTILINE: 0x0001000,\n        PASSWORD: 0x0002000,\n        NOTOGGLETOOFF: 0x0004000,\n        RADIO: 0x0008000,\n        PUSHBUTTON: 0x0010000,\n        COMBO: 0x0020000,\n        EDIT: 0x0040000,\n        SORT: 0x0080000,\n        FILESELECT: 0x0100000,\n        MULTISELECT: 0x0200000,\n        DONOTSPELLCHECK: 0x0400000,\n        DONOTSCROLL: 0x0800000,\n        COMB: 0x1000000,\n        RICHTEXT: 0x2000000,\n        RADIOSINUNISON: 0x2000000,\n        COMMITONSELCHANGE: 0x4000000\n      };\n      exports.AnnotationFieldFlag = AnnotationFieldFlag;\n      const AnnotationBorderStyleType = {\n        SOLID: 1,\n        DASHED: 2,\n        BEVELED: 3,\n        INSET: 4,\n        UNDERLINE: 5\n      };\n      exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n      const StreamType = {\n        UNKNOWN: \"UNKNOWN\",\n        FLATE: \"FLATE\",\n        LZW: \"LZW\",\n        DCT: \"DCT\",\n        JPX: \"JPX\",\n        JBIG: \"JBIG\",\n        A85: \"A85\",\n        AHX: \"AHX\",\n        CCF: \"CCF\",\n        RLX: \"RLX\"\n      };\n      exports.StreamType = StreamType;\n      const FontType = {\n        UNKNOWN: \"UNKNOWN\",\n        TYPE1: \"TYPE1\",\n        TYPE1C: \"TYPE1C\",\n        CIDFONTTYPE0: \"CIDFONTTYPE0\",\n        CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n        TRUETYPE: \"TRUETYPE\",\n        CIDFONTTYPE2: \"CIDFONTTYPE2\",\n        TYPE3: \"TYPE3\",\n        OPENTYPE: \"OPENTYPE\",\n        TYPE0: \"TYPE0\",\n        MMTYPE1: \"MMTYPE1\"\n      };\n      exports.FontType = FontType;\n      const VerbosityLevel = {\n        ERRORS: 0,\n        WARNINGS: 1,\n        INFOS: 5\n      };\n      exports.VerbosityLevel = VerbosityLevel;\n      const CMapCompressionType = {\n        NONE: 0,\n        BINARY: 1,\n        STREAM: 2\n      };\n      exports.CMapCompressionType = CMapCompressionType;\n      const OPS = {\n        dependency: 1,\n        setLineWidth: 2,\n        setLineCap: 3,\n        setLineJoin: 4,\n        setMiterLimit: 5,\n        setDash: 6,\n        setRenderingIntent: 7,\n        setFlatness: 8,\n        setGState: 9,\n        save: 10,\n        restore: 11,\n        transform: 12,\n        moveTo: 13,\n        lineTo: 14,\n        curveTo: 15,\n        curveTo2: 16,\n        curveTo3: 17,\n        closePath: 18,\n        rectangle: 19,\n        stroke: 20,\n        closeStroke: 21,\n        fill: 22,\n        eoFill: 23,\n        fillStroke: 24,\n        eoFillStroke: 25,\n        closeFillStroke: 26,\n        closeEOFillStroke: 27,\n        endPath: 28,\n        clip: 29,\n        eoClip: 30,\n        beginText: 31,\n        endText: 32,\n        setCharSpacing: 33,\n        setWordSpacing: 34,\n        setHScale: 35,\n        setLeading: 36,\n        setFont: 37,\n        setTextRenderingMode: 38,\n        setTextRise: 39,\n        moveText: 40,\n        setLeadingMoveText: 41,\n        setTextMatrix: 42,\n        nextLine: 43,\n        showText: 44,\n        showSpacedText: 45,\n        nextLineShowText: 46,\n        nextLineSetSpacingShowText: 47,\n        setCharWidth: 48,\n        setCharWidthAndBounds: 49,\n        setStrokeColorSpace: 50,\n        setFillColorSpace: 51,\n        setStrokeColor: 52,\n        setStrokeColorN: 53,\n        setFillColor: 54,\n        setFillColorN: 55,\n        setStrokeGray: 56,\n        setFillGray: 57,\n        setStrokeRGBColor: 58,\n        setFillRGBColor: 59,\n        setStrokeCMYKColor: 60,\n        setFillCMYKColor: 61,\n        shadingFill: 62,\n        beginInlineImage: 63,\n        beginImageData: 64,\n        endInlineImage: 65,\n        paintXObject: 66,\n        markPoint: 67,\n        markPointProps: 68,\n        beginMarkedContent: 69,\n        beginMarkedContentProps: 70,\n        endMarkedContent: 71,\n        beginCompat: 72,\n        endCompat: 73,\n        paintFormXObjectBegin: 74,\n        paintFormXObjectEnd: 75,\n        beginGroup: 76,\n        endGroup: 77,\n        beginAnnotations: 78,\n        endAnnotations: 79,\n        beginAnnotation: 80,\n        endAnnotation: 81,\n        paintJpegXObject: 82,\n        paintImageMaskXObject: 83,\n        paintImageMaskXObjectGroup: 84,\n        paintImageXObject: 85,\n        paintInlineImageXObject: 86,\n        paintInlineImageXObjectGroup: 87,\n        paintImageXObjectRepeat: 88,\n        paintImageMaskXObjectRepeat: 89,\n        paintSolidColorImageMask: 90,\n        constructPath: 91\n      };\n      exports.OPS = OPS;\n      const UNSUPPORTED_FEATURES = {\n        unknown: \"unknown\",\n        forms: \"forms\",\n        javaScript: \"javaScript\",\n        smask: \"smask\",\n        shadingPattern: \"shadingPattern\",\n        font: \"font\"\n      };\n      exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n      const PasswordResponses = {\n        NEED_PASSWORD: 1,\n        INCORRECT_PASSWORD: 2\n      };\n      exports.PasswordResponses = PasswordResponses;\n      let verbosity = VerbosityLevel.WARNINGS;\n\n      function setVerbosityLevel(level) {\n        if (Number.isInteger(level)) {\n          verbosity = level;\n        }\n      }\n\n      function getVerbosityLevel() {\n        return verbosity;\n      }\n\n      function info(msg) {\n        if (verbosity >= VerbosityLevel.INFOS) {\n          console.log(`Info: ${msg}`);\n        }\n      }\n\n      function warn(msg) {\n        if (verbosity >= VerbosityLevel.WARNINGS) {\n          console.log(`Warning: ${msg}`);\n        }\n      }\n\n      function unreachable(msg) {\n        throw new Error(msg);\n      }\n\n      function assert(cond, msg) {\n        if (!cond) {\n          unreachable(msg);\n        }\n      }\n\n      function isSameOrigin(baseUrl, otherUrl) {\n        let base;\n\n        try {\n          base = new URL(baseUrl);\n\n          if (!base.origin || base.origin === \"null\") {\n            return false;\n          }\n        } catch (e) {\n          return false;\n        }\n\n        const other = new URL(otherUrl, base);\n        return base.origin === other.origin;\n      }\n\n      function _isValidProtocol(url) {\n        if (!url) {\n          return false;\n        }\n\n        switch (url.protocol) {\n          case \"http:\":\n          case \"https:\":\n          case \"ftp:\":\n          case \"mailto:\":\n          case \"tel:\":\n            return true;\n\n          default:\n            return false;\n        }\n      }\n\n      function createValidAbsoluteUrl(url, baseUrl) {\n        if (!url) {\n          return null;\n        }\n\n        try {\n          const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n\n          if (_isValidProtocol(absoluteUrl)) {\n            return absoluteUrl;\n          }\n        } catch (ex) {}\n\n        return null;\n      }\n\n      function shadow(obj, prop, value) {\n        Object.defineProperty(obj, prop, {\n          value,\n          enumerable: true,\n          configurable: true,\n          writable: false\n        });\n        return value;\n      }\n\n      const BaseException = function BaseExceptionClosure() {\n        function BaseException(message) {\n          if (this.constructor === BaseException) {\n            unreachable(\"Cannot initialize BaseException.\");\n          }\n\n          this.message = message;\n          this.name = this.constructor.name;\n        }\n\n        BaseException.prototype = new Error();\n        BaseException.constructor = BaseException;\n        return BaseException;\n      }();\n\n      exports.BaseException = BaseException;\n\n      class PasswordException extends BaseException {\n        constructor(msg, code) {\n          super(msg);\n          this.code = code;\n        }\n\n      }\n\n      exports.PasswordException = PasswordException;\n\n      class UnknownErrorException extends BaseException {\n        constructor(msg, details) {\n          super(msg);\n          this.details = details;\n        }\n\n      }\n\n      exports.UnknownErrorException = UnknownErrorException;\n\n      class InvalidPDFException extends BaseException {}\n\n      exports.InvalidPDFException = InvalidPDFException;\n\n      class MissingPDFException extends BaseException {}\n\n      exports.MissingPDFException = MissingPDFException;\n\n      class UnexpectedResponseException extends BaseException {\n        constructor(msg, status) {\n          super(msg);\n          this.status = status;\n        }\n\n      }\n\n      exports.UnexpectedResponseException = UnexpectedResponseException;\n\n      class FormatError extends BaseException {}\n\n      exports.FormatError = FormatError;\n\n      class AbortException extends BaseException {}\n\n      exports.AbortException = AbortException;\n      const NullCharactersRegExp = /\\x00/g;\n\n      function removeNullCharacters(str) {\n        if (typeof str !== \"string\") {\n          warn(\"The argument for removeNullCharacters must be a string.\");\n          return str;\n        }\n\n        return str.replace(NullCharactersRegExp, \"\");\n      }\n\n      function bytesToString(bytes) {\n        assert(bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined, \"Invalid argument for bytesToString\");\n        const length = bytes.length;\n        const MAX_ARGUMENT_COUNT = 8192;\n\n        if (length < MAX_ARGUMENT_COUNT) {\n          return String.fromCharCode.apply(null, bytes);\n        }\n\n        const strBuf = [];\n\n        for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n          const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n          const chunk = bytes.subarray(i, chunkEnd);\n          strBuf.push(String.fromCharCode.apply(null, chunk));\n        }\n\n        return strBuf.join(\"\");\n      }\n\n      function stringToBytes(str) {\n        assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n        const length = str.length;\n        const bytes = new Uint8Array(length);\n\n        for (let i = 0; i < length; ++i) {\n          bytes[i] = str.charCodeAt(i) & 0xff;\n        }\n\n        return bytes;\n      }\n\n      function arrayByteLength(arr) {\n        if (arr.length !== undefined) {\n          return arr.length;\n        }\n\n        assert(arr.byteLength !== undefined);\n        return arr.byteLength;\n      }\n\n      function arraysToBytes(arr) {\n        const length = arr.length;\n\n        if (length === 1 && arr[0] instanceof Uint8Array) {\n          return arr[0];\n        }\n\n        let resultLength = 0;\n\n        for (let i = 0; i < length; i++) {\n          resultLength += arrayByteLength(arr[i]);\n        }\n\n        let pos = 0;\n        const data = new Uint8Array(resultLength);\n\n        for (let i = 0; i < length; i++) {\n          let item = arr[i];\n\n          if (!(item instanceof Uint8Array)) {\n            if (typeof item === \"string\") {\n              item = stringToBytes(item);\n            } else {\n              item = new Uint8Array(item);\n            }\n          }\n\n          const itemLength = item.byteLength;\n          data.set(item, pos);\n          pos += itemLength;\n        }\n\n        return data;\n      }\n\n      function string32(value) {\n        return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n      }\n\n      function isLittleEndian() {\n        const buffer8 = new Uint8Array(4);\n        buffer8[0] = 1;\n        const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n        return view32[0] === 1;\n      }\n\n      const IsLittleEndianCached = {\n        get value() {\n          return shadow(this, \"value\", isLittleEndian());\n        }\n\n      };\n      exports.IsLittleEndianCached = IsLittleEndianCached;\n\n      function isEvalSupported() {\n        try {\n          new Function(\"\");\n          return true;\n        } catch (e) {\n          return false;\n        }\n      }\n\n      const IsEvalSupportedCached = {\n        get value() {\n          return shadow(this, \"value\", isEvalSupported());\n        }\n\n      };\n      exports.IsEvalSupportedCached = IsEvalSupportedCached;\n      const rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n\n      class Util {\n        static makeCssRgb(r, g, b) {\n          rgbBuf[1] = r;\n          rgbBuf[3] = g;\n          rgbBuf[5] = b;\n          return rgbBuf.join(\"\");\n        }\n\n        static transform(m1, m2) {\n          return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n        }\n\n        static applyTransform(p, m) {\n          const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n          const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n          return [xt, yt];\n        }\n\n        static applyInverseTransform(p, m) {\n          const d = m[0] * m[3] - m[1] * m[2];\n          const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n          const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n          return [xt, yt];\n        }\n\n        static getAxialAlignedBoundingBox(r, m) {\n          const p1 = Util.applyTransform(r, m);\n          const p2 = Util.applyTransform(r.slice(2, 4), m);\n          const p3 = Util.applyTransform([r[0], r[3]], m);\n          const p4 = Util.applyTransform([r[2], r[1]], m);\n          return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n        }\n\n        static inverseTransform(m) {\n          const d = m[0] * m[3] - m[1] * m[2];\n          return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n        }\n\n        static apply3dTransform(m, v) {\n          return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n        }\n\n        static singularValueDecompose2dScale(m) {\n          const transpose = [m[0], m[2], m[1], m[3]];\n          const a = m[0] * transpose[0] + m[1] * transpose[2];\n          const b = m[0] * transpose[1] + m[1] * transpose[3];\n          const c = m[2] * transpose[0] + m[3] * transpose[2];\n          const d = m[2] * transpose[1] + m[3] * transpose[3];\n          const first = (a + d) / 2;\n          const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n          const sx = first + second || 1;\n          const sy = first - second || 1;\n          return [Math.sqrt(sx), Math.sqrt(sy)];\n        }\n\n        static normalizeRect(rect) {\n          const r = rect.slice(0);\n\n          if (rect[0] > rect[2]) {\n            r[0] = rect[2];\n            r[2] = rect[0];\n          }\n\n          if (rect[1] > rect[3]) {\n            r[1] = rect[3];\n            r[3] = rect[1];\n          }\n\n          return r;\n        }\n\n        static intersect(rect1, rect2) {\n          function compare(a, b) {\n            return a - b;\n          }\n\n          const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n          const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n          const result = [];\n          rect1 = Util.normalizeRect(rect1);\n          rect2 = Util.normalizeRect(rect2);\n\n          if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n            result[0] = orderedX[1];\n            result[2] = orderedX[2];\n          } else {\n            return null;\n          }\n\n          if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n            result[1] = orderedY[1];\n            result[3] = orderedY[2];\n          } else {\n            return null;\n          }\n\n          return result;\n        }\n\n      }\n\n      exports.Util = Util;\n      const PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\n\n      function stringToPDFString(str) {\n        const length = str.length,\n              strBuf = [];\n\n        if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n          for (let i = 2; i < length; i += 2) {\n            strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n          }\n        } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n          for (let i = 2; i < length; i += 2) {\n            strBuf.push(String.fromCharCode(str.charCodeAt(i + 1) << 8 | str.charCodeAt(i)));\n          }\n        } else {\n          for (let i = 0; i < length; ++i) {\n            const code = PDFStringTranslateTable[str.charCodeAt(i)];\n            strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n          }\n        }\n\n        return strBuf.join(\"\");\n      }\n\n      function stringToUTF8String(str) {\n        return decodeURIComponent(escape(str));\n      }\n\n      function utf8StringToString(str) {\n        return unescape(encodeURIComponent(str));\n      }\n\n      function isEmptyObj(obj) {\n        for (const key in obj) {\n          return false;\n        }\n\n        return true;\n      }\n\n      function isBool(v) {\n        return typeof v === \"boolean\";\n      }\n\n      function isNum(v) {\n        return typeof v === \"number\";\n      }\n\n      function isString(v) {\n        return typeof v === \"string\";\n      }\n\n      function isArrayBuffer(v) {\n        return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n      }\n\n      function isArrayEqual(arr1, arr2) {\n        if (arr1.length !== arr2.length) {\n          return false;\n        }\n\n        return arr1.every(function (element, index) {\n          return element === arr2[index];\n        });\n      }\n\n      function createPromiseCapability() {\n        const capability = Object.create(null);\n        let isSettled = false;\n        Object.defineProperty(capability, \"settled\", {\n          get() {\n            return isSettled;\n          }\n\n        });\n        capability.promise = new Promise(function (resolve, reject) {\n          capability.resolve = function (data) {\n            isSettled = true;\n            resolve(data);\n          };\n\n          capability.reject = function (reason) {\n            isSettled = true;\n            reject(reason);\n          };\n        });\n        return capability;\n      }\n\n      const createObjectURL = function createObjectURLClosure() {\n        const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n        return function createObjectURL(data, contentType) {\n          let forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n          if (!forceDataSchema && URL.createObjectURL) {\n            const blob = new Blob([data], {\n              type: contentType\n            });\n            return URL.createObjectURL(blob);\n          }\n\n          let buffer = `data:${contentType};base64,`;\n\n          for (let i = 0, ii = data.length; i < ii; i += 3) {\n            const b1 = data[i] & 0xff;\n            const b2 = data[i + 1] & 0xff;\n            const b3 = data[i + 2] & 0xff;\n            const d1 = b1 >> 2,\n                  d2 = (b1 & 3) << 4 | b2 >> 4;\n            const d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n            const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n            buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n          }\n\n          return buffer;\n        };\n      }();\n\n      exports.createObjectURL = createObjectURL;\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      ;\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getDocument = getDocument;\n      exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;\n      exports.build = exports.version = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFWorker = exports.PDFDataRangeTransport = exports.LoopbackPort = void 0;\n\n      var _util = __w_pdfjs_require__(1);\n\n      var _display_utils = __w_pdfjs_require__(4);\n\n      var _font_loader = __w_pdfjs_require__(5);\n\n      var _api_compatibility = __w_pdfjs_require__(6);\n\n      var _canvas = __w_pdfjs_require__(8);\n\n      var _worker_options = __w_pdfjs_require__(10);\n\n      var _is_node = __w_pdfjs_require__(7);\n\n      var _message_handler = __w_pdfjs_require__(11);\n\n      var _metadata = __w_pdfjs_require__(12);\n\n      var _transport_stream = __w_pdfjs_require__(14);\n\n      var _webgl = __w_pdfjs_require__(15);\n\n      const DEFAULT_RANGE_CHUNK_SIZE = 65536;\n      const RENDERING_CANCELLED_TIMEOUT = 100;\n      let createPDFNetworkStream;\n\n      function setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n        createPDFNetworkStream = pdfNetworkStreamFactory;\n      }\n\n      function getDocument(src) {\n        const task = new PDFDocumentLoadingTask();\n        let source;\n\n        if (typeof src === \"string\") {\n          source = {\n            url: src\n          };\n        } else if ((0, _util.isArrayBuffer)(src)) {\n          source = {\n            data: src\n          };\n        } else if (src instanceof PDFDataRangeTransport) {\n          source = {\n            range: src\n          };\n        } else {\n          if (typeof src !== \"object\") {\n            throw new Error(\"Invalid parameter in getDocument, \" + \"need either Uint8Array, string or a parameter object\");\n          }\n\n          if (!src.url && !src.data && !src.range) {\n            throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n          }\n\n          source = src;\n        }\n\n        const params = Object.create(null);\n        let rangeTransport = null,\n            worker = null;\n\n        for (const key in source) {\n          if (key === \"url\" && typeof window !== \"undefined\") {\n            params[key] = new URL(source[key], window.location).href;\n            continue;\n          } else if (key === \"range\") {\n            rangeTransport = source[key];\n            continue;\n          } else if (key === \"worker\") {\n            worker = source[key];\n            continue;\n          } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n            const pdfBytes = source[key];\n\n            if (typeof pdfBytes === \"string\") {\n              params[key] = (0, _util.stringToBytes)(pdfBytes);\n            } else if (typeof pdfBytes === \"object\" && pdfBytes !== null && !isNaN(pdfBytes.length)) {\n              params[key] = new Uint8Array(pdfBytes);\n            } else if ((0, _util.isArrayBuffer)(pdfBytes)) {\n              params[key] = new Uint8Array(pdfBytes);\n            } else {\n              throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string or array-like object is expected in the \" + \"data property.\");\n            }\n\n            continue;\n          }\n\n          params[key] = source[key];\n        }\n\n        params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n        params.CMapReaderFactory = params.CMapReaderFactory || _display_utils.DOMCMapReaderFactory;\n        params.ignoreErrors = params.stopAtErrors !== true;\n        params.pdfBug = params.pdfBug === true;\n        const NativeImageDecoderValues = Object.values(_util.NativeImageDecoding);\n\n        if (params.nativeImageDecoderSupport === undefined || !NativeImageDecoderValues.includes(params.nativeImageDecoderSupport)) {\n          params.nativeImageDecoderSupport = _api_compatibility.apiCompatibilityParams.nativeImageDecoderSupport || _util.NativeImageDecoding.DECODE;\n        }\n\n        if (!Number.isInteger(params.maxImageSize)) {\n          params.maxImageSize = -1;\n        }\n\n        if (typeof params.isEvalSupported !== \"boolean\") {\n          params.isEvalSupported = true;\n        }\n\n        if (typeof params.disableFontFace !== \"boolean\") {\n          params.disableFontFace = _api_compatibility.apiCompatibilityParams.disableFontFace || false;\n        }\n\n        if (typeof params.disableRange !== \"boolean\") {\n          params.disableRange = false;\n        }\n\n        if (typeof params.disableStream !== \"boolean\") {\n          params.disableStream = false;\n        }\n\n        if (typeof params.disableAutoFetch !== \"boolean\") {\n          params.disableAutoFetch = false;\n        }\n\n        if (typeof params.disableCreateObjectURL !== \"boolean\") {\n          params.disableCreateObjectURL = _api_compatibility.apiCompatibilityParams.disableCreateObjectURL || false;\n        }\n\n        (0, _util.setVerbosityLevel)(params.verbosity);\n\n        if (!worker) {\n          const workerParams = {\n            verbosity: params.verbosity,\n            port: _worker_options.GlobalWorkerOptions.workerPort\n          };\n          worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n          task._worker = worker;\n        }\n\n        const docId = task.docId;\n        worker.promise.then(function () {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          return _fetchDocument(worker, params, rangeTransport, docId).then(function (workerId) {\n            if (task.destroyed) {\n              throw new Error(\"Loading aborted\");\n            }\n\n            let networkStream;\n\n            if (rangeTransport) {\n              networkStream = new _transport_stream.PDFDataTransportStream({\n                length: params.length,\n                initialData: params.initialData,\n                progressiveDone: params.progressiveDone,\n                disableRange: params.disableRange,\n                disableStream: params.disableStream\n              }, rangeTransport);\n            } else if (!params.data) {\n              networkStream = createPDFNetworkStream({\n                url: params.url,\n                length: params.length,\n                httpHeaders: params.httpHeaders,\n                withCredentials: params.withCredentials,\n                rangeChunkSize: params.rangeChunkSize,\n                disableRange: params.disableRange,\n                disableStream: params.disableStream\n              });\n            }\n\n            const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n            messageHandler.postMessageTransfers = worker.postMessageTransfers;\n            const transport = new WorkerTransport(messageHandler, task, networkStream, params);\n            task._transport = transport;\n            messageHandler.send(\"Ready\", null);\n          });\n        }).catch(task._capability.reject);\n        return task;\n      }\n\n      function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n        if (worker.destroyed) {\n          return Promise.reject(new Error(\"Worker was destroyed\"));\n        }\n\n        if (pdfDataRangeTransport) {\n          source.length = pdfDataRangeTransport.length;\n          source.initialData = pdfDataRangeTransport.initialData;\n          source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n        }\n\n        return worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\n          docId,\n          apiVersion: '2.4.456',\n          source: {\n            data: source.data,\n            url: source.url,\n            password: source.password,\n            disableAutoFetch: source.disableAutoFetch,\n            rangeChunkSize: source.rangeChunkSize,\n            length: source.length\n          },\n          maxImageSize: source.maxImageSize,\n          disableFontFace: source.disableFontFace,\n          disableCreateObjectURL: source.disableCreateObjectURL,\n          postMessageTransfers: worker.postMessageTransfers,\n          docBaseUrl: source.docBaseUrl,\n          nativeImageDecoderSupport: source.nativeImageDecoderSupport,\n          ignoreErrors: source.ignoreErrors,\n          isEvalSupported: source.isEvalSupported\n        }).then(function (workerId) {\n          if (worker.destroyed) {\n            throw new Error(\"Worker was destroyed\");\n          }\n\n          return workerId;\n        });\n      }\n\n      const PDFDocumentLoadingTask = function PDFDocumentLoadingTaskClosure() {\n        let nextDocumentId = 0;\n\n        class PDFDocumentLoadingTask {\n          constructor() {\n            this._capability = (0, _util.createPromiseCapability)();\n            this._transport = null;\n            this._worker = null;\n            this.docId = \"d\" + nextDocumentId++;\n            this.destroyed = false;\n            this.onPassword = null;\n            this.onProgress = null;\n            this.onUnsupportedFeature = null;\n          }\n\n          get promise() {\n            return this._capability.promise;\n          }\n\n          destroy() {\n            this.destroyed = true;\n            const transportDestroyed = !this._transport ? Promise.resolve() : this._transport.destroy();\n            return transportDestroyed.then(() => {\n              this._transport = null;\n\n              if (this._worker) {\n                this._worker.destroy();\n\n                this._worker = null;\n              }\n            });\n          }\n\n          then(onFulfilled, onRejected) {\n            throw new Error(\"Removed API method: \" + \"PDFDocumentLoadingTask.then, use the `promise` getter instead.\");\n          }\n\n        }\n\n        return PDFDocumentLoadingTask;\n      }();\n\n      class PDFDataRangeTransport {\n        constructor(length, initialData) {\n          let progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          this.length = length;\n          this.initialData = initialData;\n          this.progressiveDone = progressiveDone;\n          this._rangeListeners = [];\n          this._progressListeners = [];\n          this._progressiveReadListeners = [];\n          this._progressiveDoneListeners = [];\n          this._readyCapability = (0, _util.createPromiseCapability)();\n        }\n\n        addRangeListener(listener) {\n          this._rangeListeners.push(listener);\n        }\n\n        addProgressListener(listener) {\n          this._progressListeners.push(listener);\n        }\n\n        addProgressiveReadListener(listener) {\n          this._progressiveReadListeners.push(listener);\n        }\n\n        addProgressiveDoneListener(listener) {\n          this._progressiveDoneListeners.push(listener);\n        }\n\n        onDataRange(begin, chunk) {\n          for (const listener of this._rangeListeners) {\n            listener(begin, chunk);\n          }\n        }\n\n        onDataProgress(loaded, total) {\n          this._readyCapability.promise.then(() => {\n            for (const listener of this._progressListeners) {\n              listener(loaded, total);\n            }\n          });\n        }\n\n        onDataProgressiveRead(chunk) {\n          this._readyCapability.promise.then(() => {\n            for (const listener of this._progressiveReadListeners) {\n              listener(chunk);\n            }\n          });\n        }\n\n        onDataProgressiveDone() {\n          this._readyCapability.promise.then(() => {\n            for (const listener of this._progressiveDoneListeners) {\n              listener();\n            }\n          });\n        }\n\n        transportReady() {\n          this._readyCapability.resolve();\n        }\n\n        requestDataRange(begin, end) {\n          (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n        }\n\n        abort() {}\n\n      }\n\n      exports.PDFDataRangeTransport = PDFDataRangeTransport;\n\n      class PDFDocumentProxy {\n        constructor(pdfInfo, transport) {\n          this._pdfInfo = pdfInfo;\n          this._transport = transport;\n        }\n\n        get numPages() {\n          return this._pdfInfo.numPages;\n        }\n\n        get fingerprint() {\n          return this._pdfInfo.fingerprint;\n        }\n\n        getPage(pageNumber) {\n          return this._transport.getPage(pageNumber);\n        }\n\n        getPageIndex(ref) {\n          return this._transport.getPageIndex(ref);\n        }\n\n        getDestinations() {\n          return this._transport.getDestinations();\n        }\n\n        getDestination(id) {\n          return this._transport.getDestination(id);\n        }\n\n        getPageLabels() {\n          return this._transport.getPageLabels();\n        }\n\n        getPageLayout() {\n          return this._transport.getPageLayout();\n        }\n\n        getPageMode() {\n          return this._transport.getPageMode();\n        }\n\n        getViewerPreferences() {\n          return this._transport.getViewerPreferences();\n        }\n\n        getOpenAction() {\n          return this._transport.getOpenAction();\n        }\n\n        getOpenActionDestination() {\n          (0, _display_utils.deprecated)(\"getOpenActionDestination, use getOpenAction instead.\");\n          return this.getOpenAction().then(function (openAction) {\n            return openAction && openAction.dest ? openAction.dest : null;\n          });\n        }\n\n        getAttachments() {\n          return this._transport.getAttachments();\n        }\n\n        getJavaScript() {\n          return this._transport.getJavaScript();\n        }\n\n        getOutline() {\n          return this._transport.getOutline();\n        }\n\n        getPermissions() {\n          return this._transport.getPermissions();\n        }\n\n        getMetadata() {\n          return this._transport.getMetadata();\n        }\n\n        getData() {\n          return this._transport.getData();\n        }\n\n        getDownloadInfo() {\n          return this._transport.downloadInfoCapability.promise;\n        }\n\n        getStats() {\n          return this._transport.getStats();\n        }\n\n        cleanup() {\n          return this._transport.startCleanup();\n        }\n\n        destroy() {\n          return this.loadingTask.destroy();\n        }\n\n        get loadingParams() {\n          return this._transport.loadingParams;\n        }\n\n        get loadingTask() {\n          return this._transport.loadingTask;\n        }\n\n      }\n\n      exports.PDFDocumentProxy = PDFDocumentProxy;\n\n      class PDFPageProxy {\n        constructor(pageIndex, pageInfo, transport) {\n          let pdfBug = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n          this._pageIndex = pageIndex;\n          this._pageInfo = pageInfo;\n          this._transport = transport;\n          this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n          this._pdfBug = pdfBug;\n          this.commonObjs = transport.commonObjs;\n          this.objs = new PDFObjects();\n          this.cleanupAfterRender = false;\n          this.pendingCleanup = false;\n          this.intentStates = Object.create(null);\n          this.destroyed = false;\n        }\n\n        get pageNumber() {\n          return this._pageIndex + 1;\n        }\n\n        get rotate() {\n          return this._pageInfo.rotate;\n        }\n\n        get ref() {\n          return this._pageInfo.ref;\n        }\n\n        get userUnit() {\n          return this._pageInfo.userUnit;\n        }\n\n        get view() {\n          return this._pageInfo.view;\n        }\n\n        getViewport() {\n          let {\n            scale,\n            rotation = this.rotate,\n            offsetX = 0,\n            offsetY = 0,\n            dontFlip = false\n          } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n          if (arguments.length > 1 || typeof arguments[0] === \"number\") {\n            throw new Error(\"PDFPageProxy.getViewport is called with obsolete arguments.\");\n          }\n\n          return new _display_utils.PageViewport({\n            viewBox: this.view,\n            scale,\n            rotation,\n            offsetX,\n            offsetY,\n            dontFlip\n          });\n        }\n\n        getAnnotations() {\n          let {\n            intent = null\n          } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n          if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n            this.annotationsPromise = this._transport.getAnnotations(this._pageIndex, intent);\n            this.annotationsIntent = intent;\n          }\n\n          return this.annotationsPromise;\n        }\n\n        render(_ref) {\n          let {\n            canvasContext,\n            viewport,\n            intent = \"display\",\n            enableWebGL = false,\n            renderInteractiveForms = false,\n            transform = null,\n            imageLayer = null,\n            canvasFactory = null,\n            background = null\n          } = _ref;\n\n          if (this._stats) {\n            this._stats.time(\"Overall\");\n          }\n\n          const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n          this.pendingCleanup = false;\n\n          if (!this.intentStates[renderingIntent]) {\n            this.intentStates[renderingIntent] = Object.create(null);\n          }\n\n          const intentState = this.intentStates[renderingIntent];\n\n          if (intentState.streamReaderCancelTimeout) {\n            clearTimeout(intentState.streamReaderCancelTimeout);\n            intentState.streamReaderCancelTimeout = null;\n          }\n\n          const canvasFactoryInstance = canvasFactory || new _display_utils.DOMCanvasFactory();\n          const webGLContext = new _webgl.WebGLContext({\n            enable: enableWebGL\n          });\n\n          if (!intentState.displayReadyCapability) {\n            intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\n            intentState.operatorList = {\n              fnArray: [],\n              argsArray: [],\n              lastChunk: false\n            };\n\n            if (this._stats) {\n              this._stats.time(\"Page Request\");\n            }\n\n            this._pumpOperatorList({\n              pageIndex: this._pageIndex,\n              intent: renderingIntent,\n              renderInteractiveForms: renderInteractiveForms === true\n            });\n          }\n\n          const complete = error => {\n            const i = intentState.renderTasks.indexOf(internalRenderTask);\n\n            if (i >= 0) {\n              intentState.renderTasks.splice(i, 1);\n            }\n\n            if (this.cleanupAfterRender || renderingIntent === \"print\") {\n              this.pendingCleanup = true;\n            }\n\n            this._tryCleanup();\n\n            if (error) {\n              internalRenderTask.capability.reject(error);\n\n              this._abortOperatorList({\n                intentState,\n                reason: error\n              });\n            } else {\n              internalRenderTask.capability.resolve();\n            }\n\n            if (this._stats) {\n              this._stats.timeEnd(\"Rendering\");\n\n              this._stats.timeEnd(\"Overall\");\n            }\n          };\n\n          const internalRenderTask = new InternalRenderTask({\n            callback: complete,\n            params: {\n              canvasContext,\n              viewport,\n              transform,\n              imageLayer,\n              background\n            },\n            objs: this.objs,\n            commonObjs: this.commonObjs,\n            operatorList: intentState.operatorList,\n            pageIndex: this._pageIndex,\n            canvasFactory: canvasFactoryInstance,\n            webGLContext,\n            useRequestAnimationFrame: renderingIntent !== \"print\",\n            pdfBug: this._pdfBug\n          });\n\n          if (!intentState.renderTasks) {\n            intentState.renderTasks = [];\n          }\n\n          intentState.renderTasks.push(internalRenderTask);\n          const renderTask = internalRenderTask.task;\n          intentState.displayReadyCapability.promise.then(transparency => {\n            if (this.pendingCleanup) {\n              complete();\n              return;\n            }\n\n            if (this._stats) {\n              this._stats.time(\"Rendering\");\n            }\n\n            internalRenderTask.initializeGraphics(transparency);\n            internalRenderTask.operatorListChanged();\n          }).catch(complete);\n          return renderTask;\n        }\n\n        getOperatorList() {\n          function operatorListChanged() {\n            if (intentState.operatorList.lastChunk) {\n              intentState.opListReadCapability.resolve(intentState.operatorList);\n              const i = intentState.renderTasks.indexOf(opListTask);\n\n              if (i >= 0) {\n                intentState.renderTasks.splice(i, 1);\n              }\n            }\n          }\n\n          const renderingIntent = \"oplist\";\n\n          if (!this.intentStates[renderingIntent]) {\n            this.intentStates[renderingIntent] = Object.create(null);\n          }\n\n          const intentState = this.intentStates[renderingIntent];\n          let opListTask;\n\n          if (!intentState.opListReadCapability) {\n            opListTask = {};\n            opListTask.operatorListChanged = operatorListChanged;\n            intentState.opListReadCapability = (0, _util.createPromiseCapability)();\n            intentState.renderTasks = [];\n            intentState.renderTasks.push(opListTask);\n            intentState.operatorList = {\n              fnArray: [],\n              argsArray: [],\n              lastChunk: false\n            };\n\n            if (this._stats) {\n              this._stats.time(\"Page Request\");\n            }\n\n            this._pumpOperatorList({\n              pageIndex: this._pageIndex,\n              intent: renderingIntent\n            });\n          }\n\n          return intentState.opListReadCapability.promise;\n        }\n\n        streamTextContent() {\n          let {\n            normalizeWhitespace = false,\n            disableCombineTextItems = false\n          } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          const TEXT_CONTENT_CHUNK_SIZE = 100;\n          return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n            pageIndex: this._pageIndex,\n            normalizeWhitespace: normalizeWhitespace === true,\n            combineTextItems: disableCombineTextItems !== true\n          }, {\n            highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n\n            size(textContent) {\n              return textContent.items.length;\n            }\n\n          });\n        }\n\n        getTextContent() {\n          let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          const readableStream = this.streamTextContent(params);\n          return new Promise(function (resolve, reject) {\n            function pump() {\n              reader.read().then(function (_ref2) {\n                let {\n                  value,\n                  done\n                } = _ref2;\n\n                if (done) {\n                  resolve(textContent);\n                  return;\n                }\n\n                Object.assign(textContent.styles, value.styles);\n                textContent.items.push(...value.items);\n                pump();\n              }, reject);\n            }\n\n            const reader = readableStream.getReader();\n            const textContent = {\n              items: [],\n              styles: Object.create(null)\n            };\n            pump();\n          });\n        }\n\n        _destroy() {\n          this.destroyed = true;\n          this._transport.pageCache[this._pageIndex] = null;\n          const waitOn = [];\n          Object.keys(this.intentStates).forEach(intent => {\n            const intentState = this.intentStates[intent];\n\n            this._abortOperatorList({\n              intentState,\n              reason: new Error(\"Page was destroyed.\"),\n              force: true\n            });\n\n            if (intent === \"oplist\") {\n              return;\n            }\n\n            intentState.renderTasks.forEach(function (renderTask) {\n              const renderCompleted = renderTask.capability.promise.catch(function () {});\n              waitOn.push(renderCompleted);\n              renderTask.cancel();\n            });\n          });\n          this.objs.clear();\n          this.annotationsPromise = null;\n          this.pendingCleanup = false;\n          return Promise.all(waitOn);\n        }\n\n        cleanup() {\n          let resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n          this.pendingCleanup = true;\n          return this._tryCleanup(resetStats);\n        }\n\n        _tryCleanup() {\n          let resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n          if (!this.pendingCleanup || Object.keys(this.intentStates).some(intent => {\n            const intentState = this.intentStates[intent];\n            return intentState.renderTasks.length !== 0 || !intentState.operatorList.lastChunk;\n          })) {\n            return false;\n          }\n\n          Object.keys(this.intentStates).forEach(intent => {\n            delete this.intentStates[intent];\n          });\n          this.objs.clear();\n          this.annotationsPromise = null;\n\n          if (resetStats && this._stats) {\n            this._stats = new _display_utils.StatTimer();\n          }\n\n          this.pendingCleanup = false;\n          return true;\n        }\n\n        _startRenderPage(transparency, intent) {\n          const intentState = this.intentStates[intent];\n\n          if (!intentState) {\n            return;\n          }\n\n          if (this._stats) {\n            this._stats.timeEnd(\"Page Request\");\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.resolve(transparency);\n          }\n        }\n\n        _renderPageChunk(operatorListChunk, intentState) {\n          for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n            intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n            intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n          }\n\n          intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n          for (let i = 0; i < intentState.renderTasks.length; i++) {\n            intentState.renderTasks[i].operatorListChanged();\n          }\n\n          if (operatorListChunk.lastChunk) {\n            this._tryCleanup();\n          }\n        }\n\n        _pumpOperatorList(args) {\n          (0, _util.assert)(args.intent, 'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.');\n\n          const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", args);\n\n          const reader = readableStream.getReader();\n          const intentState = this.intentStates[args.intent];\n          intentState.streamReader = reader;\n\n          const pump = () => {\n            reader.read().then(_ref3 => {\n              let {\n                value,\n                done\n              } = _ref3;\n\n              if (done) {\n                intentState.streamReader = null;\n                return;\n              }\n\n              if (this._transport.destroyed) {\n                return;\n              }\n\n              this._renderPageChunk(value, intentState);\n\n              pump();\n            }, reason => {\n              intentState.streamReader = null;\n\n              if (this._transport.destroyed) {\n                return;\n              }\n\n              if (intentState.operatorList) {\n                intentState.operatorList.lastChunk = true;\n\n                for (let i = 0; i < intentState.renderTasks.length; i++) {\n                  intentState.renderTasks[i].operatorListChanged();\n                }\n\n                this._tryCleanup();\n              }\n\n              if (intentState.displayReadyCapability) {\n                intentState.displayReadyCapability.reject(reason);\n              } else if (intentState.opListReadCapability) {\n                intentState.opListReadCapability.reject(reason);\n              } else {\n                throw reason;\n              }\n            });\n          };\n\n          pump();\n        }\n\n        _abortOperatorList(_ref4) {\n          let {\n            intentState,\n            reason,\n            force = false\n          } = _ref4;\n          (0, _util.assert)(reason instanceof Error || typeof reason === \"object\" && reason !== null, 'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.');\n\n          if (!intentState.streamReader) {\n            return;\n          }\n\n          if (!force) {\n            if (intentState.renderTasks.length !== 0) {\n              return;\n            }\n\n            if (reason instanceof _display_utils.RenderingCancelledException) {\n              intentState.streamReaderCancelTimeout = setTimeout(() => {\n                this._abortOperatorList({\n                  intentState,\n                  reason,\n                  force: true\n                });\n\n                intentState.streamReaderCancelTimeout = null;\n              }, RENDERING_CANCELLED_TIMEOUT);\n              return;\n            }\n          }\n\n          intentState.streamReader.cancel(new _util.AbortException(reason && reason.message));\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return;\n          }\n\n          Object.keys(this.intentStates).some(intent => {\n            if (this.intentStates[intent] === intentState) {\n              delete this.intentStates[intent];\n              return true;\n            }\n\n            return false;\n          });\n          this.cleanup();\n        }\n\n        get stats() {\n          return this._stats;\n        }\n\n      }\n\n      exports.PDFPageProxy = PDFPageProxy;\n\n      class LoopbackPort {\n        constructor() {\n          let defer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n          this._listeners = [];\n          this._defer = defer;\n          this._deferred = Promise.resolve(undefined);\n        }\n\n        postMessage(obj, transfers) {\n          function cloneValue(value) {\n            if (typeof value !== \"object\" || value === null) {\n              return value;\n            }\n\n            if (cloned.has(value)) {\n              return cloned.get(value);\n            }\n\n            let buffer, result;\n\n            if ((buffer = value.buffer) && (0, _util.isArrayBuffer)(buffer)) {\n              const transferable = transfers && transfers.includes(buffer);\n\n              if (transferable) {\n                result = new value.constructor(buffer, value.byteOffset, value.byteLength);\n              } else {\n                result = new value.constructor(value);\n              }\n\n              cloned.set(value, result);\n              return result;\n            }\n\n            result = Array.isArray(value) ? [] : {};\n            cloned.set(value, result);\n\n            for (const i in value) {\n              let desc,\n                  p = value;\n\n              while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n                p = Object.getPrototypeOf(p);\n              }\n\n              if (typeof desc.value === \"undefined\") {\n                continue;\n              }\n\n              if (typeof desc.value === \"function\") {\n                if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n                  throw new Error(`LoopbackPort.postMessage - cannot clone: ${value[i]}`);\n                }\n\n                continue;\n              }\n\n              result[i] = cloneValue(desc.value);\n            }\n\n            return result;\n          }\n\n          if (!this._defer) {\n            this._listeners.forEach(listener => {\n              listener.call(this, {\n                data: obj\n              });\n            });\n\n            return;\n          }\n\n          const cloned = new WeakMap();\n          const e = {\n            data: cloneValue(obj)\n          };\n\n          this._deferred.then(() => {\n            this._listeners.forEach(listener => {\n              listener.call(this, e);\n            });\n          });\n        }\n\n        addEventListener(name, listener) {\n          this._listeners.push(listener);\n        }\n\n        removeEventListener(name, listener) {\n          const i = this._listeners.indexOf(listener);\n\n          this._listeners.splice(i, 1);\n        }\n\n        terminate() {\n          this._listeners.length = 0;\n        }\n\n      }\n\n      exports.LoopbackPort = LoopbackPort;\n\n      const PDFWorker = function PDFWorkerClosure() {\n        const pdfWorkerPorts = new WeakMap();\n        let isWorkerDisabled = false;\n        let fallbackWorkerSrc;\n        let nextFakeWorkerId = 0;\n        let fakeWorkerCapability;\n\n        if (_is_node.isNodeJS && typeof require === \"function\") {\n          isWorkerDisabled = true;\n          fallbackWorkerSrc = \"./pdf.worker.js\";\n        } else if (typeof document === \"object\" && \"currentScript\" in document) {\n          const pdfjsFilePath = document.currentScript && document.currentScript.src;\n\n          if (pdfjsFilePath) {\n            fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n          }\n        }\n\n        function getWorkerSrc() {\n          if (_worker_options.GlobalWorkerOptions.workerSrc) {\n            return _worker_options.GlobalWorkerOptions.workerSrc;\n          }\n\n          if (typeof fallbackWorkerSrc !== \"undefined\") {\n            if (!_is_node.isNodeJS) {\n              (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n            }\n\n            return fallbackWorkerSrc;\n          }\n\n          throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n        }\n\n        function getMainThreadWorkerMessageHandler() {\n          let mainWorkerMessageHandler;\n\n          try {\n            mainWorkerMessageHandler = globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n          } catch (ex) {}\n\n          return mainWorkerMessageHandler || null;\n        }\n\n        function setupFakeWorkerGlobal() {\n          if (fakeWorkerCapability) {\n            return fakeWorkerCapability.promise;\n          }\n\n          fakeWorkerCapability = (0, _util.createPromiseCapability)();\n\n          const loader = async function () {\n            const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n            if (mainWorkerMessageHandler) {\n              return mainWorkerMessageHandler;\n            }\n\n            if (_is_node.isNodeJS && typeof require === \"function\") {\n              const worker = eval(\"require\")(getWorkerSrc());\n              return worker.WorkerMessageHandler;\n            }\n\n            await (0, _display_utils.loadScript)(getWorkerSrc());\n            return window.pdfjsWorker.WorkerMessageHandler;\n          };\n\n          loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n          return fakeWorkerCapability.promise;\n        }\n\n        function createCDNWrapper(url) {\n          const wrapper = \"importScripts('\" + url + \"');\";\n          return URL.createObjectURL(new Blob([wrapper]));\n        }\n\n        class PDFWorker {\n          constructor() {\n            let {\n              name = null,\n              port = null,\n              verbosity = (0, _util.getVerbosityLevel)()\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            if (port && pdfWorkerPorts.has(port)) {\n              throw new Error(\"Cannot use more than one PDFWorker per port\");\n            }\n\n            this.name = name;\n            this.destroyed = false;\n            this.postMessageTransfers = true;\n            this.verbosity = verbosity;\n            this._readyCapability = (0, _util.createPromiseCapability)();\n            this._port = null;\n            this._webWorker = null;\n            this._messageHandler = null;\n\n            if (port) {\n              pdfWorkerPorts.set(port, this);\n\n              this._initializeFromPort(port);\n\n              return;\n            }\n\n            this._initialize();\n          }\n\n          get promise() {\n            return this._readyCapability.promise;\n          }\n\n          get port() {\n            return this._port;\n          }\n\n          get messageHandler() {\n            return this._messageHandler;\n          }\n\n          _initializeFromPort(port) {\n            this._port = port;\n            this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n\n            this._messageHandler.on(\"ready\", function () {});\n\n            this._readyCapability.resolve();\n          }\n\n          _initialize() {\n            if (typeof Worker !== \"undefined\" && !isWorkerDisabled && !getMainThreadWorkerMessageHandler()) {\n              let workerSrc = getWorkerSrc();\n\n              try {\n                if (!(0, _util.isSameOrigin)(window.location.href, workerSrc)) {\n                  workerSrc = createCDNWrapper(new URL(workerSrc, window.location).href);\n                }\n\n                const worker = new Worker(workerSrc);\n                const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n\n                const terminateEarly = () => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n                  messageHandler.destroy();\n                  worker.terminate();\n\n                  if (this.destroyed) {\n                    this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                  } else {\n                    this._setupFakeWorker();\n                  }\n                };\n\n                const onWorkerError = () => {\n                  if (!this._webWorker) {\n                    terminateEarly();\n                  }\n                };\n\n                worker.addEventListener(\"error\", onWorkerError);\n                messageHandler.on(\"test\", data => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n\n                  if (this.destroyed) {\n                    terminateEarly();\n                    return;\n                  }\n\n                  if (data) {\n                    this._messageHandler = messageHandler;\n                    this._port = worker;\n                    this._webWorker = worker;\n\n                    if (!data.supportTransfers) {\n                      this.postMessageTransfers = false;\n                    }\n\n                    this._readyCapability.resolve();\n\n                    messageHandler.send(\"configure\", {\n                      verbosity: this.verbosity\n                    });\n                  } else {\n                    this._setupFakeWorker();\n\n                    messageHandler.destroy();\n                    worker.terminate();\n                  }\n                });\n                messageHandler.on(\"ready\", data => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n\n                  if (this.destroyed) {\n                    terminateEarly();\n                    return;\n                  }\n\n                  try {\n                    sendTest();\n                  } catch (e) {\n                    this._setupFakeWorker();\n                  }\n                });\n\n                const sendTest = () => {\n                  const testObj = new Uint8Array([this.postMessageTransfers ? 255 : 0]);\n\n                  try {\n                    messageHandler.send(\"test\", testObj, [testObj.buffer]);\n                  } catch (ex) {\n                    (0, _util.warn)(\"Cannot use postMessage transfers.\");\n                    testObj[0] = 0;\n                    messageHandler.send(\"test\", testObj);\n                  }\n                };\n\n                sendTest();\n                return;\n              } catch (e) {\n                (0, _util.info)(\"The worker has been disabled.\");\n              }\n            }\n\n            this._setupFakeWorker();\n          }\n\n          _setupFakeWorker() {\n            if (!isWorkerDisabled) {\n              (0, _util.warn)(\"Setting up fake worker.\");\n              isWorkerDisabled = true;\n            }\n\n            setupFakeWorkerGlobal().then(WorkerMessageHandler => {\n              if (this.destroyed) {\n                this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n\n                return;\n              }\n\n              const port = new LoopbackPort();\n              this._port = port;\n              const id = \"fake\" + nextFakeWorkerId++;\n              const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n              WorkerMessageHandler.setup(workerHandler, port);\n              const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n              this._messageHandler = messageHandler;\n\n              this._readyCapability.resolve();\n\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity\n              });\n            }).catch(reason => {\n              this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n            });\n          }\n\n          destroy() {\n            this.destroyed = true;\n\n            if (this._webWorker) {\n              this._webWorker.terminate();\n\n              this._webWorker = null;\n            }\n\n            pdfWorkerPorts.delete(this._port);\n            this._port = null;\n\n            if (this._messageHandler) {\n              this._messageHandler.destroy();\n\n              this._messageHandler = null;\n            }\n          }\n\n          static fromPort(params) {\n            if (!params || !params.port) {\n              throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n            }\n\n            if (pdfWorkerPorts.has(params.port)) {\n              return pdfWorkerPorts.get(params.port);\n            }\n\n            return new PDFWorker(params);\n          }\n\n          static getWorkerSrc() {\n            return getWorkerSrc();\n          }\n\n        }\n\n        return PDFWorker;\n      }();\n\n      exports.PDFWorker = PDFWorker;\n\n      class WorkerTransport {\n        constructor(messageHandler, loadingTask, networkStream, params) {\n          this.messageHandler = messageHandler;\n          this.loadingTask = loadingTask;\n          this.commonObjs = new PDFObjects();\n          this.fontLoader = new _font_loader.FontLoader({\n            docId: loadingTask.docId,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this)\n          });\n          this._params = params;\n          this.CMapReaderFactory = new params.CMapReaderFactory({\n            baseUrl: params.cMapUrl,\n            isCompressed: params.cMapPacked\n          });\n          this.destroyed = false;\n          this.destroyCapability = null;\n          this._passwordCapability = null;\n          this._networkStream = networkStream;\n          this._fullReader = null;\n          this._lastProgress = null;\n          this.pageCache = [];\n          this.pagePromises = [];\n          this.downloadInfoCapability = (0, _util.createPromiseCapability)();\n          this.setupMessageHandler();\n        }\n\n        destroy() {\n          if (this.destroyCapability) {\n            return this.destroyCapability.promise;\n          }\n\n          this.destroyed = true;\n          this.destroyCapability = (0, _util.createPromiseCapability)();\n\n          if (this._passwordCapability) {\n            this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n          }\n\n          const waitOn = [];\n          this.pageCache.forEach(function (page) {\n            if (page) {\n              waitOn.push(page._destroy());\n            }\n          });\n          this.pageCache.length = 0;\n          this.pagePromises.length = 0;\n          const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n          waitOn.push(terminated);\n          Promise.all(waitOn).then(() => {\n            this.fontLoader.clear();\n\n            if (this._networkStream) {\n              this._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n            }\n\n            if (this.messageHandler) {\n              this.messageHandler.destroy();\n              this.messageHandler = null;\n            }\n\n            this.destroyCapability.resolve();\n          }, this.destroyCapability.reject);\n          return this.destroyCapability.promise;\n        }\n\n        setupMessageHandler() {\n          const {\n            messageHandler,\n            loadingTask\n          } = this;\n          messageHandler.on(\"GetReader\", (data, sink) => {\n            (0, _util.assert)(this._networkStream);\n            this._fullReader = this._networkStream.getFullReader();\n\n            this._fullReader.onProgress = evt => {\n              this._lastProgress = {\n                loaded: evt.loaded,\n                total: evt.total\n              };\n            };\n\n            sink.onPull = () => {\n              this._fullReader.read().then(function (_ref5) {\n                let {\n                  value,\n                  done\n                } = _ref5;\n\n                if (done) {\n                  sink.close();\n                  return;\n                }\n\n                (0, _util.assert)((0, _util.isArrayBuffer)(value));\n                sink.enqueue(new Uint8Array(value), 1, [value]);\n              }).catch(reason => {\n                sink.error(reason);\n              });\n            };\n\n            sink.onCancel = reason => {\n              this._fullReader.cancel(reason);\n            };\n          });\n          messageHandler.on(\"ReaderHeadersReady\", data => {\n            const headersCapability = (0, _util.createPromiseCapability)();\n            const fullReader = this._fullReader;\n            fullReader.headersReady.then(() => {\n              if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n                if (this._lastProgress && loadingTask.onProgress) {\n                  loadingTask.onProgress(this._lastProgress);\n                }\n\n                fullReader.onProgress = evt => {\n                  if (loadingTask.onProgress) {\n                    loadingTask.onProgress({\n                      loaded: evt.loaded,\n                      total: evt.total\n                    });\n                  }\n                };\n              }\n\n              headersCapability.resolve({\n                isStreamingSupported: fullReader.isStreamingSupported,\n                isRangeSupported: fullReader.isRangeSupported,\n                contentLength: fullReader.contentLength\n              });\n            }, headersCapability.reject);\n            return headersCapability.promise;\n          });\n          messageHandler.on(\"GetRangeReader\", (data, sink) => {\n            (0, _util.assert)(this._networkStream);\n\n            const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n\n            if (!rangeReader) {\n              sink.close();\n              return;\n            }\n\n            sink.onPull = () => {\n              rangeReader.read().then(function (_ref6) {\n                let {\n                  value,\n                  done\n                } = _ref6;\n\n                if (done) {\n                  sink.close();\n                  return;\n                }\n\n                (0, _util.assert)((0, _util.isArrayBuffer)(value));\n                sink.enqueue(new Uint8Array(value), 1, [value]);\n              }).catch(reason => {\n                sink.error(reason);\n              });\n            };\n\n            sink.onCancel = reason => {\n              rangeReader.cancel(reason);\n            };\n          });\n          messageHandler.on(\"GetDoc\", _ref7 => {\n            let {\n              pdfInfo\n            } = _ref7;\n            this._numPages = pdfInfo.numPages;\n\n            loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n          });\n          messageHandler.on(\"DocException\", function (ex) {\n            let reason;\n\n            switch (ex.name) {\n              case \"PasswordException\":\n                reason = new _util.PasswordException(ex.message, ex.code);\n                break;\n\n              case \"InvalidPDFException\":\n                reason = new _util.InvalidPDFException(ex.message);\n                break;\n\n              case \"MissingPDFException\":\n                reason = new _util.MissingPDFException(ex.message);\n                break;\n\n              case \"UnexpectedResponseException\":\n                reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n                break;\n\n              case \"UnknownErrorException\":\n                reason = new _util.UnknownErrorException(ex.message, ex.details);\n                break;\n            }\n\n            loadingTask._capability.reject(reason);\n          });\n          messageHandler.on(\"PasswordRequest\", exception => {\n            this._passwordCapability = (0, _util.createPromiseCapability)();\n\n            if (loadingTask.onPassword) {\n              const updatePassword = password => {\n                this._passwordCapability.resolve({\n                  password\n                });\n              };\n\n              try {\n                loadingTask.onPassword(updatePassword, exception.code);\n              } catch (ex) {\n                this._passwordCapability.reject(ex);\n              }\n            } else {\n              this._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n            }\n\n            return this._passwordCapability.promise;\n          });\n          messageHandler.on(\"DataLoaded\", data => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: data.length,\n                total: data.length\n              });\n            }\n\n            this.downloadInfoCapability.resolve(data);\n          });\n          messageHandler.on(\"StartRenderPage\", data => {\n            if (this.destroyed) {\n              return;\n            }\n\n            const page = this.pageCache[data.pageIndex];\n\n            page._startRenderPage(data.transparency, data.intent);\n          });\n          messageHandler.on(\"commonobj\", data => {\n            if (this.destroyed) {\n              return;\n            }\n\n            const [id, type, exportedData] = data;\n\n            if (this.commonObjs.has(id)) {\n              return;\n            }\n\n            switch (type) {\n              case \"Font\":\n                const params = this._params;\n\n                if (\"error\" in exportedData) {\n                  const exportedError = exportedData.error;\n                  (0, _util.warn)(`Error during font loading: ${exportedError}`);\n                  this.commonObjs.resolve(id, exportedError);\n                  break;\n                }\n\n                let fontRegistry = null;\n\n                if (params.pdfBug && globalThis.FontInspector && globalThis.FontInspector.enabled) {\n                  fontRegistry = {\n                    registerFont(font, url) {\n                      globalThis.FontInspector.fontAdded(font, url);\n                    }\n\n                  };\n                }\n\n                const font = new _font_loader.FontFaceObject(exportedData, {\n                  isEvalSupported: params.isEvalSupported,\n                  disableFontFace: params.disableFontFace,\n                  ignoreErrors: params.ignoreErrors,\n                  onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n                  fontRegistry\n                });\n                this.fontLoader.bind(font).then(() => {\n                  this.commonObjs.resolve(id, font);\n                }, reason => {\n                  messageHandler.sendWithPromise(\"FontFallback\", {\n                    id\n                  }).finally(() => {\n                    this.commonObjs.resolve(id, font);\n                  });\n                });\n                break;\n\n              case \"FontPath\":\n              case \"FontType3Res\":\n                this.commonObjs.resolve(id, exportedData);\n                break;\n\n              default:\n                throw new Error(`Got unknown common object type ${type}`);\n            }\n          });\n          messageHandler.on(\"obj\", data => {\n            if (this.destroyed) {\n              return undefined;\n            }\n\n            const [id, pageIndex, type, imageData] = data;\n            const pageProxy = this.pageCache[pageIndex];\n\n            if (pageProxy.objs.has(id)) {\n              return undefined;\n            }\n\n            switch (type) {\n              case \"JpegStream\":\n                return new Promise((resolve, reject) => {\n                  const img = new Image();\n\n                  img.onload = function () {\n                    resolve(img);\n                  };\n\n                  img.onerror = function () {\n                    reject(new Error(\"Error during JPEG image loading\"));\n                    (0, _display_utils.releaseImageResources)(img);\n                  };\n\n                  img.src = imageData;\n                }).then(img => {\n                  pageProxy.objs.resolve(id, img);\n                });\n\n              case \"Image\":\n                pageProxy.objs.resolve(id, imageData);\n                const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n\n                if (imageData && \"data\" in imageData && imageData.data.length > MAX_IMAGE_SIZE_TO_STORE) {\n                  pageProxy.cleanupAfterRender = true;\n                }\n\n                break;\n\n              default:\n                throw new Error(`Got unknown object type ${type}`);\n            }\n\n            return undefined;\n          });\n          messageHandler.on(\"DocProgress\", data => {\n            if (this.destroyed) {\n              return;\n            }\n\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: data.loaded,\n                total: data.total\n              });\n            }\n          });\n          messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\n          messageHandler.on(\"JpegDecode\", data => {\n            if (this.destroyed) {\n              return Promise.reject(new Error(\"Worker was destroyed\"));\n            }\n\n            if (typeof document === \"undefined\") {\n              return Promise.reject(new Error('\"document\" is not defined.'));\n            }\n\n            const [imageUrl, components] = data;\n\n            if (components !== 3 && components !== 1) {\n              return Promise.reject(new Error(\"Only 3 components or 1 component can be returned\"));\n            }\n\n            return new Promise(function (resolve, reject) {\n              const img = new Image();\n\n              img.onload = function () {\n                const {\n                  width,\n                  height\n                } = img;\n                const size = width * height;\n                const rgbaLength = size * 4;\n                const buf = new Uint8ClampedArray(size * components);\n                let tmpCanvas = document.createElement(\"canvas\");\n                tmpCanvas.width = width;\n                tmpCanvas.height = height;\n                let tmpCtx = tmpCanvas.getContext(\"2d\");\n                tmpCtx.drawImage(img, 0, 0);\n                const data = tmpCtx.getImageData(0, 0, width, height).data;\n\n                if (components === 3) {\n                  for (let i = 0, j = 0; i < rgbaLength; i += 4, j += 3) {\n                    buf[j] = data[i];\n                    buf[j + 1] = data[i + 1];\n                    buf[j + 2] = data[i + 2];\n                  }\n                } else if (components === 1) {\n                  for (let i = 0, j = 0; i < rgbaLength; i += 4, j++) {\n                    buf[j] = data[i];\n                  }\n                }\n\n                resolve({\n                  data: buf,\n                  width,\n                  height\n                });\n                (0, _display_utils.releaseImageResources)(img);\n                tmpCanvas.width = 0;\n                tmpCanvas.height = 0;\n                tmpCanvas = null;\n                tmpCtx = null;\n              };\n\n              img.onerror = function () {\n                reject(new Error(\"JpegDecode failed to load image\"));\n                (0, _display_utils.releaseImageResources)(img);\n              };\n\n              img.src = imageUrl;\n            });\n          });\n          messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n            if (this.destroyed) {\n              sink.error(new Error(\"Worker was destroyed\"));\n              return;\n            }\n\n            let fetched = false;\n\n            sink.onPull = () => {\n              if (fetched) {\n                sink.close();\n                return;\n              }\n\n              fetched = true;\n              this.CMapReaderFactory.fetch(data).then(function (builtInCMap) {\n                sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n              }).catch(function (reason) {\n                sink.error(reason);\n              });\n            };\n          });\n        }\n\n        _onUnsupportedFeature(_ref8) {\n          let {\n            featureId\n          } = _ref8;\n\n          if (this.destroyed) {\n            return;\n          }\n\n          if (this.loadingTask.onUnsupportedFeature) {\n            this.loadingTask.onUnsupportedFeature(featureId);\n          }\n        }\n\n        getData() {\n          return this.messageHandler.sendWithPromise(\"GetData\", null);\n        }\n\n        getPage(pageNumber) {\n          if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n            return Promise.reject(new Error(\"Invalid page request\"));\n          }\n\n          const pageIndex = pageNumber - 1;\n\n          if (pageIndex in this.pagePromises) {\n            return this.pagePromises[pageIndex];\n          }\n\n          const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n            pageIndex\n          }).then(pageInfo => {\n            if (this.destroyed) {\n              throw new Error(\"Transport destroyed\");\n            }\n\n            const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.pdfBug);\n            this.pageCache[pageIndex] = page;\n            return page;\n          });\n          this.pagePromises[pageIndex] = promise;\n          return promise;\n        }\n\n        getPageIndex(ref) {\n          return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n            ref\n          }).catch(function (reason) {\n            return Promise.reject(new Error(reason));\n          });\n        }\n\n        getAnnotations(pageIndex, intent) {\n          return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n            pageIndex,\n            intent\n          });\n        }\n\n        getDestinations() {\n          return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n        }\n\n        getDestination(id) {\n          if (typeof id !== \"string\") {\n            return Promise.reject(new Error(\"Invalid destination request.\"));\n          }\n\n          return this.messageHandler.sendWithPromise(\"GetDestination\", {\n            id\n          });\n        }\n\n        getPageLabels() {\n          return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n        }\n\n        getPageLayout() {\n          return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n        }\n\n        getPageMode() {\n          return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n        }\n\n        getViewerPreferences() {\n          return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n        }\n\n        getOpenAction() {\n          return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n        }\n\n        getAttachments() {\n          return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n        }\n\n        getJavaScript() {\n          return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n        }\n\n        getOutline() {\n          return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n        }\n\n        getPermissions() {\n          return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n        }\n\n        getMetadata() {\n          return this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(results => {\n            return {\n              info: results[0],\n              metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n              contentDispositionFilename: this._fullReader ? this._fullReader.filename : null\n            };\n          });\n        }\n\n        getStats() {\n          return this.messageHandler.sendWithPromise(\"GetStats\", null);\n        }\n\n        startCleanup() {\n          return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n            for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n              const page = this.pageCache[i];\n\n              if (page) {\n                const cleanupSuccessful = page.cleanup();\n\n                if (!cleanupSuccessful) {\n                  throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n                }\n              }\n            }\n\n            this.commonObjs.clear();\n            this.fontLoader.clear();\n          });\n        }\n\n        get loadingParams() {\n          const params = this._params;\n          return (0, _util.shadow)(this, \"loadingParams\", {\n            disableAutoFetch: params.disableAutoFetch,\n            disableCreateObjectURL: params.disableCreateObjectURL,\n            disableFontFace: params.disableFontFace,\n            nativeImageDecoderSupport: params.nativeImageDecoderSupport\n          });\n        }\n\n      }\n\n      class PDFObjects {\n        constructor() {\n          this._objs = Object.create(null);\n        }\n\n        _ensureObj(objId) {\n          if (this._objs[objId]) {\n            return this._objs[objId];\n          }\n\n          return this._objs[objId] = {\n            capability: (0, _util.createPromiseCapability)(),\n            data: null,\n            resolved: false\n          };\n        }\n\n        get(objId) {\n          let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n          if (callback) {\n            this._ensureObj(objId).capability.promise.then(callback);\n\n            return null;\n          }\n\n          const obj = this._objs[objId];\n\n          if (!obj || !obj.resolved) {\n            throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n          }\n\n          return obj.data;\n        }\n\n        has(objId) {\n          const obj = this._objs[objId];\n          return obj ? obj.resolved : false;\n        }\n\n        resolve(objId, data) {\n          const obj = this._ensureObj(objId);\n\n          obj.resolved = true;\n          obj.data = data;\n          obj.capability.resolve(data);\n        }\n\n        clear() {\n          for (const objId in this._objs) {\n            const {\n              data\n            } = this._objs[objId];\n\n            if (typeof Image !== \"undefined\" && data instanceof Image) {\n              (0, _display_utils.releaseImageResources)(data);\n            }\n          }\n\n          this._objs = Object.create(null);\n        }\n\n      }\n\n      class RenderTask {\n        constructor(internalRenderTask) {\n          this._internalRenderTask = internalRenderTask;\n          this.onContinue = null;\n        }\n\n        get promise() {\n          return this._internalRenderTask.capability.promise;\n        }\n\n        cancel() {\n          this._internalRenderTask.cancel();\n        }\n\n        then(onFulfilled, onRejected) {\n          throw new Error(\"Removed API method: \" + \"RenderTask.then, use the `promise` getter instead.\");\n        }\n\n      }\n\n      const InternalRenderTask = function InternalRenderTaskClosure() {\n        const canvasInRendering = new WeakSet();\n\n        class InternalRenderTask {\n          constructor(_ref9) {\n            let {\n              callback,\n              params,\n              objs,\n              commonObjs,\n              operatorList,\n              pageIndex,\n              canvasFactory,\n              webGLContext,\n              useRequestAnimationFrame = false,\n              pdfBug = false\n            } = _ref9;\n            this.callback = callback;\n            this.params = params;\n            this.objs = objs;\n            this.commonObjs = commonObjs;\n            this.operatorListIdx = null;\n            this.operatorList = operatorList;\n            this._pageIndex = pageIndex;\n            this.canvasFactory = canvasFactory;\n            this.webGLContext = webGLContext;\n            this._pdfBug = pdfBug;\n            this.running = false;\n            this.graphicsReadyCallback = null;\n            this.graphicsReady = false;\n            this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n            this.cancelled = false;\n            this.capability = (0, _util.createPromiseCapability)();\n            this.task = new RenderTask(this);\n            this._continueBound = this._continue.bind(this);\n            this._scheduleNextBound = this._scheduleNext.bind(this);\n            this._nextBound = this._next.bind(this);\n            this._canvas = params.canvasContext.canvas;\n          }\n\n          initializeGraphics() {\n            let transparency = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (this.cancelled) {\n              return;\n            }\n\n            if (this._canvas) {\n              if (canvasInRendering.has(this._canvas)) {\n                throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n              }\n\n              canvasInRendering.add(this._canvas);\n            }\n\n            if (this._pdfBug && globalThis.StepperManager && globalThis.StepperManager.enabled) {\n              this.stepper = globalThis.StepperManager.create(this._pageIndex);\n              this.stepper.init(this.operatorList);\n              this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n            }\n\n            const {\n              canvasContext,\n              viewport,\n              transform,\n              imageLayer,\n              background\n            } = this.params;\n            this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext, imageLayer);\n            this.gfx.beginDrawing({\n              transform,\n              viewport,\n              transparency,\n              background\n            });\n            this.operatorListIdx = 0;\n            this.graphicsReady = true;\n\n            if (this.graphicsReadyCallback) {\n              this.graphicsReadyCallback();\n            }\n          }\n\n          cancel() {\n            let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n            this.running = false;\n            this.cancelled = true;\n\n            if (this.gfx) {\n              this.gfx.endDrawing();\n            }\n\n            if (this._canvas) {\n              canvasInRendering.delete(this._canvas);\n            }\n\n            this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, \"canvas\"));\n          }\n\n          operatorListChanged() {\n            if (!this.graphicsReady) {\n              if (!this.graphicsReadyCallback) {\n                this.graphicsReadyCallback = this._continueBound;\n              }\n\n              return;\n            }\n\n            if (this.stepper) {\n              this.stepper.updateOperatorList(this.operatorList);\n            }\n\n            if (this.running) {\n              return;\n            }\n\n            this._continue();\n          }\n\n          _continue() {\n            this.running = true;\n\n            if (this.cancelled) {\n              return;\n            }\n\n            if (this.task.onContinue) {\n              this.task.onContinue(this._scheduleNextBound);\n            } else {\n              this._scheduleNext();\n            }\n          }\n\n          _scheduleNext() {\n            if (this._useRequestAnimationFrame) {\n              window.requestAnimationFrame(() => {\n                this._nextBound().catch(this.cancel.bind(this));\n              });\n            } else {\n              Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n            }\n          }\n\n          async _next() {\n            if (this.cancelled) {\n              return;\n            }\n\n            this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n\n            if (this.operatorListIdx === this.operatorList.argsArray.length) {\n              this.running = false;\n\n              if (this.operatorList.lastChunk) {\n                this.gfx.endDrawing();\n\n                if (this._canvas) {\n                  canvasInRendering.delete(this._canvas);\n                }\n\n                this.callback();\n              }\n            }\n          }\n\n        }\n\n        return InternalRenderTask;\n      }();\n\n      const version = '2.4.456';\n      exports.version = version;\n      const build = '228a591c';\n      exports.build = build;\n      /***/\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.addLinkAttributes = addLinkAttributes;\n      exports.getFilenameFromUrl = getFilenameFromUrl;\n      exports.isFetchSupported = isFetchSupported;\n      exports.isValidFetchUrl = isValidFetchUrl;\n      exports.loadScript = loadScript;\n      exports.deprecated = deprecated;\n      exports.releaseImageResources = releaseImageResources;\n      exports.PDFDateString = exports.StatTimer = exports.DOMSVGFactory = exports.DOMCMapReaderFactory = exports.DOMCanvasFactory = exports.DEFAULT_LINK_REL = exports.LinkTarget = exports.RenderingCancelledException = exports.PageViewport = void 0;\n\n      var _util = __w_pdfjs_require__(1);\n\n      const DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\n      exports.DEFAULT_LINK_REL = DEFAULT_LINK_REL;\n      const SVG_NS = \"http://www.w3.org/2000/svg\";\n\n      class DOMCanvasFactory {\n        create(width, height) {\n          if (width <= 0 || height <= 0) {\n            throw new Error(\"Invalid canvas size\");\n          }\n\n          const canvas = document.createElement(\"canvas\");\n          const context = canvas.getContext(\"2d\");\n          canvas.width = width;\n          canvas.height = height;\n          return {\n            canvas,\n            context\n          };\n        }\n\n        reset(canvasAndContext, width, height) {\n          if (!canvasAndContext.canvas) {\n            throw new Error(\"Canvas is not specified\");\n          }\n\n          if (width <= 0 || height <= 0) {\n            throw new Error(\"Invalid canvas size\");\n          }\n\n          canvasAndContext.canvas.width = width;\n          canvasAndContext.canvas.height = height;\n        }\n\n        destroy(canvasAndContext) {\n          if (!canvasAndContext.canvas) {\n            throw new Error(\"Canvas is not specified\");\n          }\n\n          canvasAndContext.canvas.width = 0;\n          canvasAndContext.canvas.height = 0;\n          canvasAndContext.canvas = null;\n          canvasAndContext.context = null;\n        }\n\n      }\n\n      exports.DOMCanvasFactory = DOMCanvasFactory;\n\n      class DOMCMapReaderFactory {\n        constructor(_ref10) {\n          let {\n            baseUrl = null,\n            isCompressed = false\n          } = _ref10;\n          this.baseUrl = baseUrl;\n          this.isCompressed = isCompressed;\n        }\n\n        async fetch(_ref11) {\n          let {\n            name\n          } = _ref11;\n\n          if (!this.baseUrl) {\n            throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n          }\n\n          if (!name) {\n            throw new Error(\"CMap name must be specified.\");\n          }\n\n          const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n          const compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n\n          if (isFetchSupported() && isValidFetchUrl(url, document.baseURI)) {\n            return fetch(url).then(async response => {\n              if (!response.ok) {\n                throw new Error(response.statusText);\n              }\n\n              let cMapData;\n\n              if (this.isCompressed) {\n                cMapData = new Uint8Array(await response.arrayBuffer());\n              } else {\n                cMapData = (0, _util.stringToBytes)(await response.text());\n              }\n\n              return {\n                cMapData,\n                compressionType\n              };\n            }).catch(reason => {\n              throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}` + `CMap at: ${url}`);\n            });\n          }\n\n          return new Promise((resolve, reject) => {\n            const request = new XMLHttpRequest();\n            request.open(\"GET\", url, true);\n\n            if (this.isCompressed) {\n              request.responseType = \"arraybuffer\";\n            }\n\n            request.onreadystatechange = () => {\n              if (request.readyState !== XMLHttpRequest.DONE) {\n                return;\n              }\n\n              if (request.status === 200 || request.status === 0) {\n                let cMapData;\n\n                if (this.isCompressed && request.response) {\n                  cMapData = new Uint8Array(request.response);\n                } else if (!this.isCompressed && request.responseText) {\n                  cMapData = (0, _util.stringToBytes)(request.responseText);\n                }\n\n                if (cMapData) {\n                  resolve({\n                    cMapData,\n                    compressionType\n                  });\n                  return;\n                }\n              }\n\n              reject(new Error(request.statusText));\n            };\n\n            request.send(null);\n          }).catch(reason => {\n            throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}` + `CMap at: ${url}`);\n          });\n        }\n\n      }\n\n      exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n\n      class DOMSVGFactory {\n        create(width, height) {\n          (0, _util.assert)(width > 0 && height > 0, \"Invalid SVG dimensions\");\n          const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n          svg.setAttribute(\"version\", \"1.1\");\n          svg.setAttribute(\"width\", width + \"px\");\n          svg.setAttribute(\"height\", height + \"px\");\n          svg.setAttribute(\"preserveAspectRatio\", \"none\");\n          svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n          return svg;\n        }\n\n        createElement(type) {\n          (0, _util.assert)(typeof type === \"string\", \"Invalid SVG element type\");\n          return document.createElementNS(SVG_NS, type);\n        }\n\n      }\n\n      exports.DOMSVGFactory = DOMSVGFactory;\n\n      class PageViewport {\n        constructor(_ref12) {\n          let {\n            viewBox,\n            scale,\n            rotation,\n            offsetX = 0,\n            offsetY = 0,\n            dontFlip = false\n          } = _ref12;\n          this.viewBox = viewBox;\n          this.scale = scale;\n          this.rotation = rotation;\n          this.offsetX = offsetX;\n          this.offsetY = offsetY;\n          const centerX = (viewBox[2] + viewBox[0]) / 2;\n          const centerY = (viewBox[3] + viewBox[1]) / 2;\n          let rotateA, rotateB, rotateC, rotateD;\n          rotation = rotation % 360;\n          rotation = rotation < 0 ? rotation + 360 : rotation;\n\n          switch (rotation) {\n            case 180:\n              rotateA = -1;\n              rotateB = 0;\n              rotateC = 0;\n              rotateD = 1;\n              break;\n\n            case 90:\n              rotateA = 0;\n              rotateB = 1;\n              rotateC = 1;\n              rotateD = 0;\n              break;\n\n            case 270:\n              rotateA = 0;\n              rotateB = -1;\n              rotateC = -1;\n              rotateD = 0;\n              break;\n\n            default:\n              rotateA = 1;\n              rotateB = 0;\n              rotateC = 0;\n              rotateD = -1;\n              break;\n          }\n\n          if (dontFlip) {\n            rotateC = -rotateC;\n            rotateD = -rotateD;\n          }\n\n          let offsetCanvasX, offsetCanvasY;\n          let width, height;\n\n          if (rotateA === 0) {\n            offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n            offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n            width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n            height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n          } else {\n            offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n            offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n            width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n            height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n          }\n\n          this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n          this.width = width;\n          this.height = height;\n        }\n\n        clone() {\n          let {\n            scale = this.scale,\n            rotation = this.rotation,\n            offsetX = this.offsetX,\n            offsetY = this.offsetY,\n            dontFlip = false\n          } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          return new PageViewport({\n            viewBox: this.viewBox.slice(),\n            scale,\n            rotation,\n            offsetX,\n            offsetY,\n            dontFlip\n          });\n        }\n\n        convertToViewportPoint(x, y) {\n          return _util.Util.applyTransform([x, y], this.transform);\n        }\n\n        convertToViewportRectangle(rect) {\n          const topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n\n          const bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n\n          return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n        }\n\n        convertToPdfPoint(x, y) {\n          return _util.Util.applyInverseTransform([x, y], this.transform);\n        }\n\n      }\n\n      exports.PageViewport = PageViewport;\n\n      class RenderingCancelledException extends _util.BaseException {\n        constructor(msg, type) {\n          super(msg);\n          this.type = type;\n        }\n\n      }\n\n      exports.RenderingCancelledException = RenderingCancelledException;\n      const LinkTarget = {\n        NONE: 0,\n        SELF: 1,\n        BLANK: 2,\n        PARENT: 3,\n        TOP: 4\n      };\n      exports.LinkTarget = LinkTarget;\n\n      function addLinkAttributes(link) {\n        let {\n          url,\n          target,\n          rel,\n          enabled = true\n        } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        (0, _util.assert)(url && typeof url === \"string\", 'addLinkAttributes: A valid \"url\" parameter must provided.');\n        const urlNullRemoved = (0, _util.removeNullCharacters)(url);\n\n        if (enabled) {\n          link.href = link.title = urlNullRemoved;\n        } else {\n          link.href = \"\";\n          link.title = `Disabled: ${urlNullRemoved}`;\n\n          link.onclick = () => {\n            return false;\n          };\n        }\n\n        let targetStr = \"\";\n\n        switch (target) {\n          case LinkTarget.NONE:\n            break;\n\n          case LinkTarget.SELF:\n            targetStr = \"_self\";\n            break;\n\n          case LinkTarget.BLANK:\n            targetStr = \"_blank\";\n            break;\n\n          case LinkTarget.PARENT:\n            targetStr = \"_parent\";\n            break;\n\n          case LinkTarget.TOP:\n            targetStr = \"_top\";\n            break;\n        }\n\n        link.target = targetStr;\n        link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n      }\n\n      function getFilenameFromUrl(url) {\n        const anchor = url.indexOf(\"#\");\n        const query = url.indexOf(\"?\");\n        const end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\n        return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n      }\n\n      class StatTimer {\n        constructor() {\n          this.started = Object.create(null);\n          this.times = [];\n        }\n\n        time(name) {\n          if (name in this.started) {\n            (0, _util.warn)(`Timer is already running for ${name}`);\n          }\n\n          this.started[name] = Date.now();\n        }\n\n        timeEnd(name) {\n          if (!(name in this.started)) {\n            (0, _util.warn)(`Timer has not been started for ${name}`);\n          }\n\n          this.times.push({\n            name,\n            start: this.started[name],\n            end: Date.now()\n          });\n          delete this.started[name];\n        }\n\n        toString() {\n          const outBuf = [];\n          let longest = 0;\n\n          for (const time of this.times) {\n            const name = time.name;\n\n            if (name.length > longest) {\n              longest = name.length;\n            }\n          }\n\n          for (const time of this.times) {\n            const duration = time.end - time.start;\n            outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n          }\n\n          return outBuf.join(\"\");\n        }\n\n      }\n\n      exports.StatTimer = StatTimer;\n\n      function isFetchSupported() {\n        return typeof fetch !== \"undefined\" && typeof Response !== \"undefined\" && \"body\" in Response.prototype && typeof ReadableStream !== \"undefined\";\n      }\n\n      function isValidFetchUrl(url, baseUrl) {\n        try {\n          const {\n            protocol\n          } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n          return protocol === \"http:\" || protocol === \"https:\";\n        } catch (ex) {\n          return false;\n        }\n      }\n\n      function loadScript(src) {\n        return new Promise((resolve, reject) => {\n          const script = document.createElement(\"script\");\n          script.src = src;\n          script.onload = resolve;\n\n          script.onerror = function () {\n            reject(new Error(`Cannot load script at: ${script.src}`));\n          };\n\n          (document.head || document.documentElement).appendChild(script);\n        });\n      }\n\n      function deprecated(details) {\n        console.log(\"Deprecated API usage: \" + details);\n      }\n\n      function releaseImageResources(img) {\n        (0, _util.assert)(img instanceof Image, \"Invalid `img` parameter.\");\n        const url = img.src;\n\n        if (typeof url === \"string\" && url.startsWith(\"blob:\") && URL.revokeObjectURL) {\n          URL.revokeObjectURL(url);\n        }\n\n        img.removeAttribute(\"src\");\n      }\n\n      let pdfDateStringRegex;\n\n      class PDFDateString {\n        static toDateObject(input) {\n          if (!input || !(0, _util.isString)(input)) {\n            return null;\n          }\n\n          if (!pdfDateStringRegex) {\n            pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n          }\n\n          const matches = pdfDateStringRegex.exec(input);\n\n          if (!matches) {\n            return null;\n          }\n\n          const year = parseInt(matches[1], 10);\n          let month = parseInt(matches[2], 10);\n          month = month >= 1 && month <= 12 ? month - 1 : 0;\n          let day = parseInt(matches[3], 10);\n          day = day >= 1 && day <= 31 ? day : 1;\n          let hour = parseInt(matches[4], 10);\n          hour = hour >= 0 && hour <= 23 ? hour : 0;\n          let minute = parseInt(matches[5], 10);\n          minute = minute >= 0 && minute <= 59 ? minute : 0;\n          let second = parseInt(matches[6], 10);\n          second = second >= 0 && second <= 59 ? second : 0;\n          const universalTimeRelation = matches[7] || \"Z\";\n          let offsetHour = parseInt(matches[8], 10);\n          offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n          let offsetMinute = parseInt(matches[9], 10) || 0;\n          offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n          if (universalTimeRelation === \"-\") {\n            hour += offsetHour;\n            minute += offsetMinute;\n          } else if (universalTimeRelation === \"+\") {\n            hour -= offsetHour;\n            minute -= offsetMinute;\n          }\n\n          return new Date(Date.UTC(year, month, day, hour, minute, second));\n        }\n\n      }\n\n      exports.PDFDateString = PDFDateString;\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.FontLoader = exports.FontFaceObject = void 0;\n\n      var _util = __w_pdfjs_require__(1);\n\n      class BaseFontLoader {\n        constructor(_ref13) {\n          let {\n            docId,\n            onUnsupportedFeature\n          } = _ref13;\n\n          if (this.constructor === BaseFontLoader) {\n            (0, _util.unreachable)(\"Cannot initialize BaseFontLoader.\");\n          }\n\n          this.docId = docId;\n          this._onUnsupportedFeature = onUnsupportedFeature;\n          this.nativeFontFaces = [];\n          this.styleElement = null;\n        }\n\n        addNativeFontFace(nativeFontFace) {\n          this.nativeFontFaces.push(nativeFontFace);\n          document.fonts.add(nativeFontFace);\n        }\n\n        insertRule(rule) {\n          let styleElement = this.styleElement;\n\n          if (!styleElement) {\n            styleElement = this.styleElement = document.createElement(\"style\");\n            styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n            document.documentElement.getElementsByTagName(\"head\")[0].appendChild(styleElement);\n          }\n\n          const styleSheet = styleElement.sheet;\n          styleSheet.insertRule(rule, styleSheet.cssRules.length);\n        }\n\n        clear() {\n          this.nativeFontFaces.forEach(function (nativeFontFace) {\n            document.fonts.delete(nativeFontFace);\n          });\n          this.nativeFontFaces.length = 0;\n\n          if (this.styleElement) {\n            this.styleElement.remove();\n            this.styleElement = null;\n          }\n        }\n\n        async bind(font) {\n          if (font.attached || font.missingFile) {\n            return;\n          }\n\n          font.attached = true;\n\n          if (this.isFontLoadingAPISupported) {\n            const nativeFontFace = font.createNativeFontFace();\n\n            if (nativeFontFace) {\n              this.addNativeFontFace(nativeFontFace);\n\n              try {\n                await nativeFontFace.loaded;\n              } catch (ex) {\n                this._onUnsupportedFeature({\n                  featureId: _util.UNSUPPORTED_FEATURES.font\n                });\n\n                (0, _util.warn)(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n                font.disableFontFace = true;\n                throw ex;\n              }\n            }\n\n            return;\n          }\n\n          const rule = font.createFontFaceRule();\n\n          if (rule) {\n            this.insertRule(rule);\n\n            if (this.isSyncFontLoadingSupported) {\n              return;\n            }\n\n            await new Promise(resolve => {\n              const request = this._queueLoadingCallback(resolve);\n\n              this._prepareFontLoadEvent([rule], [font], request);\n            });\n          }\n        }\n\n        _queueLoadingCallback(callback) {\n          (0, _util.unreachable)(\"Abstract method `_queueLoadingCallback`.\");\n        }\n\n        get isFontLoadingAPISupported() {\n          const supported = typeof document !== \"undefined\" && !!document.fonts;\n          return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", supported);\n        }\n\n        get isSyncFontLoadingSupported() {\n          (0, _util.unreachable)(\"Abstract method `isSyncFontLoadingSupported`.\");\n        }\n\n        get _loadTestFont() {\n          (0, _util.unreachable)(\"Abstract method `_loadTestFont`.\");\n        }\n\n        _prepareFontLoadEvent(rules, fontsToLoad, request) {\n          (0, _util.unreachable)(\"Abstract method `_prepareFontLoadEvent`.\");\n        }\n\n      }\n\n      let FontLoader;\n      exports.FontLoader = FontLoader;\n      {\n        exports.FontLoader = FontLoader = class GenericFontLoader extends BaseFontLoader {\n          constructor(docId) {\n            super(docId);\n            this.loadingContext = {\n              requests: [],\n              nextRequestId: 0\n            };\n            this.loadTestFontId = 0;\n          }\n\n          get isSyncFontLoadingSupported() {\n            let supported = false;\n\n            if (typeof navigator === \"undefined\") {\n              supported = true;\n            } else {\n              const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\n\n              if (m && m[1] >= 14) {\n                supported = true;\n              }\n            }\n\n            return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n          }\n\n          _queueLoadingCallback(callback) {\n            function completeRequest() {\n              (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n              request.done = true;\n\n              while (context.requests.length > 0 && context.requests[0].done) {\n                const otherRequest = context.requests.shift();\n                setTimeout(otherRequest.callback, 0);\n              }\n            }\n\n            const context = this.loadingContext;\n            const request = {\n              id: `pdfjs-font-loading-${context.nextRequestId++}`,\n              done: false,\n              complete: completeRequest,\n              callback\n            };\n            context.requests.push(request);\n            return request;\n          }\n\n          get _loadTestFont() {\n            const getLoadTestFont = function () {\n              return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n            };\n\n            return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont());\n          }\n\n          _prepareFontLoadEvent(rules, fonts, request) {\n            function int32(data, offset) {\n              return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n            }\n\n            function spliceString(s, offset, remove, insert) {\n              const chunk1 = s.substring(0, offset);\n              const chunk2 = s.substring(offset + remove);\n              return chunk1 + insert + chunk2;\n            }\n\n            let i, ii;\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = 1;\n            canvas.height = 1;\n            const ctx = canvas.getContext(\"2d\");\n            let called = 0;\n\n            function isFontReady(name, callback) {\n              called++;\n\n              if (called > 30) {\n                (0, _util.warn)(\"Load test font never loaded.\");\n                callback();\n                return;\n              }\n\n              ctx.font = \"30px \" + name;\n              ctx.fillText(\".\", 0, 20);\n              const imageData = ctx.getImageData(0, 0, 1, 1);\n\n              if (imageData.data[3] > 0) {\n                callback();\n                return;\n              }\n\n              setTimeout(isFontReady.bind(null, name, callback));\n            }\n\n            const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n            let data = this._loadTestFont;\n            const COMMENT_OFFSET = 976;\n            data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n            const CFF_CHECKSUM_OFFSET = 16;\n            const XXXX_VALUE = 0x58585858;\n            let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n\n            for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n              checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n            }\n\n            if (i < loadTestFontId.length) {\n              checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n            }\n\n            data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n            const url = `url(data:font/opentype;base64,${btoa(data)});`;\n            const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n            this.insertRule(rule);\n            const names = [];\n\n            for (i = 0, ii = fonts.length; i < ii; i++) {\n              names.push(fonts[i].loadedName);\n            }\n\n            names.push(loadTestFontId);\n            const div = document.createElement(\"div\");\n            div.style.visibility = \"hidden\";\n            div.style.width = div.style.height = \"10px\";\n            div.style.position = \"absolute\";\n            div.style.top = div.style.left = \"0px\";\n\n            for (i = 0, ii = names.length; i < ii; ++i) {\n              const span = document.createElement(\"span\");\n              span.textContent = \"Hi\";\n              span.style.fontFamily = names[i];\n              div.appendChild(span);\n            }\n\n            document.body.appendChild(div);\n            isFontReady(loadTestFontId, function () {\n              document.body.removeChild(div);\n              request.complete();\n            });\n          }\n\n        };\n      }\n\n      class FontFaceObject {\n        constructor(translatedData, _ref14) {\n          let {\n            isEvalSupported = true,\n            disableFontFace = false,\n            ignoreErrors = false,\n            onUnsupportedFeature = null,\n            fontRegistry = null\n          } = _ref14;\n          this.compiledGlyphs = Object.create(null);\n\n          for (const i in translatedData) {\n            this[i] = translatedData[i];\n          }\n\n          this.isEvalSupported = isEvalSupported !== false;\n          this.disableFontFace = disableFontFace === true;\n          this.ignoreErrors = ignoreErrors === true;\n          this._onUnsupportedFeature = onUnsupportedFeature;\n          this.fontRegistry = fontRegistry;\n        }\n\n        createNativeFontFace() {\n          if (!this.data || this.disableFontFace) {\n            return null;\n          }\n\n          const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n          if (this.fontRegistry) {\n            this.fontRegistry.registerFont(this);\n          }\n\n          return nativeFontFace;\n        }\n\n        createFontFaceRule() {\n          if (!this.data || this.disableFontFace) {\n            return null;\n          }\n\n          const data = (0, _util.bytesToString)(new Uint8Array(this.data));\n          const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n          const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n          if (this.fontRegistry) {\n            this.fontRegistry.registerFont(this, url);\n          }\n\n          return rule;\n        }\n\n        getPathGenerator(objs, character) {\n          if (this.compiledGlyphs[character] !== undefined) {\n            return this.compiledGlyphs[character];\n          }\n\n          let cmds, current;\n\n          try {\n            cmds = objs.get(this.loadedName + \"_path_\" + character);\n          } catch (ex) {\n            if (!this.ignoreErrors) {\n              throw ex;\n            }\n\n            if (this._onUnsupportedFeature) {\n              this._onUnsupportedFeature({\n                featureId: _util.UNSUPPORTED_FEATURES.font\n              });\n            }\n\n            (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`);\n            return this.compiledGlyphs[character] = function (c, size) {};\n          }\n\n          if (this.isEvalSupported && _util.IsEvalSupportedCached.value) {\n            let args,\n                js = \"\";\n\n            for (let i = 0, ii = cmds.length; i < ii; i++) {\n              current = cmds[i];\n\n              if (current.args !== undefined) {\n                args = current.args.join(\",\");\n              } else {\n                args = \"\";\n              }\n\n              js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n            }\n\n            return this.compiledGlyphs[character] = new Function(\"c\", \"size\", js);\n          }\n\n          return this.compiledGlyphs[character] = function (c, size) {\n            for (let i = 0, ii = cmds.length; i < ii; i++) {\n              current = cmds[i];\n\n              if (current.cmd === \"scale\") {\n                current.args = [size, -size];\n              }\n\n              c[current.cmd].apply(c, current.args);\n            }\n          };\n        }\n\n      }\n\n      exports.FontFaceObject = FontFaceObject;\n      /***/\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      const compatibilityParams = Object.create(null);\n      {\n        const {\n          isNodeJS\n        } = __w_pdfjs_require__(7);\n\n        const userAgent = typeof navigator !== \"undefined\" && navigator.userAgent || \"\";\n        const isIE = /Trident/.test(userAgent);\n        const isIOSChrome = /CriOS/.test(userAgent);\n\n        (function checkOnBlobSupport() {\n          if (isIE || isIOSChrome) {\n            compatibilityParams.disableCreateObjectURL = true;\n          }\n        })();\n\n        (function checkFontFaceAndImage() {\n          if (isNodeJS) {\n            compatibilityParams.disableFontFace = true;\n            compatibilityParams.nativeImageDecoderSupport = \"none\";\n          }\n        })();\n      }\n      exports.apiCompatibilityParams = Object.freeze(compatibilityParams);\n      /***/\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.isNodeJS = void 0;\n      const isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions[\"nw\"] && !process.versions[\"electron\"];\n      exports.isNodeJS = isNodeJS;\n      /***/\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.CanvasGraphics = void 0;\n\n      var _util = __w_pdfjs_require__(1);\n\n      var _pattern_helper = __w_pdfjs_require__(9);\n\n      var MIN_FONT_SIZE = 16;\n      var MAX_FONT_SIZE = 100;\n      var MAX_GROUP_SIZE = 4096;\n      var MIN_WIDTH_FACTOR = 0.65;\n      var COMPILE_TYPE3_GLYPHS = true;\n      var MAX_SIZE_TO_COMPILE = 1000;\n      var FULL_CHUNK_HEIGHT = 16;\n\n      function addContextCurrentTransform(ctx) {\n        if (!ctx.mozCurrentTransform) {\n          ctx._originalSave = ctx.save;\n          ctx._originalRestore = ctx.restore;\n          ctx._originalRotate = ctx.rotate;\n          ctx._originalScale = ctx.scale;\n          ctx._originalTranslate = ctx.translate;\n          ctx._originalTransform = ctx.transform;\n          ctx._originalSetTransform = ctx.setTransform;\n          ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n          ctx._transformStack = [];\n          Object.defineProperty(ctx, \"mozCurrentTransform\", {\n            get: function getCurrentTransform() {\n              return this._transformMatrix;\n            }\n          });\n          Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n            get: function getCurrentTransformInverse() {\n              var m = this._transformMatrix;\n              var a = m[0],\n                  b = m[1],\n                  c = m[2],\n                  d = m[3],\n                  e = m[4],\n                  f = m[5];\n              var ad_bc = a * d - b * c;\n              var bc_ad = b * c - a * d;\n              return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\n            }\n          });\n\n          ctx.save = function ctxSave() {\n            var old = this._transformMatrix;\n\n            this._transformStack.push(old);\n\n            this._transformMatrix = old.slice(0, 6);\n\n            this._originalSave();\n          };\n\n          ctx.restore = function ctxRestore() {\n            var prev = this._transformStack.pop();\n\n            if (prev) {\n              this._transformMatrix = prev;\n\n              this._originalRestore();\n            }\n          };\n\n          ctx.translate = function ctxTranslate(x, y) {\n            var m = this._transformMatrix;\n            m[4] = m[0] * x + m[2] * y + m[4];\n            m[5] = m[1] * x + m[3] * y + m[5];\n\n            this._originalTranslate(x, y);\n          };\n\n          ctx.scale = function ctxScale(x, y) {\n            var m = this._transformMatrix;\n            m[0] = m[0] * x;\n            m[1] = m[1] * x;\n            m[2] = m[2] * y;\n            m[3] = m[3] * y;\n\n            this._originalScale(x, y);\n          };\n\n          ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n            var m = this._transformMatrix;\n            this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\n\n            ctx._originalTransform(a, b, c, d, e, f);\n          };\n\n          ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n            this._transformMatrix = [a, b, c, d, e, f];\n\n            ctx._originalSetTransform(a, b, c, d, e, f);\n          };\n\n          ctx.rotate = function ctxRotate(angle) {\n            var cosValue = Math.cos(angle);\n            var sinValue = Math.sin(angle);\n            var m = this._transformMatrix;\n            this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\n\n            this._originalRotate(angle);\n          };\n        }\n      }\n\n      var CachedCanvases = function CachedCanvasesClosure() {\n        function CachedCanvases(canvasFactory) {\n          this.canvasFactory = canvasFactory;\n          this.cache = Object.create(null);\n        }\n\n        CachedCanvases.prototype = {\n          getCanvas: function CachedCanvases_getCanvas(id, width, height, trackTransform) {\n            var canvasEntry;\n\n            if (this.cache[id] !== undefined) {\n              canvasEntry = this.cache[id];\n              this.canvasFactory.reset(canvasEntry, width, height);\n              canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n            } else {\n              canvasEntry = this.canvasFactory.create(width, height);\n              this.cache[id] = canvasEntry;\n            }\n\n            if (trackTransform) {\n              addContextCurrentTransform(canvasEntry.context);\n            }\n\n            return canvasEntry;\n          },\n\n          clear() {\n            for (var id in this.cache) {\n              var canvasEntry = this.cache[id];\n              this.canvasFactory.destroy(canvasEntry);\n              delete this.cache[id];\n            }\n          }\n\n        };\n        return CachedCanvases;\n      }();\n\n      function compileType3Glyph(imgData) {\n        var POINT_TO_PROCESS_LIMIT = 1000;\n        var width = imgData.width,\n            height = imgData.height;\n        var i,\n            j,\n            j0,\n            width1 = width + 1;\n        var points = new Uint8Array(width1 * (height + 1));\n        var POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n        var lineSize = width + 7 & ~7,\n            data0 = imgData.data;\n        var data = new Uint8Array(lineSize * height),\n            pos = 0,\n            ii;\n\n        for (i = 0, ii = data0.length; i < ii; i++) {\n          var mask = 128,\n              elem = data0[i];\n\n          while (mask > 0) {\n            data[pos++] = elem & mask ? 0 : 255;\n            mask >>= 1;\n          }\n        }\n\n        var count = 0;\n        pos = 0;\n\n        if (data[pos] !== 0) {\n          points[0] = 1;\n          ++count;\n        }\n\n        for (j = 1; j < width; j++) {\n          if (data[pos] !== data[pos + 1]) {\n            points[j] = data[pos] ? 2 : 1;\n            ++count;\n          }\n\n          pos++;\n        }\n\n        if (data[pos] !== 0) {\n          points[j] = 2;\n          ++count;\n        }\n\n        for (i = 1; i < height; i++) {\n          pos = i * lineSize;\n          j0 = i * width1;\n\n          if (data[pos - lineSize] !== data[pos]) {\n            points[j0] = data[pos] ? 1 : 8;\n            ++count;\n          }\n\n          var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n\n          for (j = 1; j < width; j++) {\n            sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n\n            if (POINT_TYPES[sum]) {\n              points[j0 + j] = POINT_TYPES[sum];\n              ++count;\n            }\n\n            pos++;\n          }\n\n          if (data[pos - lineSize] !== data[pos]) {\n            points[j0 + j] = data[pos] ? 2 : 4;\n            ++count;\n          }\n\n          if (count > POINT_TO_PROCESS_LIMIT) {\n            return null;\n          }\n        }\n\n        pos = lineSize * (height - 1);\n        j0 = i * width1;\n\n        if (data[pos] !== 0) {\n          points[j0] = 8;\n          ++count;\n        }\n\n        for (j = 1; j < width; j++) {\n          if (data[pos] !== data[pos + 1]) {\n            points[j0 + j] = data[pos] ? 4 : 8;\n            ++count;\n          }\n\n          pos++;\n        }\n\n        if (data[pos] !== 0) {\n          points[j0 + j] = 4;\n          ++count;\n        }\n\n        if (count > POINT_TO_PROCESS_LIMIT) {\n          return null;\n        }\n\n        var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n        var outlines = [];\n\n        for (i = 0; count && i <= height; i++) {\n          var p = i * width1;\n          var end = p + width;\n\n          while (p < end && !points[p]) {\n            p++;\n          }\n\n          if (p === end) {\n            continue;\n          }\n\n          var coords = [p % width1, i];\n          var type = points[p],\n              p0 = p,\n              pp;\n\n          do {\n            var step = steps[type];\n\n            do {\n              p += step;\n            } while (!points[p]);\n\n            pp = points[p];\n\n            if (pp !== 5 && pp !== 10) {\n              type = pp;\n              points[p] = 0;\n            } else {\n              type = pp & 0x33 * type >> 4;\n              points[p] &= type >> 2 | type << 2;\n            }\n\n            coords.push(p % width1);\n            coords.push(p / width1 | 0);\n\n            if (!points[p]) {\n              --count;\n            }\n          } while (p0 !== p);\n\n          outlines.push(coords);\n          --i;\n        }\n\n        var drawOutline = function (c) {\n          c.save();\n          c.scale(1 / width, -1 / height);\n          c.translate(0, -height);\n          c.beginPath();\n\n          for (var i = 0, ii = outlines.length; i < ii; i++) {\n            var o = outlines[i];\n            c.moveTo(o[0], o[1]);\n\n            for (var j = 2, jj = o.length; j < jj; j += 2) {\n              c.lineTo(o[j], o[j + 1]);\n            }\n          }\n\n          c.fill();\n          c.beginPath();\n          c.restore();\n        };\n\n        return drawOutline;\n      }\n\n      var CanvasExtraState = function CanvasExtraStateClosure() {\n        function CanvasExtraState() {\n          this.alphaIsShape = false;\n          this.fontSize = 0;\n          this.fontSizeScale = 1;\n          this.textMatrix = _util.IDENTITY_MATRIX;\n          this.textMatrixScale = 1;\n          this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n          this.leading = 0;\n          this.x = 0;\n          this.y = 0;\n          this.lineX = 0;\n          this.lineY = 0;\n          this.charSpacing = 0;\n          this.wordSpacing = 0;\n          this.textHScale = 1;\n          this.textRenderingMode = _util.TextRenderingMode.FILL;\n          this.textRise = 0;\n          this.fillColor = \"#000000\";\n          this.strokeColor = \"#000000\";\n          this.patternFill = false;\n          this.fillAlpha = 1;\n          this.strokeAlpha = 1;\n          this.lineWidth = 1;\n          this.activeSMask = null;\n          this.resumeSMaskCtx = null;\n        }\n\n        CanvasExtraState.prototype = {\n          clone: function CanvasExtraState_clone() {\n            return Object.create(this);\n          },\n          setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n            this.x = x;\n            this.y = y;\n          }\n        };\n        return CanvasExtraState;\n      }();\n\n      var CanvasGraphics = function CanvasGraphicsClosure() {\n        var EXECUTION_TIME = 15;\n        var EXECUTION_STEPS = 10;\n\n        function CanvasGraphics(canvasCtx, commonObjs, objs, canvasFactory, webGLContext, imageLayer) {\n          this.ctx = canvasCtx;\n          this.current = new CanvasExtraState();\n          this.stateStack = [];\n          this.pendingClip = null;\n          this.pendingEOFill = false;\n          this.res = null;\n          this.xobjs = null;\n          this.commonObjs = commonObjs;\n          this.objs = objs;\n          this.canvasFactory = canvasFactory;\n          this.webGLContext = webGLContext;\n          this.imageLayer = imageLayer;\n          this.groupStack = [];\n          this.processingType3 = null;\n          this.baseTransform = null;\n          this.baseTransformStack = [];\n          this.groupLevel = 0;\n          this.smaskStack = [];\n          this.smaskCounter = 0;\n          this.tempSMask = null;\n          this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n\n          if (canvasCtx) {\n            addContextCurrentTransform(canvasCtx);\n          }\n\n          this._cachedGetSinglePixelWidth = null;\n        }\n\n        function putBinaryImageData(ctx, imgData) {\n          if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n            ctx.putImageData(imgData, 0, 0);\n            return;\n          }\n\n          var height = imgData.height,\n              width = imgData.width;\n          var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          var srcPos = 0,\n              destPos;\n          var src = imgData.data;\n          var dest = chunkImgData.data;\n          var i, j, thisChunkHeight, elemsInThisChunk;\n\n          if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n            var srcLength = src.byteLength;\n            var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n            var dest32DataLength = dest32.length;\n            var fullSrcDiff = width + 7 >> 3;\n            var white = 0xffffffff;\n            var black = _util.IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n            for (i = 0; i < totalChunks; i++) {\n              thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n              destPos = 0;\n\n              for (j = 0; j < thisChunkHeight; j++) {\n                var srcDiff = srcLength - srcPos;\n                var k = 0;\n                var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n                var kEndUnrolled = kEnd & ~7;\n                var mask = 0;\n                var srcByte = 0;\n\n                for (; k < kEndUnrolled; k += 8) {\n                  srcByte = src[srcPos++];\n                  dest32[destPos++] = srcByte & 128 ? white : black;\n                  dest32[destPos++] = srcByte & 64 ? white : black;\n                  dest32[destPos++] = srcByte & 32 ? white : black;\n                  dest32[destPos++] = srcByte & 16 ? white : black;\n                  dest32[destPos++] = srcByte & 8 ? white : black;\n                  dest32[destPos++] = srcByte & 4 ? white : black;\n                  dest32[destPos++] = srcByte & 2 ? white : black;\n                  dest32[destPos++] = srcByte & 1 ? white : black;\n                }\n\n                for (; k < kEnd; k++) {\n                  if (mask === 0) {\n                    srcByte = src[srcPos++];\n                    mask = 128;\n                  }\n\n                  dest32[destPos++] = srcByte & mask ? white : black;\n                  mask >>= 1;\n                }\n              }\n\n              while (destPos < dest32DataLength) {\n                dest32[destPos++] = 0;\n              }\n\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n            j = 0;\n            elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n\n            for (i = 0; i < fullChunks; i++) {\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n              srcPos += elemsInThisChunk;\n              ctx.putImageData(chunkImgData, 0, j);\n              j += FULL_CHUNK_HEIGHT;\n            }\n\n            if (i < totalChunks) {\n              elemsInThisChunk = width * partialChunkHeight * 4;\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n              ctx.putImageData(chunkImgData, 0, j);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n            thisChunkHeight = FULL_CHUNK_HEIGHT;\n            elemsInThisChunk = width * thisChunkHeight;\n\n            for (i = 0; i < totalChunks; i++) {\n              if (i >= fullChunks) {\n                thisChunkHeight = partialChunkHeight;\n                elemsInThisChunk = width * thisChunkHeight;\n              }\n\n              destPos = 0;\n\n              for (j = elemsInThisChunk; j--;) {\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = 255;\n              }\n\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else {\n            throw new Error(`bad image kind: ${imgData.kind}`);\n          }\n        }\n\n        function putBinaryImageMask(ctx, imgData) {\n          var height = imgData.height,\n              width = imgData.width;\n          var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          var srcPos = 0;\n          var src = imgData.data;\n          var dest = chunkImgData.data;\n\n          for (var i = 0; i < totalChunks; i++) {\n            var thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n            var destPos = 3;\n\n            for (var j = 0; j < thisChunkHeight; j++) {\n              var mask = 0;\n\n              for (var k = 0; k < width; k++) {\n                if (!mask) {\n                  var elem = src[srcPos++];\n                  mask = 128;\n                }\n\n                dest[destPos] = elem & mask ? 0 : 255;\n                destPos += 4;\n                mask >>= 1;\n              }\n            }\n\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        }\n\n        function copyCtxState(sourceCtx, destCtx) {\n          var properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\n\n          for (var i = 0, ii = properties.length; i < ii; i++) {\n            var property = properties[i];\n\n            if (sourceCtx[property] !== undefined) {\n              destCtx[property] = sourceCtx[property];\n            }\n          }\n\n          if (sourceCtx.setLineDash !== undefined) {\n            destCtx.setLineDash(sourceCtx.getLineDash());\n            destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n          }\n        }\n\n        function resetCtxToDefault(ctx) {\n          ctx.strokeStyle = \"#000000\";\n          ctx.fillStyle = \"#000000\";\n          ctx.fillRule = \"nonzero\";\n          ctx.globalAlpha = 1;\n          ctx.lineWidth = 1;\n          ctx.lineCap = \"butt\";\n          ctx.lineJoin = \"miter\";\n          ctx.miterLimit = 10;\n          ctx.globalCompositeOperation = \"source-over\";\n          ctx.font = \"10px sans-serif\";\n\n          if (ctx.setLineDash !== undefined) {\n            ctx.setLineDash([]);\n            ctx.lineDashOffset = 0;\n          }\n        }\n\n        function composeSMaskBackdrop(bytes, r0, g0, b0) {\n          var length = bytes.length;\n\n          for (var i = 3; i < length; i += 4) {\n            var alpha = bytes[i];\n\n            if (alpha === 0) {\n              bytes[i - 3] = r0;\n              bytes[i - 2] = g0;\n              bytes[i - 1] = b0;\n            } else if (alpha < 255) {\n              var alpha_ = 255 - alpha;\n              bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n              bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n              bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n            }\n          }\n        }\n\n        function composeSMaskAlpha(maskData, layerData, transferMap) {\n          var length = maskData.length;\n          var scale = 1 / 255;\n\n          for (var i = 3; i < length; i += 4) {\n            var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n            layerData[i] = layerData[i] * alpha * scale | 0;\n          }\n        }\n\n        function composeSMaskLuminosity(maskData, layerData, transferMap) {\n          var length = maskData.length;\n\n          for (var i = 3; i < length; i += 4) {\n            var y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n            layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n          }\n        }\n\n        function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap) {\n          var hasBackdrop = !!backdrop;\n          var r0 = hasBackdrop ? backdrop[0] : 0;\n          var g0 = hasBackdrop ? backdrop[1] : 0;\n          var b0 = hasBackdrop ? backdrop[2] : 0;\n          var composeFn;\n\n          if (subtype === \"Luminosity\") {\n            composeFn = composeSMaskLuminosity;\n          } else {\n            composeFn = composeSMaskAlpha;\n          }\n\n          var PIXELS_TO_PROCESS = 1048576;\n          var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n\n          for (var row = 0; row < height; row += chunkSize) {\n            var chunkHeight = Math.min(chunkSize, height - row);\n            var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n            var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n            if (hasBackdrop) {\n              composeSMaskBackdrop(maskData.data, r0, g0, b0);\n            }\n\n            composeFn(maskData.data, layerData.data, transferMap);\n            maskCtx.putImageData(layerData, 0, row);\n          }\n        }\n\n        function composeSMask(ctx, smask, layerCtx, webGLContext) {\n          var mask = smask.canvas;\n          var maskCtx = smask.context;\n          ctx.setTransform(smask.scaleX, 0, 0, smask.scaleY, smask.offsetX, smask.offsetY);\n          var backdrop = smask.backdrop || null;\n\n          if (!smask.transferMap && webGLContext.isEnabled) {\n            const composed = webGLContext.composeSMask({\n              layer: layerCtx.canvas,\n              mask,\n              properties: {\n                subtype: smask.subtype,\n                backdrop\n              }\n            });\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n            return;\n          }\n\n          genericComposeSMask(maskCtx, layerCtx, mask.width, mask.height, smask.subtype, backdrop, smask.transferMap);\n          ctx.drawImage(mask, 0, 0);\n        }\n\n        var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n        var NORMAL_CLIP = {};\n        var EO_CLIP = {};\n        CanvasGraphics.prototype = {\n          beginDrawing(_ref15) {\n            let {\n              transform,\n              viewport,\n              transparency = false,\n              background = null\n            } = _ref15;\n            var width = this.ctx.canvas.width;\n            var height = this.ctx.canvas.height;\n            this.ctx.save();\n            this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n            this.ctx.fillRect(0, 0, width, height);\n            this.ctx.restore();\n\n            if (transparency) {\n              var transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height, true);\n              this.compositeCtx = this.ctx;\n              this.transparentCanvas = transparentCanvas.canvas;\n              this.ctx = transparentCanvas.context;\n              this.ctx.save();\n              this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n            }\n\n            this.ctx.save();\n            resetCtxToDefault(this.ctx);\n\n            if (transform) {\n              this.ctx.transform.apply(this.ctx, transform);\n            }\n\n            this.ctx.transform.apply(this.ctx, viewport.transform);\n            this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n            if (this.imageLayer) {\n              this.imageLayer.beginLayout();\n            }\n          },\n\n          executeOperatorList: function CanvasGraphics_executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n            var argsArray = operatorList.argsArray;\n            var fnArray = operatorList.fnArray;\n            var i = executionStartIdx || 0;\n            var argsArrayLen = argsArray.length;\n\n            if (argsArrayLen === i) {\n              return i;\n            }\n\n            var chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n            var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n            var steps = 0;\n            var commonObjs = this.commonObjs;\n            var objs = this.objs;\n            var fnId;\n\n            while (true) {\n              if (stepper !== undefined && i === stepper.nextBreakPoint) {\n                stepper.breakIt(i, continueCallback);\n                return i;\n              }\n\n              fnId = fnArray[i];\n\n              if (fnId !== _util.OPS.dependency) {\n                this[fnId].apply(this, argsArray[i]);\n              } else {\n                for (const depObjId of argsArray[i]) {\n                  const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n                  if (!objsPool.has(depObjId)) {\n                    objsPool.get(depObjId, continueCallback);\n                    return i;\n                  }\n                }\n              }\n\n              i++;\n\n              if (i === argsArrayLen) {\n                return i;\n              }\n\n              if (chunkOperations && ++steps > EXECUTION_STEPS) {\n                if (Date.now() > endTime) {\n                  continueCallback();\n                  return i;\n                }\n\n                steps = 0;\n              }\n            }\n          },\n          endDrawing: function CanvasGraphics_endDrawing() {\n            if (this.current.activeSMask !== null) {\n              this.endSMaskGroup();\n            }\n\n            this.ctx.restore();\n\n            if (this.transparentCanvas) {\n              this.ctx = this.compositeCtx;\n              this.ctx.save();\n              this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n              this.ctx.drawImage(this.transparentCanvas, 0, 0);\n              this.ctx.restore();\n              this.transparentCanvas = null;\n            }\n\n            this.cachedCanvases.clear();\n            this.webGLContext.clear();\n\n            if (this.imageLayer) {\n              this.imageLayer.endLayout();\n            }\n          },\n          setLineWidth: function CanvasGraphics_setLineWidth(width) {\n            this.current.lineWidth = width;\n            this.ctx.lineWidth = width;\n          },\n          setLineCap: function CanvasGraphics_setLineCap(style) {\n            this.ctx.lineCap = LINE_CAP_STYLES[style];\n          },\n          setLineJoin: function CanvasGraphics_setLineJoin(style) {\n            this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n          },\n          setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n            this.ctx.miterLimit = limit;\n          },\n          setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n            var ctx = this.ctx;\n\n            if (ctx.setLineDash !== undefined) {\n              ctx.setLineDash(dashArray);\n              ctx.lineDashOffset = dashPhase;\n            }\n          },\n\n          setRenderingIntent(intent) {},\n\n          setFlatness(flatness) {},\n\n          setGState: function CanvasGraphics_setGState(states) {\n            for (var i = 0, ii = states.length; i < ii; i++) {\n              var state = states[i];\n              var key = state[0];\n              var value = state[1];\n\n              switch (key) {\n                case \"LW\":\n                  this.setLineWidth(value);\n                  break;\n\n                case \"LC\":\n                  this.setLineCap(value);\n                  break;\n\n                case \"LJ\":\n                  this.setLineJoin(value);\n                  break;\n\n                case \"ML\":\n                  this.setMiterLimit(value);\n                  break;\n\n                case \"D\":\n                  this.setDash(value[0], value[1]);\n                  break;\n\n                case \"RI\":\n                  this.setRenderingIntent(value);\n                  break;\n\n                case \"FL\":\n                  this.setFlatness(value);\n                  break;\n\n                case \"Font\":\n                  this.setFont(value[0], value[1]);\n                  break;\n\n                case \"CA\":\n                  this.current.strokeAlpha = state[1];\n                  break;\n\n                case \"ca\":\n                  this.current.fillAlpha = state[1];\n                  this.ctx.globalAlpha = state[1];\n                  break;\n\n                case \"BM\":\n                  this.ctx.globalCompositeOperation = value;\n                  break;\n\n                case \"SMask\":\n                  if (this.current.activeSMask) {\n                    if (this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask) {\n                      this.suspendSMaskGroup();\n                    } else {\n                      this.endSMaskGroup();\n                    }\n                  }\n\n                  this.current.activeSMask = value ? this.tempSMask : null;\n\n                  if (this.current.activeSMask) {\n                    this.beginSMaskGroup();\n                  }\n\n                  this.tempSMask = null;\n                  break;\n              }\n            }\n          },\n          beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n            var activeSMask = this.current.activeSMask;\n            var drawnWidth = activeSMask.canvas.width;\n            var drawnHeight = activeSMask.canvas.height;\n            var cacheId = \"smaskGroupAt\" + this.groupLevel;\n            var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n            var currentCtx = this.ctx;\n            var currentTransform = currentCtx.mozCurrentTransform;\n            this.ctx.save();\n            var groupCtx = scratchCanvas.context;\n            groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n            groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n            groupCtx.transform.apply(groupCtx, currentTransform);\n            activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n            copyCtxState(currentCtx, groupCtx);\n            this.ctx = groupCtx;\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n          },\n          suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n            var groupCtx = this.ctx;\n            this.groupLevel--;\n            this.ctx = this.groupStack.pop();\n            composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n            this.ctx.restore();\n            this.ctx.save();\n            copyCtxState(groupCtx, this.ctx);\n            this.current.resumeSMaskCtx = groupCtx;\n\n            var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n\n            this.ctx.transform.apply(this.ctx, deltaTransform);\n            groupCtx.save();\n            groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n            groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n            groupCtx.restore();\n          },\n          resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n            var groupCtx = this.current.resumeSMaskCtx;\n            var currentCtx = this.ctx;\n            this.ctx = groupCtx;\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n          },\n          endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n            var groupCtx = this.ctx;\n            this.groupLevel--;\n            this.ctx = this.groupStack.pop();\n            composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n            this.ctx.restore();\n            copyCtxState(groupCtx, this.ctx);\n\n            var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n\n            this.ctx.transform.apply(this.ctx, deltaTransform);\n          },\n          save: function CanvasGraphics_save() {\n            this.ctx.save();\n            var old = this.current;\n            this.stateStack.push(old);\n            this.current = old.clone();\n            this.current.resumeSMaskCtx = null;\n          },\n          restore: function CanvasGraphics_restore() {\n            if (this.current.resumeSMaskCtx) {\n              this.resumeSMaskGroup();\n            }\n\n            if (this.current.activeSMask !== null && (this.stateStack.length === 0 || this.stateStack[this.stateStack.length - 1].activeSMask !== this.current.activeSMask)) {\n              this.endSMaskGroup();\n            }\n\n            if (this.stateStack.length !== 0) {\n              this.current = this.stateStack.pop();\n              this.ctx.restore();\n              this.pendingClip = null;\n              this._cachedGetSinglePixelWidth = null;\n            }\n          },\n          transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n            this.ctx.transform(a, b, c, d, e, f);\n            this._cachedGetSinglePixelWidth = null;\n          },\n          constructPath: function CanvasGraphics_constructPath(ops, args) {\n            var ctx = this.ctx;\n            var current = this.current;\n            var x = current.x,\n                y = current.y;\n\n            for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n              switch (ops[i] | 0) {\n                case _util.OPS.rectangle:\n                  x = args[j++];\n                  y = args[j++];\n                  var width = args[j++];\n                  var height = args[j++];\n\n                  if (width === 0) {\n                    width = this.getSinglePixelWidth();\n                  }\n\n                  if (height === 0) {\n                    height = this.getSinglePixelWidth();\n                  }\n\n                  var xw = x + width;\n                  var yh = y + height;\n                  this.ctx.moveTo(x, y);\n                  this.ctx.lineTo(xw, y);\n                  this.ctx.lineTo(xw, yh);\n                  this.ctx.lineTo(x, yh);\n                  this.ctx.lineTo(x, y);\n                  this.ctx.closePath();\n                  break;\n\n                case _util.OPS.moveTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.moveTo(x, y);\n                  break;\n\n                case _util.OPS.lineTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.lineTo(x, y);\n                  break;\n\n                case _util.OPS.curveTo:\n                  x = args[j + 4];\n                  y = args[j + 5];\n                  ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n                  j += 6;\n                  break;\n\n                case _util.OPS.curveTo2:\n                  ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  j += 4;\n                  break;\n\n                case _util.OPS.curveTo3:\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n                  j += 4;\n                  break;\n\n                case _util.OPS.closePath:\n                  ctx.closePath();\n                  break;\n              }\n            }\n\n            current.setCurrentPoint(x, y);\n          },\n          closePath: function CanvasGraphics_closePath() {\n            this.ctx.closePath();\n          },\n          stroke: function CanvasGraphics_stroke(consumePath) {\n            consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n            var ctx = this.ctx;\n            var strokeColor = this.current.strokeColor;\n            ctx.globalAlpha = this.current.strokeAlpha;\n\n            if (strokeColor && strokeColor.hasOwnProperty(\"type\") && strokeColor.type === \"Pattern\") {\n              ctx.save();\n              const transform = ctx.mozCurrentTransform;\n\n              const scale = _util.Util.singularValueDecompose2dScale(transform)[0];\n\n              ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n              ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth * scale);\n              ctx.stroke();\n              ctx.restore();\n            } else {\n              ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth);\n              ctx.stroke();\n            }\n\n            if (consumePath) {\n              this.consumePath();\n            }\n\n            ctx.globalAlpha = this.current.fillAlpha;\n          },\n          closeStroke: function CanvasGraphics_closeStroke() {\n            this.closePath();\n            this.stroke();\n          },\n          fill: function CanvasGraphics_fill(consumePath) {\n            consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n            var ctx = this.ctx;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            var needRestore = false;\n\n            if (isPatternFill) {\n              ctx.save();\n\n              if (this.baseTransform) {\n                ctx.setTransform.apply(ctx, this.baseTransform);\n              }\n\n              ctx.fillStyle = fillColor.getPattern(ctx, this);\n              needRestore = true;\n            }\n\n            if (this.pendingEOFill) {\n              ctx.fill(\"evenodd\");\n              this.pendingEOFill = false;\n            } else {\n              ctx.fill();\n            }\n\n            if (needRestore) {\n              ctx.restore();\n            }\n\n            if (consumePath) {\n              this.consumePath();\n            }\n          },\n          eoFill: function CanvasGraphics_eoFill() {\n            this.pendingEOFill = true;\n            this.fill();\n          },\n          fillStroke: function CanvasGraphics_fillStroke() {\n            this.fill(false);\n            this.stroke(false);\n            this.consumePath();\n          },\n          eoFillStroke: function CanvasGraphics_eoFillStroke() {\n            this.pendingEOFill = true;\n            this.fillStroke();\n          },\n          closeFillStroke: function CanvasGraphics_closeFillStroke() {\n            this.closePath();\n            this.fillStroke();\n          },\n          closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n            this.pendingEOFill = true;\n            this.closePath();\n            this.fillStroke();\n          },\n          endPath: function CanvasGraphics_endPath() {\n            this.consumePath();\n          },\n          clip: function CanvasGraphics_clip() {\n            this.pendingClip = NORMAL_CLIP;\n          },\n          eoClip: function CanvasGraphics_eoClip() {\n            this.pendingClip = EO_CLIP;\n          },\n          beginText: function CanvasGraphics_beginText() {\n            this.current.textMatrix = _util.IDENTITY_MATRIX;\n            this.current.textMatrixScale = 1;\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          },\n          endText: function CanvasGraphics_endText() {\n            var paths = this.pendingTextPaths;\n            var ctx = this.ctx;\n\n            if (paths === undefined) {\n              ctx.beginPath();\n              return;\n            }\n\n            ctx.save();\n            ctx.beginPath();\n\n            for (var i = 0; i < paths.length; i++) {\n              var path = paths[i];\n              ctx.setTransform.apply(ctx, path.transform);\n              ctx.translate(path.x, path.y);\n              path.addToPath(ctx, path.fontSize);\n            }\n\n            ctx.restore();\n            ctx.clip();\n            ctx.beginPath();\n            delete this.pendingTextPaths;\n          },\n          setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n            this.current.charSpacing = spacing;\n          },\n          setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n            this.current.wordSpacing = spacing;\n          },\n          setHScale: function CanvasGraphics_setHScale(scale) {\n            this.current.textHScale = scale / 100;\n          },\n          setLeading: function CanvasGraphics_setLeading(leading) {\n            this.current.leading = -leading;\n          },\n          setFont: function CanvasGraphics_setFont(fontRefName, size) {\n            var fontObj = this.commonObjs.get(fontRefName);\n            var current = this.current;\n\n            if (!fontObj) {\n              throw new Error(`Can't find font for ${fontRefName}`);\n            }\n\n            current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n\n            if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n              (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n            }\n\n            if (size < 0) {\n              size = -size;\n              current.fontDirection = -1;\n            } else {\n              current.fontDirection = 1;\n            }\n\n            this.current.font = fontObj;\n            this.current.fontSize = size;\n\n            if (fontObj.isType3Font) {\n              return;\n            }\n\n            var name = fontObj.loadedName || \"sans-serif\";\n            let bold = \"normal\";\n\n            if (fontObj.black) {\n              bold = \"900\";\n            } else if (fontObj.bold) {\n              bold = \"bold\";\n            }\n\n            var italic = fontObj.italic ? \"italic\" : \"normal\";\n            var typeface = `\"${name}\", ${fontObj.fallbackName}`;\n            let browserFontSize = size;\n\n            if (size < MIN_FONT_SIZE) {\n              browserFontSize = MIN_FONT_SIZE;\n            } else if (size > MAX_FONT_SIZE) {\n              browserFontSize = MAX_FONT_SIZE;\n            }\n\n            this.current.fontSizeScale = size / browserFontSize;\n            this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n          },\n          setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n            this.current.textRenderingMode = mode;\n          },\n          setTextRise: function CanvasGraphics_setTextRise(rise) {\n            this.current.textRise = rise;\n          },\n          moveText: function CanvasGraphics_moveText(x, y) {\n            this.current.x = this.current.lineX += x;\n            this.current.y = this.current.lineY += y;\n          },\n          setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n            this.setLeading(-y);\n            this.moveText(x, y);\n          },\n          setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n            this.current.textMatrix = [a, b, c, d, e, f];\n            this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          },\n          nextLine: function CanvasGraphics_nextLine() {\n            this.moveText(0, this.current.leading);\n          },\n\n          paintChar(character, x, y, patternTransform) {\n            var ctx = this.ctx;\n            var current = this.current;\n            var font = current.font;\n            var textRenderingMode = current.textRenderingMode;\n            var fontSize = current.fontSize / current.fontSizeScale;\n            var fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n            var isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n            const patternFill = current.patternFill && font.data;\n            var addToPath;\n\n            if (font.disableFontFace || isAddToPathSet || patternFill) {\n              addToPath = font.getPathGenerator(this.commonObjs, character);\n            }\n\n            if (font.disableFontFace || patternFill) {\n              ctx.save();\n              ctx.translate(x, y);\n              ctx.beginPath();\n              addToPath(ctx, fontSize);\n\n              if (patternTransform) {\n                ctx.setTransform.apply(ctx, patternTransform);\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fill();\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.stroke();\n              }\n\n              ctx.restore();\n            } else {\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fillText(character, x, y);\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.strokeText(character, x, y);\n              }\n            }\n\n            if (isAddToPathSet) {\n              var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n              paths.push({\n                transform: ctx.mozCurrentTransform,\n                x,\n                y,\n                fontSize,\n                addToPath\n              });\n            }\n          },\n\n          get isFontSubpixelAAEnabled() {\n            const {\n              context: ctx\n            } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10);\n            ctx.scale(1.5, 1);\n            ctx.fillText(\"I\", 0, 10);\n            var data = ctx.getImageData(0, 0, 10, 10).data;\n            var enabled = false;\n\n            for (var i = 3; i < data.length; i += 4) {\n              if (data[i] > 0 && data[i] < 255) {\n                enabled = true;\n                break;\n              }\n            }\n\n            return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n          },\n\n          showText: function CanvasGraphics_showText(glyphs) {\n            var current = this.current;\n            var font = current.font;\n\n            if (font.isType3Font) {\n              return this.showType3Text(glyphs);\n            }\n\n            var fontSize = current.fontSize;\n\n            if (fontSize === 0) {\n              return undefined;\n            }\n\n            var ctx = this.ctx;\n            var fontSizeScale = current.fontSizeScale;\n            var charSpacing = current.charSpacing;\n            var wordSpacing = current.wordSpacing;\n            var fontDirection = current.fontDirection;\n            var textHScale = current.textHScale * fontDirection;\n            var glyphsLength = glyphs.length;\n            var vertical = font.vertical;\n            var spacingDir = vertical ? 1 : -1;\n            var defaultVMetrics = font.defaultVMetrics;\n            var widthAdvanceScale = fontSize * current.fontMatrix[0];\n            var simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n            ctx.save();\n            let patternTransform;\n\n            if (current.patternFill) {\n              ctx.save();\n              const pattern = current.fillColor.getPattern(ctx, this);\n              patternTransform = ctx.mozCurrentTransform;\n              ctx.restore();\n              ctx.fillStyle = pattern;\n            }\n\n            ctx.transform.apply(ctx, current.textMatrix);\n            ctx.translate(current.x, current.y + current.textRise);\n\n            if (fontDirection > 0) {\n              ctx.scale(textHScale, -1);\n            } else {\n              ctx.scale(textHScale, 1);\n            }\n\n            var lineWidth = current.lineWidth;\n            var scale = current.textMatrixScale;\n\n            if (scale === 0 || lineWidth === 0) {\n              var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                this._cachedGetSinglePixelWidth = null;\n                lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n              }\n            } else {\n              lineWidth /= scale;\n            }\n\n            if (fontSizeScale !== 1.0) {\n              ctx.scale(fontSizeScale, fontSizeScale);\n              lineWidth /= fontSizeScale;\n            }\n\n            ctx.lineWidth = lineWidth;\n            var x = 0,\n                i;\n\n            for (i = 0; i < glyphsLength; ++i) {\n              var glyph = glyphs[i];\n\n              if ((0, _util.isNum)(glyph)) {\n                x += spacingDir * glyph * fontSize / 1000;\n                continue;\n              }\n\n              var restoreNeeded = false;\n              var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              var character = glyph.fontChar;\n              var accent = glyph.accent;\n              var scaledX, scaledY, scaledAccentX, scaledAccentY;\n              var width = glyph.width;\n\n              if (vertical) {\n                var vmetric, vx, vy;\n                vmetric = glyph.vmetric || defaultVMetrics;\n                vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n                vx = -vx * widthAdvanceScale;\n                vy = vmetric[2] * widthAdvanceScale;\n                width = vmetric ? -vmetric[0] : width;\n                scaledX = vx / fontSizeScale;\n                scaledY = (x + vy) / fontSizeScale;\n              } else {\n                scaledX = x / fontSizeScale;\n                scaledY = 0;\n              }\n\n              if (font.remeasure && width > 0) {\n                var measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n\n                if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n                  var characterScaleX = width / measuredWidth;\n                  restoreNeeded = true;\n                  ctx.save();\n                  ctx.scale(characterScaleX, 1);\n                  scaledX /= characterScaleX;\n                } else if (width !== measuredWidth) {\n                  scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n                }\n              }\n\n              if (glyph.isInFont || font.missingFile) {\n                if (simpleFillText && !accent) {\n                  ctx.fillText(character, scaledX, scaledY);\n                } else {\n                  this.paintChar(character, scaledX, scaledY, patternTransform);\n\n                  if (accent) {\n                    scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n                    scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n                    this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);\n                  }\n                }\n              }\n\n              var charWidth;\n\n              if (vertical) {\n                charWidth = width * widthAdvanceScale - spacing * fontDirection;\n              } else {\n                charWidth = width * widthAdvanceScale + spacing * fontDirection;\n              }\n\n              x += charWidth;\n\n              if (restoreNeeded) {\n                ctx.restore();\n              }\n            }\n\n            if (vertical) {\n              current.y -= x;\n            } else {\n              current.x += x * textHScale;\n            }\n\n            ctx.restore();\n          },\n          showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n            var ctx = this.ctx;\n            var current = this.current;\n            var font = current.font;\n            var fontSize = current.fontSize;\n            var fontDirection = current.fontDirection;\n            var spacingDir = font.vertical ? 1 : -1;\n            var charSpacing = current.charSpacing;\n            var wordSpacing = current.wordSpacing;\n            var textHScale = current.textHScale * fontDirection;\n            var fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n            var glyphsLength = glyphs.length;\n            var isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n            var i, glyph, width, spacingLength;\n\n            if (isTextInvisible || fontSize === 0) {\n              return;\n            }\n\n            this._cachedGetSinglePixelWidth = null;\n            ctx.save();\n            ctx.transform.apply(ctx, current.textMatrix);\n            ctx.translate(current.x, current.y);\n            ctx.scale(textHScale, fontDirection);\n\n            for (i = 0; i < glyphsLength; ++i) {\n              glyph = glyphs[i];\n\n              if ((0, _util.isNum)(glyph)) {\n                spacingLength = spacingDir * glyph * fontSize / 1000;\n                this.ctx.translate(spacingLength, 0);\n                current.x += spacingLength * textHScale;\n                continue;\n              }\n\n              var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              var operatorList = font.charProcOperatorList[glyph.operatorListId];\n\n              if (!operatorList) {\n                (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n                continue;\n              }\n\n              this.processingType3 = glyph;\n              this.save();\n              ctx.scale(fontSize, fontSize);\n              ctx.transform.apply(ctx, fontMatrix);\n              this.executeOperatorList(operatorList);\n              this.restore();\n\n              var transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n\n              width = transformed[0] * fontSize + spacing;\n              ctx.translate(width, 0);\n              current.x += width * textHScale;\n            }\n\n            ctx.restore();\n            this.processingType3 = null;\n          },\n          setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {},\n          setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n            this.ctx.rect(llx, lly, urx - llx, ury - lly);\n            this.clip();\n            this.endPath();\n          },\n          getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n            var pattern;\n\n            if (IR[0] === \"TilingPattern\") {\n              var color = IR[1];\n              var baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\n              var canvasGraphicsFactory = {\n                createCanvasGraphics: ctx => {\n                  return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext);\n                }\n              };\n              pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n            } else {\n              pattern = (0, _pattern_helper.getShadingPatternFromIR)(IR);\n            }\n\n            return pattern;\n          },\n          setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n            this.current.strokeColor = this.getColorN_Pattern(arguments);\n          },\n          setFillColorN: function CanvasGraphics_setFillColorN() {\n            this.current.fillColor = this.getColorN_Pattern(arguments);\n            this.current.patternFill = true;\n          },\n          setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n            var color = _util.Util.makeCssRgb(r, g, b);\n\n            this.ctx.strokeStyle = color;\n            this.current.strokeColor = color;\n          },\n          setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n            var color = _util.Util.makeCssRgb(r, g, b);\n\n            this.ctx.fillStyle = color;\n            this.current.fillColor = color;\n            this.current.patternFill = false;\n          },\n          shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n            var ctx = this.ctx;\n            this.save();\n            var pattern = (0, _pattern_helper.getShadingPatternFromIR)(patternIR);\n            ctx.fillStyle = pattern.getPattern(ctx, this, true);\n            var inv = ctx.mozCurrentTransformInverse;\n\n            if (inv) {\n              var canvas = ctx.canvas;\n              var width = canvas.width;\n              var height = canvas.height;\n\n              var bl = _util.Util.applyTransform([0, 0], inv);\n\n              var br = _util.Util.applyTransform([0, height], inv);\n\n              var ul = _util.Util.applyTransform([width, 0], inv);\n\n              var ur = _util.Util.applyTransform([width, height], inv);\n\n              var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n              var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n              var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n              var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n              this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n            } else {\n              this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n            }\n\n            this.restore();\n          },\n          beginInlineImage: function CanvasGraphics_beginInlineImage() {\n            (0, _util.unreachable)(\"Should not call beginInlineImage\");\n          },\n          beginImageData: function CanvasGraphics_beginImageData() {\n            (0, _util.unreachable)(\"Should not call beginImageData\");\n          },\n          paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(matrix, bbox) {\n            this.save();\n            this.baseTransformStack.push(this.baseTransform);\n\n            if (Array.isArray(matrix) && matrix.length === 6) {\n              this.transform.apply(this, matrix);\n            }\n\n            this.baseTransform = this.ctx.mozCurrentTransform;\n\n            if (bbox) {\n              var width = bbox[2] - bbox[0];\n              var height = bbox[3] - bbox[1];\n              this.ctx.rect(bbox[0], bbox[1], width, height);\n              this.clip();\n              this.endPath();\n            }\n          },\n          paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n            this.restore();\n            this.baseTransform = this.baseTransformStack.pop();\n          },\n          beginGroup: function CanvasGraphics_beginGroup(group) {\n            this.save();\n            var currentCtx = this.ctx;\n\n            if (!group.isolated) {\n              (0, _util.info)(\"TODO: Support non-isolated groups.\");\n            }\n\n            if (group.knockout) {\n              (0, _util.warn)(\"Knockout groups not supported.\");\n            }\n\n            var currentTransform = currentCtx.mozCurrentTransform;\n\n            if (group.matrix) {\n              currentCtx.transform.apply(currentCtx, group.matrix);\n            }\n\n            if (!group.bbox) {\n              throw new Error(\"Bounding box is required.\");\n            }\n\n            var bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);\n\n            var canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n            bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n            var offsetX = Math.floor(bounds[0]);\n            var offsetY = Math.floor(bounds[1]);\n            var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n            var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n            var scaleX = 1,\n                scaleY = 1;\n\n            if (drawnWidth > MAX_GROUP_SIZE) {\n              scaleX = drawnWidth / MAX_GROUP_SIZE;\n              drawnWidth = MAX_GROUP_SIZE;\n            }\n\n            if (drawnHeight > MAX_GROUP_SIZE) {\n              scaleY = drawnHeight / MAX_GROUP_SIZE;\n              drawnHeight = MAX_GROUP_SIZE;\n            }\n\n            var cacheId = \"groupAt\" + this.groupLevel;\n\n            if (group.smask) {\n              cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n            }\n\n            var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n            var groupCtx = scratchCanvas.context;\n            groupCtx.scale(1 / scaleX, 1 / scaleY);\n            groupCtx.translate(-offsetX, -offsetY);\n            groupCtx.transform.apply(groupCtx, currentTransform);\n\n            if (group.smask) {\n              this.smaskStack.push({\n                canvas: scratchCanvas.canvas,\n                context: groupCtx,\n                offsetX,\n                offsetY,\n                scaleX,\n                scaleY,\n                subtype: group.smask.subtype,\n                backdrop: group.smask.backdrop,\n                transferMap: group.smask.transferMap || null,\n                startTransformInverse: null\n              });\n            } else {\n              currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n              currentCtx.translate(offsetX, offsetY);\n              currentCtx.scale(scaleX, scaleY);\n            }\n\n            copyCtxState(currentCtx, groupCtx);\n            this.ctx = groupCtx;\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n            this.current.activeSMask = null;\n          },\n          endGroup: function CanvasGraphics_endGroup(group) {\n            this.groupLevel--;\n            var groupCtx = this.ctx;\n            this.ctx = this.groupStack.pop();\n\n            if (this.ctx.imageSmoothingEnabled !== undefined) {\n              this.ctx.imageSmoothingEnabled = false;\n            } else {\n              this.ctx.mozImageSmoothingEnabled = false;\n            }\n\n            if (group.smask) {\n              this.tempSMask = this.smaskStack.pop();\n            } else {\n              this.ctx.drawImage(groupCtx.canvas, 0, 0);\n            }\n\n            this.restore();\n          },\n          beginAnnotations: function CanvasGraphics_beginAnnotations() {\n            this.save();\n\n            if (this.baseTransform) {\n              this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n            }\n          },\n          endAnnotations: function CanvasGraphics_endAnnotations() {\n            this.restore();\n          },\n          beginAnnotation: function CanvasGraphics_beginAnnotation(rect, transform, matrix) {\n            this.save();\n            resetCtxToDefault(this.ctx);\n            this.current = new CanvasExtraState();\n\n            if (Array.isArray(rect) && rect.length === 4) {\n              var width = rect[2] - rect[0];\n              var height = rect[3] - rect[1];\n              this.ctx.rect(rect[0], rect[1], width, height);\n              this.clip();\n              this.endPath();\n            }\n\n            this.transform.apply(this, transform);\n            this.transform.apply(this, matrix);\n          },\n          endAnnotation: function CanvasGraphics_endAnnotation() {\n            this.restore();\n          },\n          paintJpegXObject: function CanvasGraphics_paintJpegXObject(objId, w, h) {\n            const domImage = this.processingType3 ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n            if (!domImage) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n\n            this.save();\n            var ctx = this.ctx;\n            ctx.scale(1 / w, -1 / h);\n            ctx.drawImage(domImage, 0, 0, domImage.width, domImage.height, 0, -h, w, h);\n\n            if (this.imageLayer) {\n              var currentTransform = ctx.mozCurrentTransformInverse;\n              var position = this.getCanvasPosition(0, 0);\n              this.imageLayer.appendImage({\n                objId,\n                left: position[0],\n                top: position[1],\n                width: w / currentTransform[0],\n                height: h / currentTransform[3]\n              });\n            }\n\n            this.restore();\n          },\n          paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n            var ctx = this.ctx;\n            var width = img.width,\n                height = img.height;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            var glyph = this.processingType3;\n\n            if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n              if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n                glyph.compiled = compileType3Glyph({\n                  data: img.data,\n                  width,\n                  height\n                });\n              } else {\n                glyph.compiled = null;\n              }\n            }\n\n            if (glyph && glyph.compiled) {\n              glyph.compiled(ctx);\n              return;\n            }\n\n            var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n            var maskCtx = maskCanvas.context;\n            maskCtx.save();\n            putBinaryImageMask(maskCtx, img);\n            maskCtx.globalCompositeOperation = \"source-in\";\n            maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n            maskCtx.fillRect(0, 0, width, height);\n            maskCtx.restore();\n            this.paintInlineImageXObject(maskCanvas.canvas);\n          },\n          paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(imgData, scaleX, scaleY, positions) {\n            var width = imgData.width;\n            var height = imgData.height;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n            var maskCtx = maskCanvas.context;\n            maskCtx.save();\n            putBinaryImageMask(maskCtx, imgData);\n            maskCtx.globalCompositeOperation = \"source-in\";\n            maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n            maskCtx.fillRect(0, 0, width, height);\n            maskCtx.restore();\n            var ctx = this.ctx;\n\n            for (var i = 0, ii = positions.length; i < ii; i += 2) {\n              ctx.save();\n              ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\n              ctx.scale(1, -1);\n              ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n              ctx.restore();\n            }\n          },\n          paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(images) {\n            var ctx = this.ctx;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n\n            for (var i = 0, ii = images.length; i < ii; i++) {\n              var image = images[i];\n              var width = image.width,\n                  height = image.height;\n              var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n              var maskCtx = maskCanvas.context;\n              maskCtx.save();\n              putBinaryImageMask(maskCtx, image);\n              maskCtx.globalCompositeOperation = \"source-in\";\n              maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n              maskCtx.fillRect(0, 0, width, height);\n              maskCtx.restore();\n              ctx.save();\n              ctx.transform.apply(ctx, image.transform);\n              ctx.scale(1, -1);\n              ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n              ctx.restore();\n            }\n          },\n          paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n            const imgData = this.processingType3 ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n\n            this.paintInlineImageXObject(imgData);\n          },\n          paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n            const imgData = this.processingType3 ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n\n            var width = imgData.width;\n            var height = imgData.height;\n            var map = [];\n\n            for (var i = 0, ii = positions.length; i < ii; i += 2) {\n              map.push({\n                transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n                x: 0,\n                y: 0,\n                w: width,\n                h: height\n              });\n            }\n\n            this.paintInlineImageXObjectGroup(imgData, map);\n          },\n          paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(imgData) {\n            var width = imgData.width;\n            var height = imgData.height;\n            var ctx = this.ctx;\n            this.save();\n            ctx.scale(1 / width, -1 / height);\n            var currentTransform = ctx.mozCurrentTransformInverse;\n            var a = currentTransform[0],\n                b = currentTransform[1];\n            var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n            var c = currentTransform[2],\n                d = currentTransform[3];\n            var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n            var imgToPaint, tmpCanvas;\n\n            if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n              imgToPaint = imgData;\n            } else {\n              tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n              var tmpCtx = tmpCanvas.context;\n              putBinaryImageData(tmpCtx, imgData);\n              imgToPaint = tmpCanvas.canvas;\n            }\n\n            var paintWidth = width,\n                paintHeight = height;\n            var tmpCanvasId = \"prescale1\";\n\n            while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n              var newWidth = paintWidth,\n                  newHeight = paintHeight;\n\n              if (widthScale > 2 && paintWidth > 1) {\n                newWidth = Math.ceil(paintWidth / 2);\n                widthScale /= paintWidth / newWidth;\n              }\n\n              if (heightScale > 2 && paintHeight > 1) {\n                newHeight = Math.ceil(paintHeight / 2);\n                heightScale /= paintHeight / newHeight;\n              }\n\n              tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n              tmpCtx = tmpCanvas.context;\n              tmpCtx.clearRect(0, 0, newWidth, newHeight);\n              tmpCtx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n              imgToPaint = tmpCanvas.canvas;\n              paintWidth = newWidth;\n              paintHeight = newHeight;\n              tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n            }\n\n            ctx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, -height, width, height);\n\n            if (this.imageLayer) {\n              var position = this.getCanvasPosition(0, -height);\n              this.imageLayer.appendImage({\n                imgData,\n                left: position[0],\n                top: position[1],\n                width: width / currentTransform[0],\n                height: height / currentTransform[3]\n              });\n            }\n\n            this.restore();\n          },\n          paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(imgData, map) {\n            var ctx = this.ctx;\n            var w = imgData.width;\n            var h = imgData.height;\n            var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n            var tmpCtx = tmpCanvas.context;\n            putBinaryImageData(tmpCtx, imgData);\n\n            for (var i = 0, ii = map.length; i < ii; i++) {\n              var entry = map[i];\n              ctx.save();\n              ctx.transform.apply(ctx, entry.transform);\n              ctx.scale(1, -1);\n              ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n\n              if (this.imageLayer) {\n                var position = this.getCanvasPosition(entry.x, entry.y);\n                this.imageLayer.appendImage({\n                  imgData,\n                  left: position[0],\n                  top: position[1],\n                  width: w,\n                  height: h\n                });\n              }\n\n              ctx.restore();\n            }\n          },\n          paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n            this.ctx.fillRect(0, 0, 1, 1);\n          },\n          paintXObject: function CanvasGraphics_paintXObject() {\n            (0, _util.warn)(\"Unsupported 'paintXObject' command.\");\n          },\n          markPoint: function CanvasGraphics_markPoint(tag) {},\n          markPointProps: function CanvasGraphics_markPointProps(tag, properties) {},\n          beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {},\n          beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(tag, properties) {},\n          endMarkedContent: function CanvasGraphics_endMarkedContent() {},\n          beginCompat: function CanvasGraphics_beginCompat() {},\n          endCompat: function CanvasGraphics_endCompat() {},\n          consumePath: function CanvasGraphics_consumePath() {\n            var ctx = this.ctx;\n\n            if (this.pendingClip) {\n              if (this.pendingClip === EO_CLIP) {\n                ctx.clip(\"evenodd\");\n              } else {\n                ctx.clip();\n              }\n\n              this.pendingClip = null;\n            }\n\n            ctx.beginPath();\n          },\n\n          getSinglePixelWidth(scale) {\n            if (this._cachedGetSinglePixelWidth === null) {\n              const inverse = this.ctx.mozCurrentTransformInverse;\n              this._cachedGetSinglePixelWidth = Math.sqrt(Math.max(inverse[0] * inverse[0] + inverse[1] * inverse[1], inverse[2] * inverse[2] + inverse[3] * inverse[3]));\n            }\n\n            return this._cachedGetSinglePixelWidth;\n          },\n\n          getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n            var transform = this.ctx.mozCurrentTransform;\n            return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\n          }\n        };\n\n        for (var op in _util.OPS) {\n          CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n        }\n\n        return CanvasGraphics;\n      }();\n\n      exports.CanvasGraphics = CanvasGraphics;\n      /***/\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getShadingPatternFromIR = getShadingPatternFromIR;\n      exports.TilingPattern = void 0;\n\n      var _util = __w_pdfjs_require__(1);\n\n      var ShadingIRs = {};\n\n      function applyBoundingBox(ctx, bbox) {\n        if (!bbox || typeof Path2D === \"undefined\") {\n          return;\n        }\n\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n        const region = new Path2D();\n        region.rect(bbox[0], bbox[1], width, height);\n        ctx.clip(region);\n      }\n\n      ShadingIRs.RadialAxial = {\n        fromIR: function RadialAxial_fromIR(raw) {\n          var type = raw[1];\n          var bbox = raw[2];\n          var colorStops = raw[3];\n          var p0 = raw[4];\n          var p1 = raw[5];\n          var r0 = raw[6];\n          var r1 = raw[7];\n          return {\n            type: \"Pattern\",\n            getPattern: function RadialAxial_getPattern(ctx) {\n              applyBoundingBox(ctx, bbox);\n              var grad;\n\n              if (type === \"axial\") {\n                grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n              } else if (type === \"radial\") {\n                grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n              }\n\n              for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n                var c = colorStops[i];\n                grad.addColorStop(c[0], c[1]);\n              }\n\n              return grad;\n            }\n          };\n        }\n      };\n\n      var createMeshCanvas = function createMeshCanvasClosure() {\n        function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n          var coords = context.coords,\n              colors = context.colors;\n          var bytes = data.data,\n              rowSize = data.width * 4;\n          var tmp;\n\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n\n          if (coords[p2 + 1] > coords[p3 + 1]) {\n            tmp = p2;\n            p2 = p3;\n            p3 = tmp;\n            tmp = c2;\n            c2 = c3;\n            c3 = tmp;\n          }\n\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n\n          var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n          var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n          var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n          var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n          var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n          var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n\n          if (y1 >= y3) {\n            return;\n          }\n\n          var c1r = colors[c1],\n              c1g = colors[c1 + 1],\n              c1b = colors[c1 + 2];\n          var c2r = colors[c2],\n              c2g = colors[c2 + 1],\n              c2b = colors[c2 + 2];\n          var c3r = colors[c3],\n              c3g = colors[c3 + 1],\n              c3b = colors[c3 + 2];\n          var minY = Math.round(y1),\n              maxY = Math.round(y3);\n          var xa, car, cag, cab;\n          var xb, cbr, cbg, cbb;\n\n          for (var y = minY; y <= maxY; y++) {\n            if (y < y2) {\n              let k;\n\n              if (y < y1) {\n                k = 0;\n              } else if (y1 === y2) {\n                k = 1;\n              } else {\n                k = (y1 - y) / (y1 - y2);\n              }\n\n              xa = x1 - (x1 - x2) * k;\n              car = c1r - (c1r - c2r) * k;\n              cag = c1g - (c1g - c2g) * k;\n              cab = c1b - (c1b - c2b) * k;\n            } else {\n              let k;\n\n              if (y > y3) {\n                k = 1;\n              } else if (y2 === y3) {\n                k = 0;\n              } else {\n                k = (y2 - y) / (y2 - y3);\n              }\n\n              xa = x2 - (x2 - x3) * k;\n              car = c2r - (c2r - c3r) * k;\n              cag = c2g - (c2g - c3g) * k;\n              cab = c2b - (c2b - c3b) * k;\n            }\n\n            let k;\n\n            if (y < y1) {\n              k = 0;\n            } else if (y > y3) {\n              k = 1;\n            } else {\n              k = (y1 - y) / (y1 - y3);\n            }\n\n            xb = x1 - (x1 - x3) * k;\n            cbr = c1r - (c1r - c3r) * k;\n            cbg = c1g - (c1g - c3g) * k;\n            cbb = c1b - (c1b - c3b) * k;\n            var x1_ = Math.round(Math.min(xa, xb));\n            var x2_ = Math.round(Math.max(xa, xb));\n            var j = rowSize * y + x1_ * 4;\n\n            for (var x = x1_; x <= x2_; x++) {\n              let k = (xa - x) / (xa - xb);\n\n              if (k < 0) {\n                k = 0;\n              } else if (k > 1) {\n                k = 1;\n              }\n\n              bytes[j++] = car - (car - cbr) * k | 0;\n              bytes[j++] = cag - (cag - cbg) * k | 0;\n              bytes[j++] = cab - (cab - cbb) * k | 0;\n              bytes[j++] = 255;\n            }\n          }\n        }\n\n        function drawFigure(data, figure, context) {\n          var ps = figure.coords;\n          var cs = figure.colors;\n          var i, ii;\n\n          switch (figure.type) {\n            case \"lattice\":\n              var verticesPerRow = figure.verticesPerRow;\n              var rows = Math.floor(ps.length / verticesPerRow) - 1;\n              var cols = verticesPerRow - 1;\n\n              for (i = 0; i < rows; i++) {\n                var q = i * verticesPerRow;\n\n                for (var j = 0; j < cols; j++, q++) {\n                  drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n                  drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n                }\n              }\n\n              break;\n\n            case \"triangles\":\n              for (i = 0, ii = ps.length; i < ii; i += 3) {\n                drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n              }\n\n              break;\n\n            default:\n              throw new Error(\"illegal figure\");\n          }\n        }\n\n        function createMeshCanvas(bounds, combinesScale, coords, colors, figures, backgroundColor, cachedCanvases, webGLContext) {\n          var EXPECTED_SCALE = 1.1;\n          var MAX_PATTERN_SIZE = 3000;\n          var BORDER_SIZE = 2;\n          var offsetX = Math.floor(bounds[0]);\n          var offsetY = Math.floor(bounds[1]);\n          var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n          var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n          var width = Math.min(Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n          var height = Math.min(Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n          var scaleX = boundsWidth / width;\n          var scaleY = boundsHeight / height;\n          var context = {\n            coords,\n            colors,\n            offsetX: -offsetX,\n            offsetY: -offsetY,\n            scaleX: 1 / scaleX,\n            scaleY: 1 / scaleY\n          };\n          var paddedWidth = width + BORDER_SIZE * 2;\n          var paddedHeight = height + BORDER_SIZE * 2;\n          var canvas, tmpCanvas, i, ii;\n\n          if (webGLContext.isEnabled) {\n            canvas = webGLContext.drawFigures({\n              width,\n              height,\n              backgroundColor,\n              figures,\n              context\n            });\n            tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n            tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n            canvas = tmpCanvas.canvas;\n          } else {\n            tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n            var tmpCtx = tmpCanvas.context;\n            var data = tmpCtx.createImageData(width, height);\n\n            if (backgroundColor) {\n              var bytes = data.data;\n\n              for (i = 0, ii = bytes.length; i < ii; i += 4) {\n                bytes[i] = backgroundColor[0];\n                bytes[i + 1] = backgroundColor[1];\n                bytes[i + 2] = backgroundColor[2];\n                bytes[i + 3] = 255;\n              }\n            }\n\n            for (i = 0; i < figures.length; i++) {\n              drawFigure(data, figures[i], context);\n            }\n\n            tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n            canvas = tmpCanvas.canvas;\n          }\n\n          return {\n            canvas,\n            offsetX: offsetX - BORDER_SIZE * scaleX,\n            offsetY: offsetY - BORDER_SIZE * scaleY,\n            scaleX,\n            scaleY\n          };\n        }\n\n        return createMeshCanvas;\n      }();\n\n      ShadingIRs.Mesh = {\n        fromIR: function Mesh_fromIR(raw) {\n          var coords = raw[2];\n          var colors = raw[3];\n          var figures = raw[4];\n          var bounds = raw[5];\n          var matrix = raw[6];\n          var bbox = raw[7];\n          var background = raw[8];\n          return {\n            type: \"Pattern\",\n            getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n              applyBoundingBox(ctx, bbox);\n              var scale;\n\n              if (shadingFill) {\n                scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n              } else {\n                scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n\n                if (matrix) {\n                  var matrixScale = _util.Util.singularValueDecompose2dScale(matrix);\n\n                  scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n                }\n              }\n\n              var temporaryPatternCanvas = createMeshCanvas(bounds, scale, coords, colors, figures, shadingFill ? null : background, owner.cachedCanvases, owner.webGLContext);\n\n              if (!shadingFill) {\n                ctx.setTransform.apply(ctx, owner.baseTransform);\n\n                if (matrix) {\n                  ctx.transform.apply(ctx, matrix);\n                }\n              }\n\n              ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n              ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n              return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n            }\n          };\n        }\n      };\n      ShadingIRs.Dummy = {\n        fromIR: function Dummy_fromIR() {\n          return {\n            type: \"Pattern\",\n            getPattern: function Dummy_fromIR_getPattern() {\n              return \"hotpink\";\n            }\n          };\n        }\n      };\n\n      function getShadingPatternFromIR(raw) {\n        var shadingIR = ShadingIRs[raw[0]];\n\n        if (!shadingIR) {\n          throw new Error(`Unknown IR type: ${raw[0]}`);\n        }\n\n        return shadingIR.fromIR(raw);\n      }\n\n      var TilingPattern = function TilingPatternClosure() {\n        var PaintType = {\n          COLORED: 1,\n          UNCOLORED: 2\n        };\n        var MAX_PATTERN_SIZE = 3000;\n\n        function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n          this.operatorList = IR[2];\n          this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n          this.bbox = IR[4];\n          this.xstep = IR[5];\n          this.ystep = IR[6];\n          this.paintType = IR[7];\n          this.tilingType = IR[8];\n          this.color = color;\n          this.canvasGraphicsFactory = canvasGraphicsFactory;\n          this.baseTransform = baseTransform;\n          this.type = \"Pattern\";\n          this.ctx = ctx;\n        }\n\n        TilingPattern.prototype = {\n          createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n            var operatorList = this.operatorList;\n            var bbox = this.bbox;\n            var xstep = this.xstep;\n            var ystep = this.ystep;\n            var paintType = this.paintType;\n            var tilingType = this.tilingType;\n            var color = this.color;\n            var canvasGraphicsFactory = this.canvasGraphicsFactory;\n            (0, _util.info)(\"TilingType: \" + tilingType);\n            var x0 = bbox[0],\n                y0 = bbox[1],\n                x1 = bbox[2],\n                y1 = bbox[3];\n\n            var matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n\n            var curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n\n            var combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n            var dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n            var dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n            var tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n            var tmpCtx = tmpCanvas.context;\n            var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n            graphics.groupLevel = owner.groupLevel;\n            this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n            graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n            graphics.transform(1, 0, 0, 1, -x0, -y0);\n            this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n            graphics.executeOperatorList(operatorList);\n            this.ctx.transform(1, 0, 0, 1, x0, y0);\n            this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n            return tmpCanvas.canvas;\n          },\n          getSizeAndScale: function TilingPattern_getSizeAndScale(step, realOutputSize, scale) {\n            step = Math.abs(step);\n            var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n            var size = Math.ceil(step * scale);\n\n            if (size >= maxSize) {\n              size = maxSize;\n            } else {\n              scale = size / step;\n            }\n\n            return {\n              scale,\n              size\n            };\n          },\n          clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n            if (Array.isArray(bbox) && bbox.length === 4) {\n              var bboxWidth = x1 - x0;\n              var bboxHeight = y1 - y0;\n              graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n              graphics.clip();\n              graphics.endPath();\n            }\n          },\n          setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(graphics, paintType, color) {\n            const context = graphics.ctx,\n                  current = graphics.current;\n\n            switch (paintType) {\n              case PaintType.COLORED:\n                var ctx = this.ctx;\n                context.fillStyle = ctx.fillStyle;\n                context.strokeStyle = ctx.strokeStyle;\n                current.fillColor = ctx.fillStyle;\n                current.strokeColor = ctx.strokeStyle;\n                break;\n\n              case PaintType.UNCOLORED:\n                var cssColor = _util.Util.makeCssRgb(color[0], color[1], color[2]);\n\n                context.fillStyle = cssColor;\n                context.strokeStyle = cssColor;\n                current.fillColor = cssColor;\n                current.strokeColor = cssColor;\n                break;\n\n              default:\n                throw new _util.FormatError(`Unsupported paint type: ${paintType}`);\n            }\n          },\n          getPattern: function TilingPattern_getPattern(ctx, owner) {\n            ctx = this.ctx;\n            ctx.setTransform.apply(ctx, this.baseTransform);\n            ctx.transform.apply(ctx, this.matrix);\n            var temporaryPatternCanvas = this.createPatternCanvas(owner);\n            return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n          }\n        };\n        return TilingPattern;\n      }();\n\n      exports.TilingPattern = TilingPattern;\n      /***/\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.GlobalWorkerOptions = void 0;\n      const GlobalWorkerOptions = Object.create(null);\n      exports.GlobalWorkerOptions = GlobalWorkerOptions;\n      GlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\n      GlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\n      /***/\n    },\n    /* 11 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.MessageHandler = void 0;\n\n      var _util = __w_pdfjs_require__(1);\n\n      const CallbackKind = {\n        UNKNOWN: 0,\n        DATA: 1,\n        ERROR: 2\n      };\n      const StreamKind = {\n        UNKNOWN: 0,\n        CANCEL: 1,\n        CANCEL_COMPLETE: 2,\n        CLOSE: 3,\n        ENQUEUE: 4,\n        ERROR: 5,\n        PULL: 6,\n        PULL_COMPLETE: 7,\n        START_COMPLETE: 8\n      };\n\n      function wrapReason(reason) {\n        if (typeof reason !== \"object\" || reason === null) {\n          return reason;\n        }\n\n        switch (reason.name) {\n          case \"AbortException\":\n            return new _util.AbortException(reason.message);\n\n          case \"MissingPDFException\":\n            return new _util.MissingPDFException(reason.message);\n\n          case \"UnexpectedResponseException\":\n            return new _util.UnexpectedResponseException(reason.message, reason.status);\n\n          case \"UnknownErrorException\":\n            return new _util.UnknownErrorException(reason.message, reason.details);\n\n          default:\n            return new _util.UnknownErrorException(reason.message, reason.toString());\n        }\n      }\n\n      class MessageHandler {\n        constructor(sourceName, targetName, comObj) {\n          this.sourceName = sourceName;\n          this.targetName = targetName;\n          this.comObj = comObj;\n          this.callbackId = 1;\n          this.streamId = 1;\n          this.postMessageTransfers = true;\n          this.streamSinks = Object.create(null);\n          this.streamControllers = Object.create(null);\n          this.callbackCapabilities = Object.create(null);\n          this.actionHandler = Object.create(null);\n\n          this._onComObjOnMessage = event => {\n            const data = event.data;\n\n            if (data.targetName !== this.sourceName) {\n              return;\n            }\n\n            if (data.stream) {\n              this._processStreamMessage(data);\n\n              return;\n            }\n\n            if (data.callback) {\n              const callbackId = data.callbackId;\n              const capability = this.callbackCapabilities[callbackId];\n\n              if (!capability) {\n                throw new Error(`Cannot resolve callback ${callbackId}`);\n              }\n\n              delete this.callbackCapabilities[callbackId];\n\n              if (data.callback === CallbackKind.DATA) {\n                capability.resolve(data.data);\n              } else if (data.callback === CallbackKind.ERROR) {\n                capability.reject(wrapReason(data.reason));\n              } else {\n                throw new Error(\"Unexpected callback case\");\n              }\n\n              return;\n            }\n\n            const action = this.actionHandler[data.action];\n\n            if (!action) {\n              throw new Error(`Unknown action from worker: ${data.action}`);\n            }\n\n            if (data.callbackId) {\n              const sourceName = this.sourceName;\n              const targetName = data.sourceName;\n              new Promise(function (resolve) {\n                resolve(action(data.data));\n              }).then(function (result) {\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  callback: CallbackKind.DATA,\n                  callbackId: data.callbackId,\n                  data: result\n                });\n              }, function (reason) {\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  callback: CallbackKind.ERROR,\n                  callbackId: data.callbackId,\n                  reason: wrapReason(reason)\n                });\n              });\n              return;\n            }\n\n            if (data.streamId) {\n              this._createStreamSink(data);\n\n              return;\n            }\n\n            action(data.data);\n          };\n\n          comObj.addEventListener(\"message\", this._onComObjOnMessage);\n        }\n\n        on(actionName, handler) {\n          const ah = this.actionHandler;\n\n          if (ah[actionName]) {\n            throw new Error(`There is already an actionName called \"${actionName}\"`);\n          }\n\n          ah[actionName] = handler;\n        }\n\n        send(actionName, data, transfers) {\n          this._postMessage({\n            sourceName: this.sourceName,\n            targetName: this.targetName,\n            action: actionName,\n            data\n          }, transfers);\n        }\n\n        sendWithPromise(actionName, data, transfers) {\n          const callbackId = this.callbackId++;\n          const capability = (0, _util.createPromiseCapability)();\n          this.callbackCapabilities[callbackId] = capability;\n\n          try {\n            this._postMessage({\n              sourceName: this.sourceName,\n              targetName: this.targetName,\n              action: actionName,\n              callbackId,\n              data\n            }, transfers);\n          } catch (ex) {\n            capability.reject(ex);\n          }\n\n          return capability.promise;\n        }\n\n        sendWithStream(actionName, data, queueingStrategy, transfers) {\n          const streamId = this.streamId++;\n          const sourceName = this.sourceName;\n          const targetName = this.targetName;\n          const comObj = this.comObj;\n          return new ReadableStream({\n            start: controller => {\n              const startCapability = (0, _util.createPromiseCapability)();\n              this.streamControllers[streamId] = {\n                controller,\n                startCall: startCapability,\n                pullCall: null,\n                cancelCall: null,\n                isClosed: false\n              };\n\n              this._postMessage({\n                sourceName,\n                targetName,\n                action: actionName,\n                streamId,\n                data,\n                desiredSize: controller.desiredSize\n              }, transfers);\n\n              return startCapability.promise;\n            },\n            pull: controller => {\n              const pullCapability = (0, _util.createPromiseCapability)();\n              this.streamControllers[streamId].pullCall = pullCapability;\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.PULL,\n                streamId,\n                desiredSize: controller.desiredSize\n              });\n              return pullCapability.promise;\n            },\n            cancel: reason => {\n              (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n              const cancelCapability = (0, _util.createPromiseCapability)();\n              this.streamControllers[streamId].cancelCall = cancelCapability;\n              this.streamControllers[streamId].isClosed = true;\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.CANCEL,\n                streamId,\n                reason: wrapReason(reason)\n              });\n              return cancelCapability.promise;\n            }\n          }, queueingStrategy);\n        }\n\n        _createStreamSink(data) {\n          const self = this;\n          const action = this.actionHandler[data.action];\n          const streamId = data.streamId;\n          const sourceName = this.sourceName;\n          const targetName = data.sourceName;\n          const comObj = this.comObj;\n          const streamSink = {\n            enqueue(chunk) {\n              let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n              let transfers = arguments.length > 2 ? arguments[2] : undefined;\n\n              if (this.isCancelled) {\n                return;\n              }\n\n              const lastDesiredSize = this.desiredSize;\n              this.desiredSize -= size;\n\n              if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n                this.sinkCapability = (0, _util.createPromiseCapability)();\n                this.ready = this.sinkCapability.promise;\n              }\n\n              self._postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.ENQUEUE,\n                streamId,\n                chunk\n              }, transfers);\n            },\n\n            close() {\n              if (this.isCancelled) {\n                return;\n              }\n\n              this.isCancelled = true;\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.CLOSE,\n                streamId\n              });\n              delete self.streamSinks[streamId];\n            },\n\n            error(reason) {\n              (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n\n              if (this.isCancelled) {\n                return;\n              }\n\n              this.isCancelled = true;\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.ERROR,\n                streamId,\n                reason: wrapReason(reason)\n              });\n            },\n\n            sinkCapability: (0, _util.createPromiseCapability)(),\n            onPull: null,\n            onCancel: null,\n            isCancelled: false,\n            desiredSize: data.desiredSize,\n            ready: null\n          };\n          streamSink.sinkCapability.resolve();\n          streamSink.ready = streamSink.sinkCapability.promise;\n          this.streamSinks[streamId] = streamSink;\n          new Promise(function (resolve) {\n            resolve(action(data.data, streamSink));\n          }).then(function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.START_COMPLETE,\n              streamId,\n              success: true\n            });\n          }, function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.START_COMPLETE,\n              streamId,\n              reason: wrapReason(reason)\n            });\n          });\n        }\n\n        _processStreamMessage(data) {\n          const streamId = data.streamId;\n          const sourceName = this.sourceName;\n          const targetName = data.sourceName;\n          const comObj = this.comObj;\n\n          switch (data.stream) {\n            case StreamKind.START_COMPLETE:\n              if (data.success) {\n                this.streamControllers[streamId].startCall.resolve();\n              } else {\n                this.streamControllers[streamId].startCall.reject(wrapReason(data.reason));\n              }\n\n              break;\n\n            case StreamKind.PULL_COMPLETE:\n              if (data.success) {\n                this.streamControllers[streamId].pullCall.resolve();\n              } else {\n                this.streamControllers[streamId].pullCall.reject(wrapReason(data.reason));\n              }\n\n              break;\n\n            case StreamKind.PULL:\n              if (!this.streamSinks[streamId]) {\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.PULL_COMPLETE,\n                  streamId,\n                  success: true\n                });\n                break;\n              }\n\n              if (this.streamSinks[streamId].desiredSize <= 0 && data.desiredSize > 0) {\n                this.streamSinks[streamId].sinkCapability.resolve();\n              }\n\n              this.streamSinks[streamId].desiredSize = data.desiredSize;\n              const {\n                onPull\n              } = this.streamSinks[data.streamId];\n              new Promise(function (resolve) {\n                resolve(onPull && onPull());\n              }).then(function () {\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.PULL_COMPLETE,\n                  streamId,\n                  success: true\n                });\n              }, function (reason) {\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.PULL_COMPLETE,\n                  streamId,\n                  reason: wrapReason(reason)\n                });\n              });\n              break;\n\n            case StreamKind.ENQUEUE:\n              (0, _util.assert)(this.streamControllers[streamId], \"enqueue should have stream controller\");\n\n              if (this.streamControllers[streamId].isClosed) {\n                break;\n              }\n\n              this.streamControllers[streamId].controller.enqueue(data.chunk);\n              break;\n\n            case StreamKind.CLOSE:\n              (0, _util.assert)(this.streamControllers[streamId], \"close should have stream controller\");\n\n              if (this.streamControllers[streamId].isClosed) {\n                break;\n              }\n\n              this.streamControllers[streamId].isClosed = true;\n              this.streamControllers[streamId].controller.close();\n\n              this._deleteStreamController(streamId);\n\n              break;\n\n            case StreamKind.ERROR:\n              (0, _util.assert)(this.streamControllers[streamId], \"error should have stream controller\");\n              this.streamControllers[streamId].controller.error(wrapReason(data.reason));\n\n              this._deleteStreamController(streamId);\n\n              break;\n\n            case StreamKind.CANCEL_COMPLETE:\n              if (data.success) {\n                this.streamControllers[streamId].cancelCall.resolve();\n              } else {\n                this.streamControllers[streamId].cancelCall.reject(wrapReason(data.reason));\n              }\n\n              this._deleteStreamController(streamId);\n\n              break;\n\n            case StreamKind.CANCEL:\n              if (!this.streamSinks[streamId]) {\n                break;\n              }\n\n              const {\n                onCancel\n              } = this.streamSinks[data.streamId];\n              new Promise(function (resolve) {\n                resolve(onCancel && onCancel(wrapReason(data.reason)));\n              }).then(function () {\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.CANCEL_COMPLETE,\n                  streamId,\n                  success: true\n                });\n              }, function (reason) {\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.CANCEL_COMPLETE,\n                  streamId,\n                  reason: wrapReason(reason)\n                });\n              });\n              this.streamSinks[streamId].sinkCapability.reject(wrapReason(data.reason));\n              this.streamSinks[streamId].isCancelled = true;\n              delete this.streamSinks[streamId];\n              break;\n\n            default:\n              throw new Error(\"Unexpected stream case\");\n          }\n        }\n\n        async _deleteStreamController(streamId) {\n          await Promise.allSettled([this.streamControllers[streamId].startCall, this.streamControllers[streamId].pullCall, this.streamControllers[streamId].cancelCall].map(function (capability) {\n            return capability && capability.promise;\n          }));\n          delete this.streamControllers[streamId];\n        }\n\n        _postMessage(message, transfers) {\n          if (transfers && this.postMessageTransfers) {\n            this.comObj.postMessage(message, transfers);\n          } else {\n            this.comObj.postMessage(message);\n          }\n        }\n\n        destroy() {\n          this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n        }\n\n      }\n\n      exports.MessageHandler = MessageHandler;\n      /***/\n    },\n    /* 12 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.Metadata = void 0;\n\n      var _util = __w_pdfjs_require__(1);\n\n      var _xml_parser = __w_pdfjs_require__(13);\n\n      class Metadata {\n        constructor(data) {\n          (0, _util.assert)(typeof data === \"string\", \"Metadata: input is not a string\");\n          data = this._repair(data);\n          const parser = new _xml_parser.SimpleXMLParser();\n          const xmlDocument = parser.parseFromString(data);\n          this._metadataMap = new Map();\n\n          if (xmlDocument) {\n            this._parse(xmlDocument);\n          }\n        }\n\n        _repair(data) {\n          return data.replace(/^[^<]+/, \"\").replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n            const bytes = codes.replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n              return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n            }).replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n              switch (name) {\n                case \"amp\":\n                  return \"&\";\n\n                case \"apos\":\n                  return \"'\";\n\n                case \"gt\":\n                  return \">\";\n\n                case \"lt\":\n                  return \"<\";\n\n                case \"quot\":\n                  return '\"';\n              }\n\n              throw new Error(`_repair: ${name} isn't defined.`);\n            });\n            let chars = \"\";\n\n            for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n              const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n\n              if (code >= 32 && code < 127 && code !== 60 && code !== 62 && code !== 38) {\n                chars += String.fromCharCode(code);\n              } else {\n                chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n              }\n            }\n\n            return \">\" + chars;\n          });\n        }\n\n        _parse(xmlDocument) {\n          let rdf = xmlDocument.documentElement;\n\n          if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n            rdf = rdf.firstChild;\n\n            while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n              rdf = rdf.nextSibling;\n            }\n          }\n\n          const nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n\n          if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n            return;\n          }\n\n          const children = rdf.childNodes;\n\n          for (let i = 0, ii = children.length; i < ii; i++) {\n            const desc = children[i];\n\n            if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n              continue;\n            }\n\n            for (let j = 0, jj = desc.childNodes.length; j < jj; j++) {\n              if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n                const entry = desc.childNodes[j];\n                const name = entry.nodeName.toLowerCase();\n\n                this._metadataMap.set(name, entry.textContent.trim());\n              }\n            }\n          }\n        }\n\n        get(name) {\n          return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n        }\n\n        getAll() {\n          const obj = Object.create(null);\n\n          for (const [key, value] of this._metadataMap) {\n            obj[key] = value;\n          }\n\n          return obj;\n        }\n\n        has(name) {\n          return this._metadataMap.has(name);\n        }\n\n      }\n\n      exports.Metadata = Metadata;\n      /***/\n    },\n    /* 13 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.SimpleXMLParser = void 0;\n      const XMLParserErrorCode = {\n        NoError: 0,\n        EndOfDocument: -1,\n        UnterminatedCdat: -2,\n        UnterminatedXmlDeclaration: -3,\n        UnterminatedDoctypeDeclaration: -4,\n        UnterminatedComment: -5,\n        MalformedElement: -6,\n        OutOfMemory: -7,\n        UnterminatedAttributeValue: -8,\n        UnterminatedElement: -9,\n        ElementNeverBegun: -10\n      };\n\n      function isWhitespace(s, index) {\n        const ch = s[index];\n        return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n      }\n\n      function isWhitespaceString(s) {\n        for (let i = 0, ii = s.length; i < ii; i++) {\n          if (!isWhitespace(s, i)) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      class XMLParserBase {\n        _resolveEntities(s) {\n          return s.replace(/&([^;]+);/g, (all, entity) => {\n            if (entity.substring(0, 2) === \"#x\") {\n              return String.fromCharCode(parseInt(entity.substring(2), 16));\n            } else if (entity.substring(0, 1) === \"#\") {\n              return String.fromCharCode(parseInt(entity.substring(1), 10));\n            }\n\n            switch (entity) {\n              case \"lt\":\n                return \"<\";\n\n              case \"gt\":\n                return \">\";\n\n              case \"amp\":\n                return \"&\";\n\n              case \"quot\":\n                return '\"';\n            }\n\n            return this.onResolveEntity(entity);\n          });\n        }\n\n        _parseContent(s, start) {\n          const attributes = [];\n          let pos = start;\n\n          function skipWs() {\n            while (pos < s.length && isWhitespace(s, pos)) {\n              ++pos;\n            }\n          }\n\n          while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n            ++pos;\n          }\n\n          const name = s.substring(start, pos);\n          skipWs();\n\n          while (pos < s.length && s[pos] !== \">\" && s[pos] !== \"/\" && s[pos] !== \"?\") {\n            skipWs();\n            let attrName = \"\",\n                attrValue = \"\";\n\n            while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n              attrName += s[pos];\n              ++pos;\n            }\n\n            skipWs();\n\n            if (s[pos] !== \"=\") {\n              return null;\n            }\n\n            ++pos;\n            skipWs();\n            const attrEndChar = s[pos];\n\n            if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n              return null;\n            }\n\n            const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n\n            if (attrEndIndex < 0) {\n              return null;\n            }\n\n            attrValue = s.substring(pos, attrEndIndex);\n            attributes.push({\n              name: attrName,\n              value: this._resolveEntities(attrValue)\n            });\n            pos = attrEndIndex + 1;\n            skipWs();\n          }\n\n          return {\n            name,\n            attributes,\n            parsed: pos - start\n          };\n        }\n\n        _parseProcessingInstruction(s, start) {\n          let pos = start;\n\n          function skipWs() {\n            while (pos < s.length && isWhitespace(s, pos)) {\n              ++pos;\n            }\n          }\n\n          while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n            ++pos;\n          }\n\n          const name = s.substring(start, pos);\n          skipWs();\n          const attrStart = pos;\n\n          while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n            ++pos;\n          }\n\n          const value = s.substring(attrStart, pos);\n          return {\n            name,\n            value,\n            parsed: pos - start\n          };\n        }\n\n        parseXml(s) {\n          let i = 0;\n\n          while (i < s.length) {\n            const ch = s[i];\n            let j = i;\n\n            if (ch === \"<\") {\n              ++j;\n              const ch2 = s[j];\n              let q;\n\n              switch (ch2) {\n                case \"/\":\n                  ++j;\n                  q = s.indexOf(\">\", j);\n\n                  if (q < 0) {\n                    this.onError(XMLParserErrorCode.UnterminatedElement);\n                    return;\n                  }\n\n                  this.onEndElement(s.substring(j, q));\n                  j = q + 1;\n                  break;\n\n                case \"?\":\n                  ++j;\n\n                  const pi = this._parseProcessingInstruction(s, j);\n\n                  if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n                    this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n                    return;\n                  }\n\n                  this.onPi(pi.name, pi.value);\n                  j += pi.parsed + 2;\n                  break;\n\n                case \"!\":\n                  if (s.substring(j + 1, j + 3) === \"--\") {\n                    q = s.indexOf(\"-->\", j + 3);\n\n                    if (q < 0) {\n                      this.onError(XMLParserErrorCode.UnterminatedComment);\n                      return;\n                    }\n\n                    this.onComment(s.substring(j + 3, q));\n                    j = q + 3;\n                  } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n                    q = s.indexOf(\"]]>\", j + 8);\n\n                    if (q < 0) {\n                      this.onError(XMLParserErrorCode.UnterminatedCdat);\n                      return;\n                    }\n\n                    this.onCdata(s.substring(j + 8, q));\n                    j = q + 3;\n                  } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n                    const q2 = s.indexOf(\"[\", j + 8);\n                    let complexDoctype = false;\n                    q = s.indexOf(\">\", j + 8);\n\n                    if (q < 0) {\n                      this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                      return;\n                    }\n\n                    if (q2 > 0 && q > q2) {\n                      q = s.indexOf(\"]>\", j + 8);\n\n                      if (q < 0) {\n                        this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                        return;\n                      }\n\n                      complexDoctype = true;\n                    }\n\n                    const doctypeContent = s.substring(j + 8, q + (complexDoctype ? 1 : 0));\n                    this.onDoctype(doctypeContent);\n                    j = q + (complexDoctype ? 2 : 1);\n                  } else {\n                    this.onError(XMLParserErrorCode.MalformedElement);\n                    return;\n                  }\n\n                  break;\n\n                default:\n                  const content = this._parseContent(s, j);\n\n                  if (content === null) {\n                    this.onError(XMLParserErrorCode.MalformedElement);\n                    return;\n                  }\n\n                  let isClosed = false;\n\n                  if (s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\") {\n                    isClosed = true;\n                  } else if (s.substring(j + content.parsed, j + content.parsed + 1) !== \">\") {\n                    this.onError(XMLParserErrorCode.UnterminatedElement);\n                    return;\n                  }\n\n                  this.onBeginElement(content.name, content.attributes, isClosed);\n                  j += content.parsed + (isClosed ? 2 : 1);\n                  break;\n              }\n            } else {\n              while (j < s.length && s[j] !== \"<\") {\n                j++;\n              }\n\n              const text = s.substring(i, j);\n              this.onText(this._resolveEntities(text));\n            }\n\n            i = j;\n          }\n        }\n\n        onResolveEntity(name) {\n          return `&${name};`;\n        }\n\n        onPi(name, value) {}\n\n        onComment(text) {}\n\n        onCdata(text) {}\n\n        onDoctype(doctypeContent) {}\n\n        onText(text) {}\n\n        onBeginElement(name, attributes, isEmpty) {}\n\n        onEndElement(name) {}\n\n        onError(code) {}\n\n      }\n\n      class SimpleDOMNode {\n        constructor(nodeName, nodeValue) {\n          this.nodeName = nodeName;\n          this.nodeValue = nodeValue;\n          Object.defineProperty(this, \"parentNode\", {\n            value: null,\n            writable: true\n          });\n        }\n\n        get firstChild() {\n          return this.childNodes && this.childNodes[0];\n        }\n\n        get nextSibling() {\n          const childNodes = this.parentNode.childNodes;\n\n          if (!childNodes) {\n            return undefined;\n          }\n\n          const index = childNodes.indexOf(this);\n\n          if (index === -1) {\n            return undefined;\n          }\n\n          return childNodes[index + 1];\n        }\n\n        get textContent() {\n          if (!this.childNodes) {\n            return this.nodeValue || \"\";\n          }\n\n          return this.childNodes.map(function (child) {\n            return child.textContent;\n          }).join(\"\");\n        }\n\n        hasChildNodes() {\n          return this.childNodes && this.childNodes.length > 0;\n        }\n\n      }\n\n      class SimpleXMLParser extends XMLParserBase {\n        constructor() {\n          super();\n          this._currentFragment = null;\n          this._stack = null;\n          this._errorCode = XMLParserErrorCode.NoError;\n        }\n\n        parseFromString(data) {\n          this._currentFragment = [];\n          this._stack = [];\n          this._errorCode = XMLParserErrorCode.NoError;\n          this.parseXml(data);\n\n          if (this._errorCode !== XMLParserErrorCode.NoError) {\n            return undefined;\n          }\n\n          const [documentElement] = this._currentFragment;\n\n          if (!documentElement) {\n            return undefined;\n          }\n\n          return {\n            documentElement\n          };\n        }\n\n        onResolveEntity(name) {\n          switch (name) {\n            case \"apos\":\n              return \"'\";\n          }\n\n          return super.onResolveEntity(name);\n        }\n\n        onText(text) {\n          if (isWhitespaceString(text)) {\n            return;\n          }\n\n          const node = new SimpleDOMNode(\"#text\", text);\n\n          this._currentFragment.push(node);\n        }\n\n        onCdata(text) {\n          const node = new SimpleDOMNode(\"#text\", text);\n\n          this._currentFragment.push(node);\n        }\n\n        onBeginElement(name, attributes, isEmpty) {\n          const node = new SimpleDOMNode(name);\n          node.childNodes = [];\n\n          this._currentFragment.push(node);\n\n          if (isEmpty) {\n            return;\n          }\n\n          this._stack.push(this._currentFragment);\n\n          this._currentFragment = node.childNodes;\n        }\n\n        onEndElement(name) {\n          this._currentFragment = this._stack.pop() || [];\n          const lastElement = this._currentFragment[this._currentFragment.length - 1];\n\n          if (!lastElement) {\n            return;\n          }\n\n          for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n            lastElement.childNodes[i].parentNode = lastElement;\n          }\n        }\n\n        onError(code) {\n          this._errorCode = code;\n        }\n\n      }\n\n      exports.SimpleXMLParser = SimpleXMLParser;\n      /***/\n    },\n    /* 14 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFDataTransportStream = void 0;\n\n      var _util = __w_pdfjs_require__(1);\n\n      class PDFDataTransportStream {\n        constructor(params, pdfDataRangeTransport) {\n          (0, _util.assert)(pdfDataRangeTransport);\n          this._queuedChunks = [];\n          this._progressiveDone = params.progressiveDone || false;\n          const initialData = params.initialData;\n\n          if (initialData && initialData.length > 0) {\n            const buffer = new Uint8Array(initialData).buffer;\n\n            this._queuedChunks.push(buffer);\n          }\n\n          this._pdfDataRangeTransport = pdfDataRangeTransport;\n          this._isStreamingSupported = !params.disableStream;\n          this._isRangeSupported = !params.disableRange;\n          this._contentLength = params.length;\n          this._fullRequestReader = null;\n          this._rangeReaders = [];\n\n          this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n            this._onReceiveData({\n              begin,\n              chunk\n            });\n          });\n\n          this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n            this._onProgress({\n              loaded,\n              total\n            });\n          });\n\n          this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n            this._onReceiveData({\n              chunk\n            });\n          });\n\n          this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n            this._onProgressiveDone();\n          });\n\n          this._pdfDataRangeTransport.transportReady();\n        }\n\n        _onReceiveData(args) {\n          const buffer = new Uint8Array(args.chunk).buffer;\n\n          if (args.begin === undefined) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader._enqueue(buffer);\n            } else {\n              this._queuedChunks.push(buffer);\n            }\n          } else {\n            const found = this._rangeReaders.some(function (rangeReader) {\n              if (rangeReader._begin !== args.begin) {\n                return false;\n              }\n\n              rangeReader._enqueue(buffer);\n\n              return true;\n            });\n\n            (0, _util.assert)(found);\n          }\n        }\n\n        get _progressiveDataLength() {\n          return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n        }\n\n        _onProgress(evt) {\n          if (evt.total === undefined) {\n            const firstReader = this._rangeReaders[0];\n\n            if (firstReader && firstReader.onProgress) {\n              firstReader.onProgress({\n                loaded: evt.loaded\n              });\n            }\n          } else {\n            const fullReader = this._fullRequestReader;\n\n            if (fullReader && fullReader.onProgress) {\n              fullReader.onProgress({\n                loaded: evt.loaded,\n                total: evt.total\n              });\n            }\n          }\n        }\n\n        _onProgressiveDone() {\n          if (this._fullRequestReader) {\n            this._fullRequestReader.progressiveDone();\n          }\n\n          this._progressiveDone = true;\n        }\n\n        _removeRangeReader(reader) {\n          const i = this._rangeReaders.indexOf(reader);\n\n          if (i >= 0) {\n            this._rangeReaders.splice(i, 1);\n          }\n        }\n\n        getFullReader() {\n          (0, _util.assert)(!this._fullRequestReader);\n          const queuedChunks = this._queuedChunks;\n          this._queuedChunks = null;\n          return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone);\n        }\n\n        getRangeReader(begin, end) {\n          if (end <= this._progressiveDataLength) {\n            return null;\n          }\n\n          const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n\n          this._pdfDataRangeTransport.requestDataRange(begin, end);\n\n          this._rangeReaders.push(reader);\n\n          return reader;\n        }\n\n        cancelAllRequests(reason) {\n          if (this._fullRequestReader) {\n            this._fullRequestReader.cancel(reason);\n          }\n\n          const readers = this._rangeReaders.slice(0);\n\n          readers.forEach(function (rangeReader) {\n            rangeReader.cancel(reason);\n          });\n\n          this._pdfDataRangeTransport.abort();\n        }\n\n      }\n\n      exports.PDFDataTransportStream = PDFDataTransportStream;\n\n      class PDFDataTransportStreamReader {\n        constructor(stream, queuedChunks) {\n          let progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          this._stream = stream;\n          this._done = progressiveDone || false;\n          this._filename = null;\n          this._queuedChunks = queuedChunks || [];\n          this._loaded = 0;\n\n          for (const chunk of this._queuedChunks) {\n            this._loaded += chunk.byteLength;\n          }\n\n          this._requests = [];\n          this._headersReady = Promise.resolve();\n          stream._fullRequestReader = this;\n          this.onProgress = null;\n        }\n\n        _enqueue(chunk) {\n          if (this._done) {\n            return;\n          }\n\n          if (this._requests.length > 0) {\n            const requestCapability = this._requests.shift();\n\n            requestCapability.resolve({\n              value: chunk,\n              done: false\n            });\n          } else {\n            this._queuedChunks.push(chunk);\n          }\n\n          this._loaded += chunk.byteLength;\n        }\n\n        get headersReady() {\n          return this._headersReady;\n        }\n\n        get filename() {\n          return this._filename;\n        }\n\n        get isRangeSupported() {\n          return this._stream._isRangeSupported;\n        }\n\n        get isStreamingSupported() {\n          return this._stream._isStreamingSupported;\n        }\n\n        get contentLength() {\n          return this._stream._contentLength;\n        }\n\n        async read() {\n          if (this._queuedChunks.length > 0) {\n            const chunk = this._queuedChunks.shift();\n\n            return {\n              value: chunk,\n              done: false\n            };\n          }\n\n          if (this._done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n\n          const requestCapability = (0, _util.createPromiseCapability)();\n\n          this._requests.push(requestCapability);\n\n          return requestCapability.promise;\n        }\n\n        cancel(reason) {\n          this._done = true;\n\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n\n          this._requests = [];\n        }\n\n        progressiveDone() {\n          if (this._done) {\n            return;\n          }\n\n          this._done = true;\n        }\n\n      }\n\n      class PDFDataTransportStreamRangeReader {\n        constructor(stream, begin, end) {\n          this._stream = stream;\n          this._begin = begin;\n          this._end = end;\n          this._queuedChunk = null;\n          this._requests = [];\n          this._done = false;\n          this.onProgress = null;\n        }\n\n        _enqueue(chunk) {\n          if (this._done) {\n            return;\n          }\n\n          if (this._requests.length === 0) {\n            this._queuedChunk = chunk;\n          } else {\n            const requestsCapability = this._requests.shift();\n\n            requestsCapability.resolve({\n              value: chunk,\n              done: false\n            });\n\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n\n            this._requests = [];\n          }\n\n          this._done = true;\n\n          this._stream._removeRangeReader(this);\n        }\n\n        get isStreamingSupported() {\n          return false;\n        }\n\n        async read() {\n          if (this._queuedChunk) {\n            const chunk = this._queuedChunk;\n            this._queuedChunk = null;\n            return {\n              value: chunk,\n              done: false\n            };\n          }\n\n          if (this._done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n\n          const requestCapability = (0, _util.createPromiseCapability)();\n\n          this._requests.push(requestCapability);\n\n          return requestCapability.promise;\n        }\n\n        cancel(reason) {\n          this._done = true;\n\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n\n          this._requests = [];\n\n          this._stream._removeRangeReader(this);\n        }\n\n      }\n      /***/\n\n    },\n    /* 15 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.WebGLContext = void 0;\n\n      var _util = __w_pdfjs_require__(1);\n\n      class WebGLContext {\n        constructor(_ref16) {\n          let {\n            enable = false\n          } = _ref16;\n          this._enabled = enable === true;\n        }\n\n        get isEnabled() {\n          let enabled = this._enabled;\n\n          if (enabled) {\n            enabled = WebGLUtils.tryInitGL();\n          }\n\n          return (0, _util.shadow)(this, \"isEnabled\", enabled);\n        }\n\n        composeSMask(_ref17) {\n          let {\n            layer,\n            mask,\n            properties\n          } = _ref17;\n          return WebGLUtils.composeSMask(layer, mask, properties);\n        }\n\n        drawFigures(_ref18) {\n          let {\n            width,\n            height,\n            backgroundColor,\n            figures,\n            context\n          } = _ref18;\n          return WebGLUtils.drawFigures(width, height, backgroundColor, figures, context);\n        }\n\n        clear() {\n          WebGLUtils.cleanup();\n        }\n\n      }\n\n      exports.WebGLContext = WebGLContext;\n\n      var WebGLUtils = function WebGLUtilsClosure() {\n        function loadShader(gl, code, shaderType) {\n          var shader = gl.createShader(shaderType);\n          gl.shaderSource(shader, code);\n          gl.compileShader(shader);\n          var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n          if (!compiled) {\n            var errorMsg = gl.getShaderInfoLog(shader);\n            throw new Error(\"Error during shader compilation: \" + errorMsg);\n          }\n\n          return shader;\n        }\n\n        function createVertexShader(gl, code) {\n          return loadShader(gl, code, gl.VERTEX_SHADER);\n        }\n\n        function createFragmentShader(gl, code) {\n          return loadShader(gl, code, gl.FRAGMENT_SHADER);\n        }\n\n        function createProgram(gl, shaders) {\n          var program = gl.createProgram();\n\n          for (var i = 0, ii = shaders.length; i < ii; ++i) {\n            gl.attachShader(program, shaders[i]);\n          }\n\n          gl.linkProgram(program);\n          var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n          if (!linked) {\n            var errorMsg = gl.getProgramInfoLog(program);\n            throw new Error(\"Error during program linking: \" + errorMsg);\n          }\n\n          return program;\n        }\n\n        function createTexture(gl, image, textureId) {\n          gl.activeTexture(textureId);\n          var texture = gl.createTexture();\n          gl.bindTexture(gl.TEXTURE_2D, texture);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n          return texture;\n        }\n\n        var currentGL, currentCanvas;\n\n        function generateGL() {\n          if (currentGL) {\n            return;\n          }\n\n          currentCanvas = document.createElement(\"canvas\");\n          currentGL = currentCanvas.getContext(\"webgl\", {\n            premultipliedalpha: false\n          });\n        }\n\n        var smaskVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n        var smaskFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n        var smaskCache = null;\n\n        function initSmaskGL() {\n          var canvas, gl;\n          generateGL();\n          canvas = currentCanvas;\n          currentCanvas = null;\n          gl = currentGL;\n          currentGL = null;\n          var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n          var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n          var program = createProgram(gl, [vertexShader, fragmentShader]);\n          gl.useProgram(program);\n          var cache = {};\n          cache.gl = gl;\n          cache.canvas = canvas;\n          cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n          cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n          cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n          cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n          var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n          var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n          var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n          var texCoordBuffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n          gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(texCoordLocation);\n          gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n          gl.uniform1i(texLayerLocation, 0);\n          gl.uniform1i(texMaskLocation, 1);\n          smaskCache = cache;\n        }\n\n        function composeSMask(layer, mask, properties) {\n          var width = layer.width,\n              height = layer.height;\n\n          if (!smaskCache) {\n            initSmaskGL();\n          }\n\n          var cache = smaskCache,\n              canvas = cache.canvas,\n              gl = cache.gl;\n          canvas.width = width;\n          canvas.height = height;\n          gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n          gl.uniform2f(cache.resolutionLocation, width, height);\n\n          if (properties.backdrop) {\n            gl.uniform4f(cache.resolutionLocation, properties.backdrop[0], properties.backdrop[1], properties.backdrop[2], 1);\n          } else {\n            gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n          }\n\n          gl.uniform1i(cache.subtypeLocation, properties.subtype === \"Luminosity\" ? 1 : 0);\n          var texture = createTexture(gl, layer, gl.TEXTURE0);\n          var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n          var buffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n          gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, width, 0, 0, height, 0, height, width, 0, width, height]), gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(cache.positionLocation);\n          gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n          gl.clearColor(0, 0, 0, 0);\n          gl.enable(gl.BLEND);\n          gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n          gl.clear(gl.COLOR_BUFFER_BIT);\n          gl.drawArrays(gl.TRIANGLES, 0, 6);\n          gl.flush();\n          gl.deleteTexture(texture);\n          gl.deleteTexture(maskTexture);\n          gl.deleteBuffer(buffer);\n          return canvas;\n        }\n\n        var figuresVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n        var figuresFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n        var figuresCache = null;\n\n        function initFiguresGL() {\n          var canvas, gl;\n          generateGL();\n          canvas = currentCanvas;\n          currentCanvas = null;\n          gl = currentGL;\n          currentGL = null;\n          var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n          var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n          var program = createProgram(gl, [vertexShader, fragmentShader]);\n          gl.useProgram(program);\n          var cache = {};\n          cache.gl = gl;\n          cache.canvas = canvas;\n          cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n          cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n          cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n          cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n          cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n          figuresCache = cache;\n        }\n\n        function drawFigures(width, height, backgroundColor, figures, context) {\n          if (!figuresCache) {\n            initFiguresGL();\n          }\n\n          var cache = figuresCache,\n              canvas = cache.canvas,\n              gl = cache.gl;\n          canvas.width = width;\n          canvas.height = height;\n          gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n          gl.uniform2f(cache.resolutionLocation, width, height);\n          var count = 0;\n          var i, ii, rows;\n\n          for (i = 0, ii = figures.length; i < ii; i++) {\n            switch (figures[i].type) {\n              case \"lattice\":\n                rows = figures[i].coords.length / figures[i].verticesPerRow | 0;\n                count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n                break;\n\n              case \"triangles\":\n                count += figures[i].coords.length;\n                break;\n            }\n          }\n\n          var coords = new Float32Array(count * 2);\n          var colors = new Uint8Array(count * 3);\n          var coordsMap = context.coords,\n              colorsMap = context.colors;\n          var pIndex = 0,\n              cIndex = 0;\n\n          for (i = 0, ii = figures.length; i < ii; i++) {\n            var figure = figures[i],\n                ps = figure.coords,\n                cs = figure.colors;\n\n            switch (figure.type) {\n              case \"lattice\":\n                var cols = figure.verticesPerRow;\n                rows = ps.length / cols | 0;\n\n                for (var row = 1; row < rows; row++) {\n                  var offset = row * cols + 1;\n\n                  for (var col = 1; col < cols; col++, offset++) {\n                    coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n                    coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n                    coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n                    coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n                    coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n                    coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n                    colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n                    colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n                    colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n                    colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n                    colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n                    colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n                    colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n                    colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n                    colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n                    coords[pIndex + 6] = coords[pIndex + 2];\n                    coords[pIndex + 7] = coords[pIndex + 3];\n                    coords[pIndex + 8] = coords[pIndex + 4];\n                    coords[pIndex + 9] = coords[pIndex + 5];\n                    coords[pIndex + 10] = coordsMap[ps[offset]];\n                    coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n                    colors[cIndex + 9] = colors[cIndex + 3];\n                    colors[cIndex + 10] = colors[cIndex + 4];\n                    colors[cIndex + 11] = colors[cIndex + 5];\n                    colors[cIndex + 12] = colors[cIndex + 6];\n                    colors[cIndex + 13] = colors[cIndex + 7];\n                    colors[cIndex + 14] = colors[cIndex + 8];\n                    colors[cIndex + 15] = colorsMap[cs[offset]];\n                    colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n                    colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n                    pIndex += 12;\n                    cIndex += 18;\n                  }\n                }\n\n                break;\n\n              case \"triangles\":\n                for (var j = 0, jj = ps.length; j < jj; j++) {\n                  coords[pIndex] = coordsMap[ps[j]];\n                  coords[pIndex + 1] = coordsMap[ps[j] + 1];\n                  colors[cIndex] = colorsMap[cs[j]];\n                  colors[cIndex + 1] = colorsMap[cs[j] + 1];\n                  colors[cIndex + 2] = colorsMap[cs[j] + 2];\n                  pIndex += 2;\n                  cIndex += 3;\n                }\n\n                break;\n            }\n          }\n\n          if (backgroundColor) {\n            gl.clearColor(backgroundColor[0] / 255, backgroundColor[1] / 255, backgroundColor[2] / 255, 1.0);\n          } else {\n            gl.clearColor(0, 0, 0, 0);\n          }\n\n          gl.clear(gl.COLOR_BUFFER_BIT);\n          var coordsBuffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n          gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(cache.positionLocation);\n          gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n          var colorsBuffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n          gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(cache.colorLocation);\n          gl.vertexAttribPointer(cache.colorLocation, 3, gl.UNSIGNED_BYTE, false, 0, 0);\n          gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n          gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n          gl.drawArrays(gl.TRIANGLES, 0, count);\n          gl.flush();\n          gl.deleteBuffer(coordsBuffer);\n          gl.deleteBuffer(colorsBuffer);\n          return canvas;\n        }\n\n        return {\n          tryInitGL() {\n            try {\n              generateGL();\n              return !!currentGL;\n            } catch (ex) {}\n\n            return false;\n          },\n\n          composeSMask,\n          drawFigures,\n\n          cleanup() {\n            if (smaskCache && smaskCache.canvas) {\n              smaskCache.canvas.width = 0;\n              smaskCache.canvas.height = 0;\n            }\n\n            if (figuresCache && figuresCache.canvas) {\n              figuresCache.canvas.width = 0;\n              figuresCache.canvas.height = 0;\n            }\n\n            smaskCache = null;\n            figuresCache = null;\n          }\n\n        };\n      }();\n      /***/\n\n    },\n    /* 16 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.renderTextLayer = void 0;\n\n      var _util = __w_pdfjs_require__(1);\n\n      var renderTextLayer = function renderTextLayerClosure() {\n        var MAX_TEXT_DIVS_TO_RENDER = 100000;\n        var NonWhitespaceRegexp = /\\S/;\n\n        function isAllWhitespace(str) {\n          return !NonWhitespaceRegexp.test(str);\n        }\n\n        function appendText(task, geom, styles) {\n          var textDiv = document.createElement(\"span\");\n          var textDivProperties = {\n            angle: 0,\n            canvasWidth: 0,\n            isWhitespace: false,\n            originalTransform: null,\n            paddingBottom: 0,\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingTop: 0,\n            scale: 1\n          };\n\n          task._textDivs.push(textDiv);\n\n          if (isAllWhitespace(geom.str)) {\n            textDivProperties.isWhitespace = true;\n\n            task._textDivProperties.set(textDiv, textDivProperties);\n\n            return;\n          }\n\n          var tx = _util.Util.transform(task._viewport.transform, geom.transform);\n\n          var angle = Math.atan2(tx[1], tx[0]);\n          var style = styles[geom.fontName];\n\n          if (style.vertical) {\n            angle += Math.PI / 2;\n          }\n\n          var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n          var fontAscent = fontHeight;\n\n          if (style.ascent) {\n            fontAscent = style.ascent * fontAscent;\n          } else if (style.descent) {\n            fontAscent = (1 + style.descent) * fontAscent;\n          }\n\n          let left, top;\n\n          if (angle === 0) {\n            left = tx[4];\n            top = tx[5] - fontAscent;\n          } else {\n            left = tx[4] + fontAscent * Math.sin(angle);\n            top = tx[5] - fontAscent * Math.cos(angle);\n          }\n\n          textDiv.style.left = `${left}px`;\n          textDiv.style.top = `${top}px`;\n          textDiv.style.fontSize = `${fontHeight}px`;\n          textDiv.style.fontFamily = style.fontFamily;\n          textDiv.textContent = geom.str;\n\n          if (task._fontInspectorEnabled) {\n            textDiv.dataset.fontName = geom.fontName;\n          }\n\n          if (angle !== 0) {\n            textDivProperties.angle = angle * (180 / Math.PI);\n          }\n\n          if (geom.str.length > 1) {\n            if (style.vertical) {\n              textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n            } else {\n              textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n            }\n          }\n\n          task._textDivProperties.set(textDiv, textDivProperties);\n\n          if (task._textContentStream) {\n            task._layoutText(textDiv);\n          }\n\n          if (task._enhanceTextSelection) {\n            var angleCos = 1,\n                angleSin = 0;\n\n            if (angle !== 0) {\n              angleCos = Math.cos(angle);\n              angleSin = Math.sin(angle);\n            }\n\n            var divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n            var divHeight = fontHeight;\n            var m, b;\n\n            if (angle !== 0) {\n              m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n              b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n            } else {\n              b = [left, top, left + divWidth, top + divHeight];\n            }\n\n            task._bounds.push({\n              left: b[0],\n              top: b[1],\n              right: b[2],\n              bottom: b[3],\n              div: textDiv,\n              size: [divWidth, divHeight],\n              m\n            });\n          }\n        }\n\n        function render(task) {\n          if (task._canceled) {\n            return;\n          }\n\n          var textDivs = task._textDivs;\n          var capability = task._capability;\n          var textDivsLength = textDivs.length;\n\n          if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n            task._renderingDone = true;\n            capability.resolve();\n            return;\n          }\n\n          if (!task._textContentStream) {\n            for (var i = 0; i < textDivsLength; i++) {\n              task._layoutText(textDivs[i]);\n            }\n          }\n\n          task._renderingDone = true;\n          capability.resolve();\n        }\n\n        function expand(task) {\n          var bounds = task._bounds;\n          var viewport = task._viewport;\n          var expanded = expandBounds(viewport.width, viewport.height, bounds);\n\n          for (var i = 0; i < expanded.length; i++) {\n            var div = bounds[i].div;\n\n            var divProperties = task._textDivProperties.get(div);\n\n            if (divProperties.angle === 0) {\n              divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n              divProperties.paddingTop = bounds[i].top - expanded[i].top;\n              divProperties.paddingRight = expanded[i].right - bounds[i].right;\n              divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n\n              task._textDivProperties.set(div, divProperties);\n\n              continue;\n            }\n\n            var e = expanded[i],\n                b = bounds[i];\n            var m = b.m,\n                c = m[0],\n                s = m[1];\n            var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n            var ts = new Float64Array(64);\n            points.forEach(function (p, i) {\n              var t = _util.Util.applyTransform(p, m);\n\n              ts[i + 0] = c && (e.left - t[0]) / c;\n              ts[i + 4] = s && (e.top - t[1]) / s;\n              ts[i + 8] = c && (e.right - t[0]) / c;\n              ts[i + 12] = s && (e.bottom - t[1]) / s;\n              ts[i + 16] = s && (e.left - t[0]) / -s;\n              ts[i + 20] = c && (e.top - t[1]) / c;\n              ts[i + 24] = s && (e.right - t[0]) / -s;\n              ts[i + 28] = c && (e.bottom - t[1]) / c;\n              ts[i + 32] = c && (e.left - t[0]) / -c;\n              ts[i + 36] = s && (e.top - t[1]) / -s;\n              ts[i + 40] = c && (e.right - t[0]) / -c;\n              ts[i + 44] = s && (e.bottom - t[1]) / -s;\n              ts[i + 48] = s && (e.left - t[0]) / s;\n              ts[i + 52] = c && (e.top - t[1]) / -c;\n              ts[i + 56] = s && (e.right - t[0]) / s;\n              ts[i + 60] = c && (e.bottom - t[1]) / -c;\n            });\n\n            var findPositiveMin = function (ts, offset, count) {\n              var result = 0;\n\n              for (var i = 0; i < count; i++) {\n                var t = ts[offset++];\n\n                if (t > 0) {\n                  result = result ? Math.min(t, result) : t;\n                }\n              }\n\n              return result;\n            };\n\n            var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n            divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n            divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n            divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n            divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n\n            task._textDivProperties.set(div, divProperties);\n          }\n        }\n\n        function expandBounds(width, height, boxes) {\n          var bounds = boxes.map(function (box, i) {\n            return {\n              x1: box.left,\n              y1: box.top,\n              x2: box.right,\n              y2: box.bottom,\n              index: i,\n              x1New: undefined,\n              x2New: undefined\n            };\n          });\n          expandBoundsLTR(width, bounds);\n          var expanded = new Array(boxes.length);\n          bounds.forEach(function (b) {\n            var i = b.index;\n            expanded[i] = {\n              left: b.x1New,\n              top: 0,\n              right: b.x2New,\n              bottom: 0\n            };\n          });\n          boxes.map(function (box, i) {\n            var e = expanded[i],\n                b = bounds[i];\n            b.x1 = box.top;\n            b.y1 = width - e.right;\n            b.x2 = box.bottom;\n            b.y2 = width - e.left;\n            b.index = i;\n            b.x1New = undefined;\n            b.x2New = undefined;\n          });\n          expandBoundsLTR(height, bounds);\n          bounds.forEach(function (b) {\n            var i = b.index;\n            expanded[i].top = b.x1New;\n            expanded[i].bottom = b.x2New;\n          });\n          return expanded;\n        }\n\n        function expandBoundsLTR(width, bounds) {\n          bounds.sort(function (a, b) {\n            return a.x1 - b.x1 || a.index - b.index;\n          });\n          var fakeBoundary = {\n            x1: -Infinity,\n            y1: -Infinity,\n            x2: 0,\n            y2: Infinity,\n            index: -1,\n            x1New: 0,\n            x2New: 0\n          };\n          var horizon = [{\n            start: -Infinity,\n            end: Infinity,\n            boundary: fakeBoundary\n          }];\n          bounds.forEach(function (boundary) {\n            var i = 0;\n\n            while (i < horizon.length && horizon[i].end <= boundary.y1) {\n              i++;\n            }\n\n            var j = horizon.length - 1;\n\n            while (j >= 0 && horizon[j].start >= boundary.y2) {\n              j--;\n            }\n\n            var horizonPart, affectedBoundary;\n            var q,\n                k,\n                maxXNew = -Infinity;\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n              var xNew;\n\n              if (affectedBoundary.x2 > boundary.x1) {\n                xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;\n              } else if (affectedBoundary.x2New === undefined) {\n                xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n              } else {\n                xNew = affectedBoundary.x2New;\n              }\n\n              if (xNew > maxXNew) {\n                maxXNew = xNew;\n              }\n            }\n\n            boundary.x1New = maxXNew;\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n\n              if (affectedBoundary.x2New === undefined) {\n                if (affectedBoundary.x2 > boundary.x1) {\n                  if (affectedBoundary.index > boundary.index) {\n                    affectedBoundary.x2New = affectedBoundary.x2;\n                  }\n                } else {\n                  affectedBoundary.x2New = maxXNew;\n                }\n              } else if (affectedBoundary.x2New > maxXNew) {\n                affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n              }\n            }\n\n            var changedHorizon = [],\n                lastBoundary = null;\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n              var useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n\n              if (lastBoundary === useBoundary) {\n                changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n              } else {\n                changedHorizon.push({\n                  start: horizonPart.start,\n                  end: horizonPart.end,\n                  boundary: useBoundary\n                });\n                lastBoundary = useBoundary;\n              }\n            }\n\n            if (horizon[i].start < boundary.y1) {\n              changedHorizon[0].start = boundary.y1;\n              changedHorizon.unshift({\n                start: horizon[i].start,\n                end: boundary.y1,\n                boundary: horizon[i].boundary\n              });\n            }\n\n            if (boundary.y2 < horizon[j].end) {\n              changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n              changedHorizon.push({\n                start: boundary.y2,\n                end: horizon[j].end,\n                boundary: horizon[j].boundary\n              });\n            }\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n\n              if (affectedBoundary.x2New !== undefined) {\n                continue;\n              }\n\n              var used = false;\n\n              for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {\n                used = horizon[k].boundary === affectedBoundary;\n              }\n\n              for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {\n                used = horizon[k].boundary === affectedBoundary;\n              }\n\n              for (k = 0; !used && k < changedHorizon.length; k++) {\n                used = changedHorizon[k].boundary === affectedBoundary;\n              }\n\n              if (!used) {\n                affectedBoundary.x2New = maxXNew;\n              }\n            }\n\n            Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\n          });\n          horizon.forEach(function (horizonPart) {\n            var affectedBoundary = horizonPart.boundary;\n\n            if (affectedBoundary.x2New === undefined) {\n              affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n            }\n          });\n        }\n\n        function TextLayerRenderTask(_ref19) {\n          let {\n            textContent,\n            textContentStream,\n            container,\n            viewport,\n            textDivs,\n            textContentItemsStr,\n            enhanceTextSelection\n          } = _ref19;\n          this._textContent = textContent;\n          this._textContentStream = textContentStream;\n          this._container = container;\n          this._viewport = viewport;\n          this._textDivs = textDivs || [];\n          this._textContentItemsStr = textContentItemsStr || [];\n          this._enhanceTextSelection = !!enhanceTextSelection;\n          this._fontInspectorEnabled = !!(globalThis.FontInspector && globalThis.FontInspector.enabled);\n          this._reader = null;\n          this._layoutTextLastFontSize = null;\n          this._layoutTextLastFontFamily = null;\n          this._layoutTextCtx = null;\n          this._textDivProperties = new WeakMap();\n          this._renderingDone = false;\n          this._canceled = false;\n          this._capability = (0, _util.createPromiseCapability)();\n          this._renderTimer = null;\n          this._bounds = [];\n\n          this._capability.promise.finally(() => {\n            if (this._layoutTextCtx) {\n              this._layoutTextCtx.canvas.width = 0;\n              this._layoutTextCtx.canvas.height = 0;\n              this._layoutTextCtx = null;\n            }\n          }).catch(() => {});\n        }\n\n        TextLayerRenderTask.prototype = {\n          get promise() {\n            return this._capability.promise;\n          },\n\n          cancel: function TextLayer_cancel() {\n            this._canceled = true;\n\n            if (this._reader) {\n              this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\"));\n\n              this._reader = null;\n            }\n\n            if (this._renderTimer !== null) {\n              clearTimeout(this._renderTimer);\n              this._renderTimer = null;\n            }\n\n            this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n          },\n\n          _processItems(items, styleCache) {\n            for (let i = 0, len = items.length; i < len; i++) {\n              this._textContentItemsStr.push(items[i].str);\n\n              appendText(this, items[i], styleCache);\n            }\n          },\n\n          _layoutText(textDiv) {\n            const textDivProperties = this._textDivProperties.get(textDiv);\n\n            if (textDivProperties.isWhitespace) {\n              return;\n            }\n\n            let transform = \"\";\n\n            if (textDivProperties.canvasWidth !== 0) {\n              const {\n                fontSize,\n                fontFamily\n              } = textDiv.style;\n\n              if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\n                this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n                this._layoutTextLastFontSize = fontSize;\n                this._layoutTextLastFontFamily = fontFamily;\n              }\n\n              const {\n                width\n              } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n              if (width > 0) {\n                textDivProperties.scale = textDivProperties.canvasWidth / width;\n                transform = `scaleX(${textDivProperties.scale})`;\n              }\n            }\n\n            if (textDivProperties.angle !== 0) {\n              transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n            }\n\n            if (transform.length > 0) {\n              if (this._enhanceTextSelection) {\n                textDivProperties.originalTransform = transform;\n              }\n\n              textDiv.style.transform = transform;\n            }\n\n            this._textDivProperties.set(textDiv, textDivProperties);\n\n            this._container.appendChild(textDiv);\n          },\n\n          _render: function TextLayer_render(timeout) {\n            const capability = (0, _util.createPromiseCapability)();\n            let styleCache = Object.create(null);\n            const canvas = document.createElement(\"canvas\");\n            canvas.mozOpaque = true;\n            this._layoutTextCtx = canvas.getContext(\"2d\", {\n              alpha: false\n            });\n\n            if (this._textContent) {\n              const textItems = this._textContent.items;\n              const textStyles = this._textContent.styles;\n\n              this._processItems(textItems, textStyles);\n\n              capability.resolve();\n            } else if (this._textContentStream) {\n              const pump = () => {\n                this._reader.read().then(_ref20 => {\n                  let {\n                    value,\n                    done\n                  } = _ref20;\n\n                  if (done) {\n                    capability.resolve();\n                    return;\n                  }\n\n                  Object.assign(styleCache, value.styles);\n\n                  this._processItems(value.items, styleCache);\n\n                  pump();\n                }, capability.reject);\n              };\n\n              this._reader = this._textContentStream.getReader();\n              pump();\n            } else {\n              throw new Error('Neither \"textContent\" nor \"textContentStream\"' + \" parameters specified.\");\n            }\n\n            capability.promise.then(() => {\n              styleCache = null;\n\n              if (!timeout) {\n                render(this);\n              } else {\n                this._renderTimer = setTimeout(() => {\n                  render(this);\n                  this._renderTimer = null;\n                }, timeout);\n              }\n            }, this._capability.reject);\n          },\n          expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n            if (!this._enhanceTextSelection || !this._renderingDone) {\n              return;\n            }\n\n            if (this._bounds !== null) {\n              expand(this);\n              this._bounds = null;\n            }\n\n            const transformBuf = [],\n                  paddingBuf = [];\n\n            for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n              const div = this._textDivs[i];\n\n              const divProps = this._textDivProperties.get(div);\n\n              if (divProps.isWhitespace) {\n                continue;\n              }\n\n              if (expandDivs) {\n                transformBuf.length = 0;\n                paddingBuf.length = 0;\n\n                if (divProps.originalTransform) {\n                  transformBuf.push(divProps.originalTransform);\n                }\n\n                if (divProps.paddingTop > 0) {\n                  paddingBuf.push(`${divProps.paddingTop}px`);\n                  transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                if (divProps.paddingRight > 0) {\n                  paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                if (divProps.paddingBottom > 0) {\n                  paddingBuf.push(`${divProps.paddingBottom}px`);\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                if (divProps.paddingLeft > 0) {\n                  paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n                  transformBuf.push(`translateX(${-divProps.paddingLeft / divProps.scale}px)`);\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                div.style.padding = paddingBuf.join(\" \");\n\n                if (transformBuf.length) {\n                  div.style.transform = transformBuf.join(\" \");\n                }\n              } else {\n                div.style.padding = null;\n                div.style.transform = divProps.originalTransform;\n              }\n            }\n          }\n        };\n\n        function renderTextLayer(renderParameters) {\n          var task = new TextLayerRenderTask({\n            textContent: renderParameters.textContent,\n            textContentStream: renderParameters.textContentStream,\n            container: renderParameters.container,\n            viewport: renderParameters.viewport,\n            textDivs: renderParameters.textDivs,\n            textContentItemsStr: renderParameters.textContentItemsStr,\n            enhanceTextSelection: renderParameters.enhanceTextSelection\n          });\n\n          task._render(renderParameters.timeout);\n\n          return task;\n        }\n\n        return renderTextLayer;\n      }();\n\n      exports.renderTextLayer = renderTextLayer;\n      /***/\n    },\n    /* 17 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.AnnotationLayer = void 0;\n\n      var _display_utils = __w_pdfjs_require__(4);\n\n      var _util = __w_pdfjs_require__(1);\n\n      class AnnotationElementFactory {\n        static create(parameters) {\n          const subtype = parameters.data.annotationType;\n\n          switch (subtype) {\n            case _util.AnnotationType.LINK:\n              return new LinkAnnotationElement(parameters);\n\n            case _util.AnnotationType.TEXT:\n              return new TextAnnotationElement(parameters);\n\n            case _util.AnnotationType.WIDGET:\n              const fieldType = parameters.data.fieldType;\n\n              switch (fieldType) {\n                case \"Tx\":\n                  return new TextWidgetAnnotationElement(parameters);\n\n                case \"Btn\":\n                  if (parameters.data.radioButton) {\n                    return new RadioButtonWidgetAnnotationElement(parameters);\n                  } else if (parameters.data.checkBox) {\n                    return new CheckboxWidgetAnnotationElement(parameters);\n                  }\n\n                  return new PushButtonWidgetAnnotationElement(parameters);\n\n                case \"Ch\":\n                  return new ChoiceWidgetAnnotationElement(parameters);\n              }\n\n              return new WidgetAnnotationElement(parameters);\n\n            case _util.AnnotationType.POPUP:\n              return new PopupAnnotationElement(parameters);\n\n            case _util.AnnotationType.FREETEXT:\n              return new FreeTextAnnotationElement(parameters);\n\n            case _util.AnnotationType.LINE:\n              return new LineAnnotationElement(parameters);\n\n            case _util.AnnotationType.SQUARE:\n              return new SquareAnnotationElement(parameters);\n\n            case _util.AnnotationType.CIRCLE:\n              return new CircleAnnotationElement(parameters);\n\n            case _util.AnnotationType.POLYLINE:\n              return new PolylineAnnotationElement(parameters);\n\n            case _util.AnnotationType.CARET:\n              return new CaretAnnotationElement(parameters);\n\n            case _util.AnnotationType.INK:\n              return new InkAnnotationElement(parameters);\n\n            case _util.AnnotationType.POLYGON:\n              return new PolygonAnnotationElement(parameters);\n\n            case _util.AnnotationType.HIGHLIGHT:\n              return new HighlightAnnotationElement(parameters);\n\n            case _util.AnnotationType.UNDERLINE:\n              return new UnderlineAnnotationElement(parameters);\n\n            case _util.AnnotationType.SQUIGGLY:\n              return new SquigglyAnnotationElement(parameters);\n\n            case _util.AnnotationType.STRIKEOUT:\n              return new StrikeOutAnnotationElement(parameters);\n\n            case _util.AnnotationType.STAMP:\n              return new StampAnnotationElement(parameters);\n\n            case _util.AnnotationType.FILEATTACHMENT:\n              return new FileAttachmentAnnotationElement(parameters);\n\n            default:\n              return new AnnotationElement(parameters);\n          }\n        }\n\n      }\n\n      class AnnotationElement {\n        constructor(parameters) {\n          let isRenderable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          let ignoreBorder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          this.isRenderable = isRenderable;\n          this.data = parameters.data;\n          this.layer = parameters.layer;\n          this.page = parameters.page;\n          this.viewport = parameters.viewport;\n          this.linkService = parameters.linkService;\n          this.downloadManager = parameters.downloadManager;\n          this.imageResourcesPath = parameters.imageResourcesPath;\n          this.renderInteractiveForms = parameters.renderInteractiveForms;\n          this.svgFactory = parameters.svgFactory;\n\n          if (isRenderable) {\n            this.container = this._createContainer(ignoreBorder);\n          }\n        }\n\n        _createContainer() {\n          let ignoreBorder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n          const data = this.data,\n                page = this.page,\n                viewport = this.viewport;\n          const container = document.createElement(\"section\");\n          let width = data.rect[2] - data.rect[0];\n          let height = data.rect[3] - data.rect[1];\n          container.setAttribute(\"data-annotation-id\", data.id);\n\n          const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n\n          container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n          container.style.transformOrigin = `-${rect[0]}px -${rect[1]}px`;\n\n          if (!ignoreBorder && data.borderStyle.width > 0) {\n            container.style.borderWidth = `${data.borderStyle.width}px`;\n\n            if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {\n              width = width - 2 * data.borderStyle.width;\n              height = height - 2 * data.borderStyle.width;\n            }\n\n            const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n            const verticalRadius = data.borderStyle.verticalCornerRadius;\n\n            if (horizontalRadius > 0 || verticalRadius > 0) {\n              const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n              container.style.borderRadius = radius;\n            }\n\n            switch (data.borderStyle.style) {\n              case _util.AnnotationBorderStyleType.SOLID:\n                container.style.borderStyle = \"solid\";\n                break;\n\n              case _util.AnnotationBorderStyleType.DASHED:\n                container.style.borderStyle = \"dashed\";\n                break;\n\n              case _util.AnnotationBorderStyleType.BEVELED:\n                (0, _util.warn)(\"Unimplemented border style: beveled\");\n                break;\n\n              case _util.AnnotationBorderStyleType.INSET:\n                (0, _util.warn)(\"Unimplemented border style: inset\");\n                break;\n\n              case _util.AnnotationBorderStyleType.UNDERLINE:\n                container.style.borderBottomStyle = \"solid\";\n                break;\n\n              default:\n                break;\n            }\n\n            if (data.color) {\n              container.style.borderColor = _util.Util.makeCssRgb(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\n            } else {\n              container.style.borderWidth = 0;\n            }\n          }\n\n          container.style.left = `${rect[0]}px`;\n          container.style.top = `${rect[1]}px`;\n          container.style.width = `${width}px`;\n          container.style.height = `${height}px`;\n          return container;\n        }\n\n        _createPopup(container, trigger, data) {\n          if (!trigger) {\n            trigger = document.createElement(\"div\");\n            trigger.style.height = container.style.height;\n            trigger.style.width = container.style.width;\n            container.appendChild(trigger);\n          }\n\n          const popupElement = new PopupElement({\n            container,\n            trigger,\n            color: data.color,\n            title: data.title,\n            modificationDate: data.modificationDate,\n            contents: data.contents,\n            hideWrapper: true\n          });\n          const popup = popupElement.render();\n          popup.style.left = container.style.width;\n          container.appendChild(popup);\n        }\n\n        render() {\n          (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n        }\n\n      }\n\n      class LinkAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action);\n          super(parameters, isRenderable);\n        }\n\n        render() {\n          this.container.className = \"linkAnnotation\";\n          const {\n            data,\n            linkService\n          } = this;\n          const link = document.createElement(\"a\");\n\n          if (data.url) {\n            (0, _display_utils.addLinkAttributes)(link, {\n              url: data.url,\n              target: data.newWindow ? _display_utils.LinkTarget.BLANK : linkService.externalLinkTarget,\n              rel: linkService.externalLinkRel,\n              enabled: linkService.externalLinkEnabled\n            });\n          } else if (data.action) {\n            this._bindNamedAction(link, data.action);\n          } else {\n            this._bindLink(link, data.dest);\n          }\n\n          this.container.appendChild(link);\n          return this.container;\n        }\n\n        _bindLink(link, destination) {\n          link.href = this.linkService.getDestinationHash(destination);\n\n          link.onclick = () => {\n            if (destination) {\n              this.linkService.navigateTo(destination);\n            }\n\n            return false;\n          };\n\n          if (destination) {\n            link.className = \"internalLink\";\n          }\n        }\n\n        _bindNamedAction(link, action) {\n          link.href = this.linkService.getAnchorUrl(\"\");\n\n          link.onclick = () => {\n            this.linkService.executeNamedAction(action);\n            return false;\n          };\n\n          link.className = \"internalLink\";\n        }\n\n      }\n\n      class TextAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable);\n        }\n\n        render() {\n          this.container.className = \"textAnnotation\";\n          const image = document.createElement(\"img\");\n          image.style.height = this.container.style.height;\n          image.style.width = this.container.style.width;\n          image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n          image.alt = \"[{{type}} Annotation]\";\n          image.dataset.l10nId = \"text_annotation_type\";\n          image.dataset.l10nArgs = JSON.stringify({\n            type: this.data.name\n          });\n\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, image, this.data);\n          }\n\n          this.container.appendChild(image);\n          return this.container;\n        }\n\n      }\n\n      class WidgetAnnotationElement extends AnnotationElement {\n        render() {\n          return this.container;\n        }\n\n      }\n\n      class TextWidgetAnnotationElement extends WidgetAnnotationElement {\n        constructor(parameters) {\n          const isRenderable = parameters.renderInteractiveForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n          super(parameters, isRenderable);\n        }\n\n        render() {\n          const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n          this.container.className = \"textWidgetAnnotation\";\n          let element = null;\n\n          if (this.renderInteractiveForms) {\n            if (this.data.multiLine) {\n              element = document.createElement(\"textarea\");\n              element.textContent = this.data.fieldValue;\n            } else {\n              element = document.createElement(\"input\");\n              element.type = \"text\";\n              element.setAttribute(\"value\", this.data.fieldValue);\n            }\n\n            element.disabled = this.data.readOnly;\n\n            if (this.data.maxLen !== null) {\n              element.maxLength = this.data.maxLen;\n            }\n\n            if (this.data.comb) {\n              const fieldWidth = this.data.rect[2] - this.data.rect[0];\n              const combWidth = fieldWidth / this.data.maxLen;\n              element.classList.add(\"comb\");\n              element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n            }\n          } else {\n            element = document.createElement(\"div\");\n            element.textContent = this.data.fieldValue;\n            element.style.verticalAlign = \"middle\";\n            element.style.display = \"table-cell\";\n            let font = null;\n\n            if (this.data.fontRefName && this.page.commonObjs.has(this.data.fontRefName)) {\n              font = this.page.commonObjs.get(this.data.fontRefName);\n            }\n\n            this._setTextStyle(element, font);\n          }\n\n          if (this.data.textAlignment !== null) {\n            element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n          }\n\n          this.container.appendChild(element);\n          return this.container;\n        }\n\n        _setTextStyle(element, font) {\n          const style = element.style;\n          style.fontSize = `${this.data.fontSize}px`;\n          style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n\n          if (!font) {\n            return;\n          }\n\n          let bold = \"normal\";\n\n          if (font.black) {\n            bold = \"900\";\n          } else if (font.bold) {\n            bold = \"bold\";\n          }\n\n          style.fontWeight = bold;\n          style.fontStyle = font.italic ? \"italic\" : \"normal\";\n          const fontFamily = font.loadedName ? `\"${font.loadedName}\", ` : \"\";\n          const fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n          style.fontFamily = fontFamily + fallbackName;\n        }\n\n      }\n\n      class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n        constructor(parameters) {\n          super(parameters, parameters.renderInteractiveForms);\n        }\n\n        render() {\n          this.container.className = \"buttonWidgetAnnotation checkBox\";\n          const element = document.createElement(\"input\");\n          element.disabled = this.data.readOnly;\n          element.type = \"checkbox\";\n\n          if (this.data.fieldValue && this.data.fieldValue !== \"Off\") {\n            element.setAttribute(\"checked\", true);\n          }\n\n          this.container.appendChild(element);\n          return this.container;\n        }\n\n      }\n\n      class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n        constructor(parameters) {\n          super(parameters, parameters.renderInteractiveForms);\n        }\n\n        render() {\n          this.container.className = \"buttonWidgetAnnotation radioButton\";\n          const element = document.createElement(\"input\");\n          element.disabled = this.data.readOnly;\n          element.type = \"radio\";\n          element.name = this.data.fieldName;\n\n          if (this.data.fieldValue === this.data.buttonValue) {\n            element.setAttribute(\"checked\", true);\n          }\n\n          this.container.appendChild(element);\n          return this.container;\n        }\n\n      }\n\n      class PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n        render() {\n          const container = super.render();\n          container.className = \"buttonWidgetAnnotation pushButton\";\n          return container;\n        }\n\n      }\n\n      class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n        constructor(parameters) {\n          super(parameters, parameters.renderInteractiveForms);\n        }\n\n        render() {\n          this.container.className = \"choiceWidgetAnnotation\";\n          const selectElement = document.createElement(\"select\");\n          selectElement.disabled = this.data.readOnly;\n\n          if (!this.data.combo) {\n            selectElement.size = this.data.options.length;\n\n            if (this.data.multiSelect) {\n              selectElement.multiple = true;\n            }\n          }\n\n          for (const option of this.data.options) {\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = option.displayValue;\n            optionElement.value = option.exportValue;\n\n            if (this.data.fieldValue.includes(option.displayValue)) {\n              optionElement.setAttribute(\"selected\", true);\n            }\n\n            selectElement.appendChild(optionElement);\n          }\n\n          this.container.appendChild(selectElement);\n          return this.container;\n        }\n\n      }\n\n      class PopupAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable);\n        }\n\n        render() {\n          const IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\n          this.container.className = \"popupAnnotation\";\n\n          if (IGNORE_TYPES.includes(this.data.parentType)) {\n            return this.container;\n          }\n\n          const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n          const parentElement = this.layer.querySelector(selector);\n\n          if (!parentElement) {\n            return this.container;\n          }\n\n          const popup = new PopupElement({\n            container: this.container,\n            trigger: parentElement,\n            color: this.data.color,\n            title: this.data.title,\n            modificationDate: this.data.modificationDate,\n            contents: this.data.contents\n          });\n          const parentLeft = parseFloat(parentElement.style.left);\n          const parentWidth = parseFloat(parentElement.style.width);\n          this.container.style.transformOrigin = `-${parentLeft + parentWidth}px -${parentElement.style.top}`;\n          this.container.style.left = `${parentLeft + parentWidth}px`;\n          this.container.appendChild(popup.render());\n          return this.container;\n        }\n\n      }\n\n      class PopupElement {\n        constructor(parameters) {\n          this.container = parameters.container;\n          this.trigger = parameters.trigger;\n          this.color = parameters.color;\n          this.title = parameters.title;\n          this.modificationDate = parameters.modificationDate;\n          this.contents = parameters.contents;\n          this.hideWrapper = parameters.hideWrapper || false;\n          this.pinned = false;\n        }\n\n        render() {\n          const BACKGROUND_ENLIGHT = 0.7;\n          const wrapper = document.createElement(\"div\");\n          wrapper.className = \"popupWrapper\";\n          this.hideElement = this.hideWrapper ? wrapper : this.container;\n          this.hideElement.setAttribute(\"hidden\", true);\n          const popup = document.createElement(\"div\");\n          popup.className = \"popup\";\n          const color = this.color;\n\n          if (color) {\n            const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n            const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n            const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n            popup.style.backgroundColor = _util.Util.makeCssRgb(r | 0, g | 0, b | 0);\n          }\n\n          const title = document.createElement(\"h1\");\n          title.textContent = this.title;\n          popup.appendChild(title);\n\n          const dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate);\n\n          if (dateObject) {\n            const modificationDate = document.createElement(\"span\");\n            modificationDate.textContent = \"{{date}}, {{time}}\";\n            modificationDate.dataset.l10nId = \"annotation_date_string\";\n            modificationDate.dataset.l10nArgs = JSON.stringify({\n              date: dateObject.toLocaleDateString(),\n              time: dateObject.toLocaleTimeString()\n            });\n            popup.appendChild(modificationDate);\n          }\n\n          const contents = this._formatContents(this.contents);\n\n          popup.appendChild(contents);\n          this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n          this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n          this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n          popup.addEventListener(\"click\", this._hide.bind(this, true));\n          wrapper.appendChild(popup);\n          return wrapper;\n        }\n\n        _formatContents(contents) {\n          const p = document.createElement(\"p\");\n          const lines = contents.split(/(?:\\r\\n?|\\n)/);\n\n          for (let i = 0, ii = lines.length; i < ii; ++i) {\n            const line = lines[i];\n            p.appendChild(document.createTextNode(line));\n\n            if (i < ii - 1) {\n              p.appendChild(document.createElement(\"br\"));\n            }\n          }\n\n          return p;\n        }\n\n        _toggle() {\n          if (this.pinned) {\n            this._hide(true);\n          } else {\n            this._show(true);\n          }\n        }\n\n        _show() {\n          let pin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n          if (pin) {\n            this.pinned = true;\n          }\n\n          if (this.hideElement.hasAttribute(\"hidden\")) {\n            this.hideElement.removeAttribute(\"hidden\");\n            this.container.style.zIndex += 1;\n          }\n        }\n\n        _hide() {\n          let unpin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n          if (unpin) {\n            this.pinned = false;\n          }\n\n          if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n            this.hideElement.setAttribute(\"hidden\", true);\n            this.container.style.zIndex -= 1;\n          }\n        }\n\n      }\n\n      class FreeTextAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"freeTextAnnotation\";\n\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n\n          return this.container;\n        }\n\n      }\n\n      class LineAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"lineAnnotation\";\n          const data = this.data;\n          const width = data.rect[2] - data.rect[0];\n          const height = data.rect[3] - data.rect[1];\n          const svg = this.svgFactory.create(width, height);\n          const line = this.svgFactory.createElement(\"svg:line\");\n          line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n          line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n          line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n          line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n          line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n          line.setAttribute(\"stroke\", \"transparent\");\n          svg.appendChild(line);\n          this.container.append(svg);\n\n          this._createPopup(this.container, line, data);\n\n          return this.container;\n        }\n\n      }\n\n      class SquareAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"squareAnnotation\";\n          const data = this.data;\n          const width = data.rect[2] - data.rect[0];\n          const height = data.rect[3] - data.rect[1];\n          const svg = this.svgFactory.create(width, height);\n          const borderWidth = data.borderStyle.width;\n          const square = this.svgFactory.createElement(\"svg:rect\");\n          square.setAttribute(\"x\", borderWidth / 2);\n          square.setAttribute(\"y\", borderWidth / 2);\n          square.setAttribute(\"width\", width - borderWidth);\n          square.setAttribute(\"height\", height - borderWidth);\n          square.setAttribute(\"stroke-width\", borderWidth || 1);\n          square.setAttribute(\"stroke\", \"transparent\");\n          square.setAttribute(\"fill\", \"none\");\n          svg.appendChild(square);\n          this.container.append(svg);\n\n          this._createPopup(this.container, square, data);\n\n          return this.container;\n        }\n\n      }\n\n      class CircleAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"circleAnnotation\";\n          const data = this.data;\n          const width = data.rect[2] - data.rect[0];\n          const height = data.rect[3] - data.rect[1];\n          const svg = this.svgFactory.create(width, height);\n          const borderWidth = data.borderStyle.width;\n          const circle = this.svgFactory.createElement(\"svg:ellipse\");\n          circle.setAttribute(\"cx\", width / 2);\n          circle.setAttribute(\"cy\", height / 2);\n          circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n          circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n          circle.setAttribute(\"stroke-width\", borderWidth || 1);\n          circle.setAttribute(\"stroke\", \"transparent\");\n          circle.setAttribute(\"fill\", \"none\");\n          svg.appendChild(circle);\n          this.container.append(svg);\n\n          this._createPopup(this.container, circle, data);\n\n          return this.container;\n        }\n\n      }\n\n      class PolylineAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n          this.containerClassName = \"polylineAnnotation\";\n          this.svgElementName = \"svg:polyline\";\n        }\n\n        render() {\n          this.container.className = this.containerClassName;\n          const data = this.data;\n          const width = data.rect[2] - data.rect[0];\n          const height = data.rect[3] - data.rect[1];\n          const svg = this.svgFactory.create(width, height);\n          let points = [];\n\n          for (const coordinate of data.vertices) {\n            const x = coordinate.x - data.rect[0];\n            const y = data.rect[3] - coordinate.y;\n            points.push(x + \",\" + y);\n          }\n\n          points = points.join(\" \");\n          const polyline = this.svgFactory.createElement(this.svgElementName);\n          polyline.setAttribute(\"points\", points);\n          polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n          polyline.setAttribute(\"stroke\", \"transparent\");\n          polyline.setAttribute(\"fill\", \"none\");\n          svg.appendChild(polyline);\n          this.container.append(svg);\n\n          this._createPopup(this.container, polyline, data);\n\n          return this.container;\n        }\n\n      }\n\n      class PolygonAnnotationElement extends PolylineAnnotationElement {\n        constructor(parameters) {\n          super(parameters);\n          this.containerClassName = \"polygonAnnotation\";\n          this.svgElementName = \"svg:polygon\";\n        }\n\n      }\n\n      class CaretAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"caretAnnotation\";\n\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n\n          return this.container;\n        }\n\n      }\n\n      class InkAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n          this.containerClassName = \"inkAnnotation\";\n          this.svgElementName = \"svg:polyline\";\n        }\n\n        render() {\n          this.container.className = this.containerClassName;\n          const data = this.data;\n          const width = data.rect[2] - data.rect[0];\n          const height = data.rect[3] - data.rect[1];\n          const svg = this.svgFactory.create(width, height);\n\n          for (const inkList of data.inkLists) {\n            let points = [];\n\n            for (const coordinate of inkList) {\n              const x = coordinate.x - data.rect[0];\n              const y = data.rect[3] - coordinate.y;\n              points.push(`${x},${y}`);\n            }\n\n            points = points.join(\" \");\n            const polyline = this.svgFactory.createElement(this.svgElementName);\n            polyline.setAttribute(\"points\", points);\n            polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            polyline.setAttribute(\"stroke\", \"transparent\");\n            polyline.setAttribute(\"fill\", \"none\");\n\n            this._createPopup(this.container, polyline, data);\n\n            svg.appendChild(polyline);\n          }\n\n          this.container.append(svg);\n          return this.container;\n        }\n\n      }\n\n      class HighlightAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"highlightAnnotation\";\n\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n\n          return this.container;\n        }\n\n      }\n\n      class UnderlineAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"underlineAnnotation\";\n\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n\n          return this.container;\n        }\n\n      }\n\n      class SquigglyAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"squigglyAnnotation\";\n\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n\n          return this.container;\n        }\n\n      }\n\n      class StrikeOutAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"strikeoutAnnotation\";\n\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n\n          return this.container;\n        }\n\n      }\n\n      class StampAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"stampAnnotation\";\n\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n\n          return this.container;\n        }\n\n      }\n\n      class FileAttachmentAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          super(parameters, true);\n          const {\n            filename,\n            content\n          } = this.data.file;\n          this.filename = (0, _display_utils.getFilenameFromUrl)(filename);\n          this.content = content;\n\n          if (this.linkService.eventBus) {\n            this.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n              source: this,\n              id: (0, _util.stringToPDFString)(filename),\n              filename,\n              content\n            });\n          }\n        }\n\n        render() {\n          this.container.className = \"fileAttachmentAnnotation\";\n          const trigger = document.createElement(\"div\");\n          trigger.style.height = this.container.style.height;\n          trigger.style.width = this.container.style.width;\n          trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n          if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n            this._createPopup(this.container, trigger, this.data);\n          }\n\n          this.container.appendChild(trigger);\n          return this.container;\n        }\n\n        _download() {\n          if (!this.downloadManager) {\n            (0, _util.warn)(\"Download cannot be started due to unavailable download manager\");\n            return;\n          }\n\n          this.downloadManager.downloadData(this.content, this.filename, \"\");\n        }\n\n      }\n\n      class AnnotationLayer {\n        static render(parameters) {\n          const sortedAnnotations = [],\n                popupAnnotations = [];\n\n          for (const data of parameters.annotations) {\n            if (!data) {\n              continue;\n            }\n\n            if (data.annotationType === _util.AnnotationType.POPUP) {\n              popupAnnotations.push(data);\n              continue;\n            }\n\n            sortedAnnotations.push(data);\n          }\n\n          if (popupAnnotations.length) {\n            sortedAnnotations.push(...popupAnnotations);\n          }\n\n          for (const data of sortedAnnotations) {\n            const element = AnnotationElementFactory.create({\n              data,\n              layer: parameters.div,\n              page: parameters.page,\n              viewport: parameters.viewport,\n              linkService: parameters.linkService,\n              downloadManager: parameters.downloadManager,\n              imageResourcesPath: parameters.imageResourcesPath || \"\",\n              renderInteractiveForms: parameters.renderInteractiveForms || false,\n              svgFactory: new _display_utils.DOMSVGFactory()\n            });\n\n            if (element.isRenderable) {\n              parameters.div.appendChild(element.render());\n            }\n          }\n        }\n\n        static update(parameters) {\n          for (const data of parameters.annotations) {\n            const element = parameters.div.querySelector(`[data-annotation-id=\"${data.id}\"]`);\n\n            if (element) {\n              element.style.transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n            }\n          }\n\n          parameters.div.removeAttribute(\"hidden\");\n        }\n\n      }\n\n      exports.AnnotationLayer = AnnotationLayer;\n      /***/\n    },\n    /* 18 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.SVGGraphics = void 0;\n\n      var _util = __w_pdfjs_require__(1);\n\n      var _display_utils = __w_pdfjs_require__(4);\n\n      var _is_node = __w_pdfjs_require__(7);\n\n      let SVGGraphics = function () {\n        throw new Error(\"Not implemented: SVGGraphics\");\n      };\n\n      exports.SVGGraphics = SVGGraphics;\n      {\n        const SVG_DEFAULTS = {\n          fontStyle: \"normal\",\n          fontWeight: \"normal\",\n          fillColor: \"#000000\"\n        };\n        const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n        const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n        const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n        const convertImgDataToPng = function () {\n          const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n          const CHUNK_WRAPPER_SIZE = 12;\n          const crcTable = new Int32Array(256);\n\n          for (let i = 0; i < 256; i++) {\n            let c = i;\n\n            for (let h = 0; h < 8; h++) {\n              if (c & 1) {\n                c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\n              } else {\n                c = c >> 1 & 0x7fffffff;\n              }\n            }\n\n            crcTable[i] = c;\n          }\n\n          function crc32(data, start, end) {\n            let crc = -1;\n\n            for (let i = start; i < end; i++) {\n              const a = (crc ^ data[i]) & 0xff;\n              const b = crcTable[a];\n              crc = crc >>> 8 ^ b;\n            }\n\n            return crc ^ -1;\n          }\n\n          function writePngChunk(type, body, data, offset) {\n            let p = offset;\n            const len = body.length;\n            data[p] = len >> 24 & 0xff;\n            data[p + 1] = len >> 16 & 0xff;\n            data[p + 2] = len >> 8 & 0xff;\n            data[p + 3] = len & 0xff;\n            p += 4;\n            data[p] = type.charCodeAt(0) & 0xff;\n            data[p + 1] = type.charCodeAt(1) & 0xff;\n            data[p + 2] = type.charCodeAt(2) & 0xff;\n            data[p + 3] = type.charCodeAt(3) & 0xff;\n            p += 4;\n            data.set(body, p);\n            p += body.length;\n            const crc = crc32(data, offset + 4, p);\n            data[p] = crc >> 24 & 0xff;\n            data[p + 1] = crc >> 16 & 0xff;\n            data[p + 2] = crc >> 8 & 0xff;\n            data[p + 3] = crc & 0xff;\n          }\n\n          function adler32(data, start, end) {\n            let a = 1;\n            let b = 0;\n\n            for (let i = start; i < end; ++i) {\n              a = (a + (data[i] & 0xff)) % 65521;\n              b = (b + a) % 65521;\n            }\n\n            return b << 16 | a;\n          }\n\n          function deflateSync(literals) {\n            if (!_is_node.isNodeJS) {\n              return deflateSyncUncompressed(literals);\n            }\n\n            try {\n              let input;\n\n              if (parseInt(process.versions.node) >= 8) {\n                input = literals;\n              } else {\n                input = Buffer.from(literals);\n              }\n\n              const output = require(\"zlib\").deflateSync(input, {\n                level: 9\n              });\n\n              return output instanceof Uint8Array ? output : new Uint8Array(output);\n            } catch (e) {\n              (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n            }\n\n            return deflateSyncUncompressed(literals);\n          }\n\n          function deflateSyncUncompressed(literals) {\n            let len = literals.length;\n            const maxBlockLength = 0xffff;\n            const deflateBlocks = Math.ceil(len / maxBlockLength);\n            const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n            let pi = 0;\n            idat[pi++] = 0x78;\n            idat[pi++] = 0x9c;\n            let pos = 0;\n\n            while (len > maxBlockLength) {\n              idat[pi++] = 0x00;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0x00;\n              idat[pi++] = 0x00;\n              idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n              pi += maxBlockLength;\n              pos += maxBlockLength;\n              len -= maxBlockLength;\n            }\n\n            idat[pi++] = 0x01;\n            idat[pi++] = len & 0xff;\n            idat[pi++] = len >> 8 & 0xff;\n            idat[pi++] = ~len & 0xffff & 0xff;\n            idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n            idat.set(literals.subarray(pos), pi);\n            pi += literals.length - pos;\n            const adler = adler32(literals, 0, literals.length);\n            idat[pi++] = adler >> 24 & 0xff;\n            idat[pi++] = adler >> 16 & 0xff;\n            idat[pi++] = adler >> 8 & 0xff;\n            idat[pi++] = adler & 0xff;\n            return idat;\n          }\n\n          function encode(imgData, kind, forceDataSchema, isMask) {\n            const width = imgData.width;\n            const height = imgData.height;\n            let bitDepth, colorType, lineSize;\n            const bytes = imgData.data;\n\n            switch (kind) {\n              case _util.ImageKind.GRAYSCALE_1BPP:\n                colorType = 0;\n                bitDepth = 1;\n                lineSize = width + 7 >> 3;\n                break;\n\n              case _util.ImageKind.RGB_24BPP:\n                colorType = 2;\n                bitDepth = 8;\n                lineSize = width * 3;\n                break;\n\n              case _util.ImageKind.RGBA_32BPP:\n                colorType = 6;\n                bitDepth = 8;\n                lineSize = width * 4;\n                break;\n\n              default:\n                throw new Error(\"invalid format\");\n            }\n\n            const literals = new Uint8Array((1 + lineSize) * height);\n            let offsetLiterals = 0,\n                offsetBytes = 0;\n\n            for (let y = 0; y < height; ++y) {\n              literals[offsetLiterals++] = 0;\n              literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n              offsetBytes += lineSize;\n              offsetLiterals += lineSize;\n            }\n\n            if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n              offsetLiterals = 0;\n\n              for (let y = 0; y < height; y++) {\n                offsetLiterals++;\n\n                for (let i = 0; i < lineSize; i++) {\n                  literals[offsetLiterals++] ^= 0xff;\n                }\n              }\n            }\n\n            const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n            const idat = deflateSync(literals);\n            const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n            const data = new Uint8Array(pngLength);\n            let offset = 0;\n            data.set(PNG_HEADER, offset);\n            offset += PNG_HEADER.length;\n            writePngChunk(\"IHDR\", ihdr, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n            writePngChunk(\"IDATA\", idat, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + idat.length;\n            writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n            return (0, _util.createObjectURL)(data, \"image/png\", forceDataSchema);\n          }\n\n          return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n            const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n            return encode(imgData, kind, forceDataSchema, isMask);\n          };\n        }();\n\n        class SVGExtraState {\n          constructor() {\n            this.fontSizeScale = 1;\n            this.fontWeight = SVG_DEFAULTS.fontWeight;\n            this.fontSize = 0;\n            this.textMatrix = _util.IDENTITY_MATRIX;\n            this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n            this.leading = 0;\n            this.textRenderingMode = _util.TextRenderingMode.FILL;\n            this.textMatrixScale = 1;\n            this.x = 0;\n            this.y = 0;\n            this.lineX = 0;\n            this.lineY = 0;\n            this.charSpacing = 0;\n            this.wordSpacing = 0;\n            this.textHScale = 1;\n            this.textRise = 0;\n            this.fillColor = SVG_DEFAULTS.fillColor;\n            this.strokeColor = \"#000000\";\n            this.fillAlpha = 1;\n            this.strokeAlpha = 1;\n            this.lineWidth = 1;\n            this.lineJoin = \"\";\n            this.lineCap = \"\";\n            this.miterLimit = 0;\n            this.dashArray = [];\n            this.dashPhase = 0;\n            this.dependencies = [];\n            this.activeClipUrl = null;\n            this.clipGroup = null;\n            this.maskId = \"\";\n          }\n\n          clone() {\n            return Object.create(this);\n          }\n\n          setCurrentPoint(x, y) {\n            this.x = x;\n            this.y = y;\n          }\n\n        }\n\n        function opListToTree(opList) {\n          let opTree = [];\n          const tmp = [];\n\n          for (const opListElement of opList) {\n            if (opListElement.fn === \"save\") {\n              opTree.push({\n                fnId: 92,\n                fn: \"group\",\n                items: []\n              });\n              tmp.push(opTree);\n              opTree = opTree[opTree.length - 1].items;\n              continue;\n            }\n\n            if (opListElement.fn === \"restore\") {\n              opTree = tmp.pop();\n            } else {\n              opTree.push(opListElement);\n            }\n          }\n\n          return opTree;\n        }\n\n        function pf(value) {\n          if (Number.isInteger(value)) {\n            return value.toString();\n          }\n\n          const s = value.toFixed(10);\n          let i = s.length - 1;\n\n          if (s[i] !== \"0\") {\n            return s;\n          }\n\n          do {\n            i--;\n          } while (s[i] === \"0\");\n\n          return s.substring(0, s[i] === \".\" ? i : i + 1);\n        }\n\n        function pm(m) {\n          if (m[4] === 0 && m[5] === 0) {\n            if (m[1] === 0 && m[2] === 0) {\n              if (m[0] === 1 && m[3] === 1) {\n                return \"\";\n              }\n\n              return `scale(${pf(m[0])} ${pf(m[3])})`;\n            }\n\n            if (m[0] === m[3] && m[1] === -m[2]) {\n              const a = Math.acos(m[0]) * 180 / Math.PI;\n              return `rotate(${pf(a)})`;\n            }\n          } else {\n            if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n              return `translate(${pf(m[4])} ${pf(m[5])})`;\n            }\n          }\n\n          return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\n        }\n\n        let clipCount = 0;\n        let maskCount = 0;\n        let shadingCount = 0;\n        exports.SVGGraphics = SVGGraphics = class SVGGraphics {\n          constructor(commonObjs, objs, forceDataSchema) {\n            this.svgFactory = new _display_utils.DOMSVGFactory();\n            this.current = new SVGExtraState();\n            this.transformMatrix = _util.IDENTITY_MATRIX;\n            this.transformStack = [];\n            this.extraStack = [];\n            this.commonObjs = commonObjs;\n            this.objs = objs;\n            this.pendingClip = null;\n            this.pendingEOFill = false;\n            this.embedFonts = false;\n            this.embeddedFonts = Object.create(null);\n            this.cssStyle = null;\n            this.forceDataSchema = !!forceDataSchema;\n            this._operatorIdMapping = [];\n\n            for (const op in _util.OPS) {\n              this._operatorIdMapping[_util.OPS[op]] = op;\n            }\n          }\n\n          save() {\n            this.transformStack.push(this.transformMatrix);\n            const old = this.current;\n            this.extraStack.push(old);\n            this.current = old.clone();\n          }\n\n          restore() {\n            this.transformMatrix = this.transformStack.pop();\n            this.current = this.extraStack.pop();\n            this.pendingClip = null;\n            this.tgrp = null;\n          }\n\n          group(items) {\n            this.save();\n            this.executeOpTree(items);\n            this.restore();\n          }\n\n          loadDependencies(operatorList) {\n            const fnArray = operatorList.fnArray;\n            const argsArray = operatorList.argsArray;\n\n            for (let i = 0, ii = fnArray.length; i < ii; i++) {\n              if (fnArray[i] !== _util.OPS.dependency) {\n                continue;\n              }\n\n              for (const obj of argsArray[i]) {\n                const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n                const promise = new Promise(resolve => {\n                  objsPool.get(obj, resolve);\n                });\n                this.current.dependencies.push(promise);\n              }\n            }\n\n            return Promise.all(this.current.dependencies);\n          }\n\n          transform(a, b, c, d, e, f) {\n            const transformMatrix = [a, b, c, d, e, f];\n            this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n            this.tgrp = null;\n          }\n\n          getSVG(operatorList, viewport) {\n            this.viewport = viewport;\n\n            const svgElement = this._initialize(viewport);\n\n            return this.loadDependencies(operatorList).then(() => {\n              this.transformMatrix = _util.IDENTITY_MATRIX;\n              this.executeOpTree(this.convertOpList(operatorList));\n              return svgElement;\n            });\n          }\n\n          convertOpList(operatorList) {\n            const operatorIdMapping = this._operatorIdMapping;\n            const argsArray = operatorList.argsArray;\n            const fnArray = operatorList.fnArray;\n            const opList = [];\n\n            for (let i = 0, ii = fnArray.length; i < ii; i++) {\n              const fnId = fnArray[i];\n              opList.push({\n                fnId,\n                fn: operatorIdMapping[fnId],\n                args: argsArray[i]\n              });\n            }\n\n            return opListToTree(opList);\n          }\n\n          executeOpTree(opTree) {\n            for (const opTreeElement of opTree) {\n              const fn = opTreeElement.fn;\n              const fnId = opTreeElement.fnId;\n              const args = opTreeElement.args;\n\n              switch (fnId | 0) {\n                case _util.OPS.beginText:\n                  this.beginText();\n                  break;\n\n                case _util.OPS.dependency:\n                  break;\n\n                case _util.OPS.setLeading:\n                  this.setLeading(args);\n                  break;\n\n                case _util.OPS.setLeadingMoveText:\n                  this.setLeadingMoveText(args[0], args[1]);\n                  break;\n\n                case _util.OPS.setFont:\n                  this.setFont(args);\n                  break;\n\n                case _util.OPS.showText:\n                  this.showText(args[0]);\n                  break;\n\n                case _util.OPS.showSpacedText:\n                  this.showText(args[0]);\n                  break;\n\n                case _util.OPS.endText:\n                  this.endText();\n                  break;\n\n                case _util.OPS.moveText:\n                  this.moveText(args[0], args[1]);\n                  break;\n\n                case _util.OPS.setCharSpacing:\n                  this.setCharSpacing(args[0]);\n                  break;\n\n                case _util.OPS.setWordSpacing:\n                  this.setWordSpacing(args[0]);\n                  break;\n\n                case _util.OPS.setHScale:\n                  this.setHScale(args[0]);\n                  break;\n\n                case _util.OPS.setTextMatrix:\n                  this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n                  break;\n\n                case _util.OPS.setTextRise:\n                  this.setTextRise(args[0]);\n                  break;\n\n                case _util.OPS.setTextRenderingMode:\n                  this.setTextRenderingMode(args[0]);\n                  break;\n\n                case _util.OPS.setLineWidth:\n                  this.setLineWidth(args[0]);\n                  break;\n\n                case _util.OPS.setLineJoin:\n                  this.setLineJoin(args[0]);\n                  break;\n\n                case _util.OPS.setLineCap:\n                  this.setLineCap(args[0]);\n                  break;\n\n                case _util.OPS.setMiterLimit:\n                  this.setMiterLimit(args[0]);\n                  break;\n\n                case _util.OPS.setFillRGBColor:\n                  this.setFillRGBColor(args[0], args[1], args[2]);\n                  break;\n\n                case _util.OPS.setStrokeRGBColor:\n                  this.setStrokeRGBColor(args[0], args[1], args[2]);\n                  break;\n\n                case _util.OPS.setStrokeColorN:\n                  this.setStrokeColorN(args);\n                  break;\n\n                case _util.OPS.setFillColorN:\n                  this.setFillColorN(args);\n                  break;\n\n                case _util.OPS.shadingFill:\n                  this.shadingFill(args[0]);\n                  break;\n\n                case _util.OPS.setDash:\n                  this.setDash(args[0], args[1]);\n                  break;\n\n                case _util.OPS.setRenderingIntent:\n                  this.setRenderingIntent(args[0]);\n                  break;\n\n                case _util.OPS.setFlatness:\n                  this.setFlatness(args[0]);\n                  break;\n\n                case _util.OPS.setGState:\n                  this.setGState(args[0]);\n                  break;\n\n                case _util.OPS.fill:\n                  this.fill();\n                  break;\n\n                case _util.OPS.eoFill:\n                  this.eoFill();\n                  break;\n\n                case _util.OPS.stroke:\n                  this.stroke();\n                  break;\n\n                case _util.OPS.fillStroke:\n                  this.fillStroke();\n                  break;\n\n                case _util.OPS.eoFillStroke:\n                  this.eoFillStroke();\n                  break;\n\n                case _util.OPS.clip:\n                  this.clip(\"nonzero\");\n                  break;\n\n                case _util.OPS.eoClip:\n                  this.clip(\"evenodd\");\n                  break;\n\n                case _util.OPS.paintSolidColorImageMask:\n                  this.paintSolidColorImageMask();\n                  break;\n\n                case _util.OPS.paintJpegXObject:\n                  this.paintJpegXObject(args[0], args[1], args[2]);\n                  break;\n\n                case _util.OPS.paintImageXObject:\n                  this.paintImageXObject(args[0]);\n                  break;\n\n                case _util.OPS.paintInlineImageXObject:\n                  this.paintInlineImageXObject(args[0]);\n                  break;\n\n                case _util.OPS.paintImageMaskXObject:\n                  this.paintImageMaskXObject(args[0]);\n                  break;\n\n                case _util.OPS.paintFormXObjectBegin:\n                  this.paintFormXObjectBegin(args[0], args[1]);\n                  break;\n\n                case _util.OPS.paintFormXObjectEnd:\n                  this.paintFormXObjectEnd();\n                  break;\n\n                case _util.OPS.closePath:\n                  this.closePath();\n                  break;\n\n                case _util.OPS.closeStroke:\n                  this.closeStroke();\n                  break;\n\n                case _util.OPS.closeFillStroke:\n                  this.closeFillStroke();\n                  break;\n\n                case _util.OPS.closeEOFillStroke:\n                  this.closeEOFillStroke();\n                  break;\n\n                case _util.OPS.nextLine:\n                  this.nextLine();\n                  break;\n\n                case _util.OPS.transform:\n                  this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n                  break;\n\n                case _util.OPS.constructPath:\n                  this.constructPath(args[0], args[1]);\n                  break;\n\n                case _util.OPS.endPath:\n                  this.endPath();\n                  break;\n\n                case 92:\n                  this.group(opTreeElement.items);\n                  break;\n\n                default:\n                  (0, _util.warn)(`Unimplemented operator ${fn}`);\n                  break;\n              }\n            }\n          }\n\n          setWordSpacing(wordSpacing) {\n            this.current.wordSpacing = wordSpacing;\n          }\n\n          setCharSpacing(charSpacing) {\n            this.current.charSpacing = charSpacing;\n          }\n\n          nextLine() {\n            this.moveText(0, this.current.leading);\n          }\n\n          setTextMatrix(a, b, c, d, e, f) {\n            const current = this.current;\n            current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n            current.textMatrixScale = Math.sqrt(a * a + b * b);\n            current.x = current.lineX = 0;\n            current.y = current.lineY = 0;\n            current.xcoords = [];\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            current.txtElement = this.svgFactory.createElement(\"svg:text\");\n            current.txtElement.appendChild(current.tspan);\n          }\n\n          beginText() {\n            const current = this.current;\n            current.x = current.lineX = 0;\n            current.y = current.lineY = 0;\n            current.textMatrix = _util.IDENTITY_MATRIX;\n            current.lineMatrix = _util.IDENTITY_MATRIX;\n            current.textMatrixScale = 1;\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.txtElement = this.svgFactory.createElement(\"svg:text\");\n            current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n            current.xcoords = [];\n          }\n\n          moveText(x, y) {\n            const current = this.current;\n            current.x = current.lineX += x;\n            current.y = current.lineY += y;\n            current.xcoords = [];\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n          }\n\n          showText(glyphs) {\n            const current = this.current;\n            const font = current.font;\n            const fontSize = current.fontSize;\n\n            if (fontSize === 0) {\n              return;\n            }\n\n            const charSpacing = current.charSpacing;\n            const wordSpacing = current.wordSpacing;\n            const fontDirection = current.fontDirection;\n            const textHScale = current.textHScale * fontDirection;\n            const vertical = font.vertical;\n            const widthAdvanceScale = fontSize * current.fontMatrix[0];\n            let x = 0;\n\n            for (const glyph of glyphs) {\n              if (glyph === null) {\n                x += fontDirection * wordSpacing;\n                continue;\n              } else if ((0, _util.isNum)(glyph)) {\n                x += -glyph * fontSize * 0.001;\n                continue;\n              }\n\n              const width = glyph.width;\n              const character = glyph.fontChar;\n              const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              const charWidth = width * widthAdvanceScale + spacing * fontDirection;\n\n              if (!glyph.isInFont && !font.missingFile) {\n                x += charWidth;\n                continue;\n              }\n\n              current.xcoords.push(current.x + x);\n              current.tspan.textContent += character;\n              x += charWidth;\n            }\n\n            if (vertical) {\n              current.y -= x * textHScale;\n            } else {\n              current.x += x * textHScale;\n            }\n\n            current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n\n            if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n              current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n            }\n\n            if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n              current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n            }\n\n            const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n            if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n                current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n              }\n\n              if (current.fillAlpha < 1) {\n                current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n              }\n            } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n              current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n            } else {\n              current.tspan.setAttributeNS(null, \"fill\", \"none\");\n            }\n\n            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              const lineWidthScale = 1 / (current.textMatrixScale || 1);\n\n              this._setStrokeAttributes(current.tspan, lineWidthScale);\n            }\n\n            let textMatrix = current.textMatrix;\n\n            if (current.textRise !== 0) {\n              textMatrix = textMatrix.slice();\n              textMatrix[5] += current.textRise;\n            }\n\n            current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\n            current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n            current.txtElement.appendChild(current.tspan);\n            current.txtgrp.appendChild(current.txtElement);\n\n            this._ensureTransformGroup().appendChild(current.txtElement);\n          }\n\n          setLeadingMoveText(x, y) {\n            this.setLeading(-y);\n            this.moveText(x, y);\n          }\n\n          addFontStyle(fontObj) {\n            if (!this.cssStyle) {\n              this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n              this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n              this.defs.appendChild(this.cssStyle);\n            }\n\n            const url = (0, _util.createObjectURL)(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n            this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\n          }\n\n          setFont(details) {\n            const current = this.current;\n            const fontObj = this.commonObjs.get(details[0]);\n            let size = details[1];\n            current.font = fontObj;\n\n            if (this.embedFonts && fontObj.data && !this.embeddedFonts[fontObj.loadedName]) {\n              this.addFontStyle(fontObj);\n              this.embeddedFonts[fontObj.loadedName] = fontObj;\n            }\n\n            current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n            let bold = \"normal\";\n\n            if (fontObj.black) {\n              bold = \"900\";\n            } else if (fontObj.bold) {\n              bold = \"bold\";\n            }\n\n            const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n            if (size < 0) {\n              size = -size;\n              current.fontDirection = -1;\n            } else {\n              current.fontDirection = 1;\n            }\n\n            current.fontSize = size;\n            current.fontFamily = fontObj.loadedName;\n            current.fontWeight = bold;\n            current.fontStyle = italic;\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            current.xcoords = [];\n          }\n\n          endText() {\n            const current = this.current;\n\n            if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement && current.txtElement.hasChildNodes()) {\n              current.element = current.txtElement;\n              this.clip(\"nonzero\");\n              this.endPath();\n            }\n          }\n\n          setLineWidth(width) {\n            if (width > 0) {\n              this.current.lineWidth = width;\n            }\n          }\n\n          setLineCap(style) {\n            this.current.lineCap = LINE_CAP_STYLES[style];\n          }\n\n          setLineJoin(style) {\n            this.current.lineJoin = LINE_JOIN_STYLES[style];\n          }\n\n          setMiterLimit(limit) {\n            this.current.miterLimit = limit;\n          }\n\n          setStrokeAlpha(strokeAlpha) {\n            this.current.strokeAlpha = strokeAlpha;\n          }\n\n          setStrokeRGBColor(r, g, b) {\n            this.current.strokeColor = _util.Util.makeCssRgb(r, g, b);\n          }\n\n          setFillAlpha(fillAlpha) {\n            this.current.fillAlpha = fillAlpha;\n          }\n\n          setFillRGBColor(r, g, b) {\n            this.current.fillColor = _util.Util.makeCssRgb(r, g, b);\n            this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            this.current.xcoords = [];\n          }\n\n          setStrokeColorN(args) {\n            this.current.strokeColor = this._makeColorN_Pattern(args);\n          }\n\n          setFillColorN(args) {\n            this.current.fillColor = this._makeColorN_Pattern(args);\n          }\n\n          shadingFill(args) {\n            const width = this.viewport.width;\n            const height = this.viewport.height;\n\n            const inv = _util.Util.inverseTransform(this.transformMatrix);\n\n            const bl = _util.Util.applyTransform([0, 0], inv);\n\n            const br = _util.Util.applyTransform([0, height], inv);\n\n            const ul = _util.Util.applyTransform([width, 0], inv);\n\n            const ur = _util.Util.applyTransform([width, height], inv);\n\n            const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n            const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n            const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n            const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n            const rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", x0);\n            rect.setAttributeNS(null, \"y\", y0);\n            rect.setAttributeNS(null, \"width\", x1 - x0);\n            rect.setAttributeNS(null, \"height\", y1 - y0);\n            rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n\n            this._ensureTransformGroup().appendChild(rect);\n          }\n\n          _makeColorN_Pattern(args) {\n            if (args[0] === \"TilingPattern\") {\n              return this._makeTilingPattern(args);\n            }\n\n            return this._makeShadingPattern(args);\n          }\n\n          _makeTilingPattern(args) {\n            const color = args[1];\n            const operatorList = args[2];\n            const matrix = args[3] || _util.IDENTITY_MATRIX;\n            const [x0, y0, x1, y1] = args[4];\n            const xstep = args[5];\n            const ystep = args[6];\n            const paintType = args[7];\n            const tilingId = `shading${shadingCount++}`;\n\n            const [tx0, ty0] = _util.Util.applyTransform([x0, y0], matrix);\n\n            const [tx1, ty1] = _util.Util.applyTransform([x1, y1], matrix);\n\n            const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix);\n\n            const txstep = xstep * xscale;\n            const tystep = ystep * yscale;\n            const tiling = this.svgFactory.createElement(\"svg:pattern\");\n            tiling.setAttributeNS(null, \"id\", tilingId);\n            tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n            tiling.setAttributeNS(null, \"width\", txstep);\n            tiling.setAttributeNS(null, \"height\", tystep);\n            tiling.setAttributeNS(null, \"x\", `${tx0}`);\n            tiling.setAttributeNS(null, \"y\", `${ty0}`);\n            const svg = this.svg;\n            const transformMatrix = this.transformMatrix;\n            const fillColor = this.current.fillColor;\n            const strokeColor = this.current.strokeColor;\n            const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n            this.svg = bbox;\n            this.transformMatrix = matrix;\n\n            if (paintType === 2) {\n              const cssColor = _util.Util.makeCssRgb(...color);\n\n              this.current.fillColor = cssColor;\n              this.current.strokeColor = cssColor;\n            }\n\n            this.executeOpTree(this.convertOpList(operatorList));\n            this.svg = svg;\n            this.transformMatrix = transformMatrix;\n            this.current.fillColor = fillColor;\n            this.current.strokeColor = strokeColor;\n            tiling.appendChild(bbox.childNodes[0]);\n            this.defs.appendChild(tiling);\n            return `url(#${tilingId})`;\n          }\n\n          _makeShadingPattern(args) {\n            switch (args[0]) {\n              case \"RadialAxial\":\n                const shadingId = `shading${shadingCount++}`;\n                const colorStops = args[3];\n                let gradient;\n\n                switch (args[1]) {\n                  case \"axial\":\n                    const point0 = args[4];\n                    const point1 = args[5];\n                    gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                    gradient.setAttributeNS(null, \"id\", shadingId);\n                    gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                    gradient.setAttributeNS(null, \"x1\", point0[0]);\n                    gradient.setAttributeNS(null, \"y1\", point0[1]);\n                    gradient.setAttributeNS(null, \"x2\", point1[0]);\n                    gradient.setAttributeNS(null, \"y2\", point1[1]);\n                    break;\n\n                  case \"radial\":\n                    const focalPoint = args[4];\n                    const circlePoint = args[5];\n                    const focalRadius = args[6];\n                    const circleRadius = args[7];\n                    gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                    gradient.setAttributeNS(null, \"id\", shadingId);\n                    gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                    gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                    gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                    gradient.setAttributeNS(null, \"r\", circleRadius);\n                    gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                    gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                    gradient.setAttributeNS(null, \"fr\", focalRadius);\n                    break;\n\n                  default:\n                    throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n                }\n\n                for (const colorStop of colorStops) {\n                  const stop = this.svgFactory.createElement(\"svg:stop\");\n                  stop.setAttributeNS(null, \"offset\", colorStop[0]);\n                  stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n                  gradient.appendChild(stop);\n                }\n\n                this.defs.appendChild(gradient);\n                return `url(#${shadingId})`;\n\n              case \"Mesh\":\n                (0, _util.warn)(\"Unimplemented pattern Mesh\");\n                return null;\n\n              case \"Dummy\":\n                return \"hotpink\";\n\n              default:\n                throw new Error(`Unknown IR type: ${args[0]}`);\n            }\n          }\n\n          setDash(dashArray, dashPhase) {\n            this.current.dashArray = dashArray;\n            this.current.dashPhase = dashPhase;\n          }\n\n          constructPath(ops, args) {\n            const current = this.current;\n            let x = current.x,\n                y = current.y;\n            let d = [];\n            let j = 0;\n\n            for (const op of ops) {\n              switch (op | 0) {\n                case _util.OPS.rectangle:\n                  x = args[j++];\n                  y = args[j++];\n                  const width = args[j++];\n                  const height = args[j++];\n                  const xw = x + width;\n                  const yh = y + height;\n                  d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n                  break;\n\n                case _util.OPS.moveTo:\n                  x = args[j++];\n                  y = args[j++];\n                  d.push(\"M\", pf(x), pf(y));\n                  break;\n\n                case _util.OPS.lineTo:\n                  x = args[j++];\n                  y = args[j++];\n                  d.push(\"L\", pf(x), pf(y));\n                  break;\n\n                case _util.OPS.curveTo:\n                  x = args[j + 4];\n                  y = args[j + 5];\n                  d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n                  j += 6;\n                  break;\n\n                case _util.OPS.curveTo2:\n                  d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  j += 4;\n                  break;\n\n                case _util.OPS.curveTo3:\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n                  j += 4;\n                  break;\n\n                case _util.OPS.closePath:\n                  d.push(\"Z\");\n                  break;\n              }\n            }\n\n            d = d.join(\" \");\n\n            if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n              d = current.path.getAttributeNS(null, \"d\") + d;\n            } else {\n              current.path = this.svgFactory.createElement(\"svg:path\");\n\n              this._ensureTransformGroup().appendChild(current.path);\n            }\n\n            current.path.setAttributeNS(null, \"d\", d);\n            current.path.setAttributeNS(null, \"fill\", \"none\");\n            current.element = current.path;\n            current.setCurrentPoint(x, y);\n          }\n\n          endPath() {\n            const current = this.current;\n            current.path = null;\n\n            if (!this.pendingClip) {\n              return;\n            }\n\n            if (!current.element) {\n              this.pendingClip = null;\n              return;\n            }\n\n            const clipId = `clippath${clipCount++}`;\n            const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n            clipPath.setAttributeNS(null, \"id\", clipId);\n            clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n            const clipElement = current.element.cloneNode(true);\n\n            if (this.pendingClip === \"evenodd\") {\n              clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n            } else {\n              clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n            }\n\n            this.pendingClip = null;\n            clipPath.appendChild(clipElement);\n            this.defs.appendChild(clipPath);\n\n            if (current.activeClipUrl) {\n              current.clipGroup = null;\n              this.extraStack.forEach(function (prev) {\n                prev.clipGroup = null;\n              });\n              clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n            }\n\n            current.activeClipUrl = `url(#${clipId})`;\n            this.tgrp = null;\n          }\n\n          clip(type) {\n            this.pendingClip = type;\n          }\n\n          closePath() {\n            const current = this.current;\n\n            if (current.path) {\n              const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n              current.path.setAttributeNS(null, \"d\", d);\n            }\n          }\n\n          setLeading(leading) {\n            this.current.leading = -leading;\n          }\n\n          setTextRise(textRise) {\n            this.current.textRise = textRise;\n          }\n\n          setTextRenderingMode(textRenderingMode) {\n            this.current.textRenderingMode = textRenderingMode;\n          }\n\n          setHScale(scale) {\n            this.current.textHScale = scale / 100;\n          }\n\n          setRenderingIntent(intent) {}\n\n          setFlatness(flatness) {}\n\n          setGState(states) {\n            for (const [key, value] of states) {\n              switch (key) {\n                case \"LW\":\n                  this.setLineWidth(value);\n                  break;\n\n                case \"LC\":\n                  this.setLineCap(value);\n                  break;\n\n                case \"LJ\":\n                  this.setLineJoin(value);\n                  break;\n\n                case \"ML\":\n                  this.setMiterLimit(value);\n                  break;\n\n                case \"D\":\n                  this.setDash(value[0], value[1]);\n                  break;\n\n                case \"RI\":\n                  this.setRenderingIntent(value);\n                  break;\n\n                case \"FL\":\n                  this.setFlatness(value);\n                  break;\n\n                case \"Font\":\n                  this.setFont(value);\n                  break;\n\n                case \"CA\":\n                  this.setStrokeAlpha(value);\n                  break;\n\n                case \"ca\":\n                  this.setFillAlpha(value);\n                  break;\n\n                default:\n                  (0, _util.warn)(`Unimplemented graphic state operator ${key}`);\n                  break;\n              }\n            }\n          }\n\n          fill() {\n            const current = this.current;\n\n            if (current.element) {\n              current.element.setAttributeNS(null, \"fill\", current.fillColor);\n              current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n              this.endPath();\n            }\n          }\n\n          stroke() {\n            const current = this.current;\n\n            if (current.element) {\n              this._setStrokeAttributes(current.element);\n\n              current.element.setAttributeNS(null, \"fill\", \"none\");\n              this.endPath();\n            }\n          }\n\n          _setStrokeAttributes(element) {\n            let lineWidthScale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            const current = this.current;\n            let dashArray = current.dashArray;\n\n            if (lineWidthScale !== 1 && dashArray.length > 0) {\n              dashArray = dashArray.map(function (value) {\n                return lineWidthScale * value;\n              });\n            }\n\n            element.setAttributeNS(null, \"stroke\", current.strokeColor);\n            element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n            element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n            element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n            element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n            element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n            element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n            element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n          }\n\n          eoFill() {\n            if (this.current.element) {\n              this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n            }\n\n            this.fill();\n          }\n\n          fillStroke() {\n            this.stroke();\n            this.fill();\n          }\n\n          eoFillStroke() {\n            if (this.current.element) {\n              this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n            }\n\n            this.fillStroke();\n          }\n\n          closeStroke() {\n            this.closePath();\n            this.stroke();\n          }\n\n          closeFillStroke() {\n            this.closePath();\n            this.fillStroke();\n          }\n\n          closeEOFillStroke() {\n            this.closePath();\n            this.eoFillStroke();\n          }\n\n          paintSolidColorImageMask() {\n            const rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", \"0\");\n            rect.setAttributeNS(null, \"y\", \"0\");\n            rect.setAttributeNS(null, \"width\", \"1px\");\n            rect.setAttributeNS(null, \"height\", \"1px\");\n            rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n            this._ensureTransformGroup().appendChild(rect);\n          }\n\n          paintJpegXObject(objId, w, h) {\n            const imgObj = this.objs.get(objId);\n            const imgEl = this.svgFactory.createElement(\"svg:image\");\n            imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgObj.src);\n            imgEl.setAttributeNS(null, \"width\", pf(w));\n            imgEl.setAttributeNS(null, \"height\", pf(h));\n            imgEl.setAttributeNS(null, \"x\", \"0\");\n            imgEl.setAttributeNS(null, \"y\", pf(-h));\n            imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / w)} ${pf(-1 / h)})`);\n\n            this._ensureTransformGroup().appendChild(imgEl);\n          }\n\n          paintImageXObject(objId) {\n            const imgData = this.objs.get(objId);\n\n            if (!imgData) {\n              (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`);\n              return;\n            }\n\n            this.paintInlineImageXObject(imgData);\n          }\n\n          paintInlineImageXObject(imgData, mask) {\n            const width = imgData.width;\n            const height = imgData.height;\n            const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n            const cliprect = this.svgFactory.createElement(\"svg:rect\");\n            cliprect.setAttributeNS(null, \"x\", \"0\");\n            cliprect.setAttributeNS(null, \"y\", \"0\");\n            cliprect.setAttributeNS(null, \"width\", pf(width));\n            cliprect.setAttributeNS(null, \"height\", pf(height));\n            this.current.element = cliprect;\n            this.clip(\"nonzero\");\n            const imgEl = this.svgFactory.createElement(\"svg:image\");\n            imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n            imgEl.setAttributeNS(null, \"x\", \"0\");\n            imgEl.setAttributeNS(null, \"y\", pf(-height));\n            imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n            imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n            imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\n\n            if (mask) {\n              mask.appendChild(imgEl);\n            } else {\n              this._ensureTransformGroup().appendChild(imgEl);\n            }\n          }\n\n          paintImageMaskXObject(imgData) {\n            const current = this.current;\n            const width = imgData.width;\n            const height = imgData.height;\n            const fillColor = current.fillColor;\n            current.maskId = `mask${maskCount++}`;\n            const mask = this.svgFactory.createElement(\"svg:mask\");\n            mask.setAttributeNS(null, \"id\", current.maskId);\n            const rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", \"0\");\n            rect.setAttributeNS(null, \"y\", \"0\");\n            rect.setAttributeNS(null, \"width\", pf(width));\n            rect.setAttributeNS(null, \"height\", pf(height));\n            rect.setAttributeNS(null, \"fill\", fillColor);\n            rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n            this.defs.appendChild(mask);\n\n            this._ensureTransformGroup().appendChild(rect);\n\n            this.paintInlineImageXObject(imgData, mask);\n          }\n\n          paintFormXObjectBegin(matrix, bbox) {\n            if (Array.isArray(matrix) && matrix.length === 6) {\n              this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n            }\n\n            if (bbox) {\n              const width = bbox[2] - bbox[0];\n              const height = bbox[3] - bbox[1];\n              const cliprect = this.svgFactory.createElement(\"svg:rect\");\n              cliprect.setAttributeNS(null, \"x\", bbox[0]);\n              cliprect.setAttributeNS(null, \"y\", bbox[1]);\n              cliprect.setAttributeNS(null, \"width\", pf(width));\n              cliprect.setAttributeNS(null, \"height\", pf(height));\n              this.current.element = cliprect;\n              this.clip(\"nonzero\");\n              this.endPath();\n            }\n          }\n\n          paintFormXObjectEnd() {}\n\n          _initialize(viewport) {\n            const svg = this.svgFactory.create(viewport.width, viewport.height);\n            const definitions = this.svgFactory.createElement(\"svg:defs\");\n            svg.appendChild(definitions);\n            this.defs = definitions;\n            const rootGroup = this.svgFactory.createElement(\"svg:g\");\n            rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n            svg.appendChild(rootGroup);\n            this.svg = rootGroup;\n            return svg;\n          }\n\n          _ensureClipGroup() {\n            if (!this.current.clipGroup) {\n              const clipGroup = this.svgFactory.createElement(\"svg:g\");\n              clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n              this.svg.appendChild(clipGroup);\n              this.current.clipGroup = clipGroup;\n            }\n\n            return this.current.clipGroup;\n          }\n\n          _ensureTransformGroup() {\n            if (!this.tgrp) {\n              this.tgrp = this.svgFactory.createElement(\"svg:g\");\n              this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n              if (this.current.activeClipUrl) {\n                this._ensureClipGroup().appendChild(this.tgrp);\n              } else {\n                this.svg.appendChild(this.tgrp);\n              }\n            }\n\n            return this.tgrp;\n          }\n\n        };\n      }\n      /***/\n    },\n    /* 19 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFNodeStream = void 0;\n\n      var _util = __w_pdfjs_require__(1);\n\n      var _network_utils = __w_pdfjs_require__(20);\n\n      const fs = require(\"fs\");\n\n      const http = require(\"http\");\n\n      const https = require(\"https\");\n\n      const url = require(\"url\");\n\n      const fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\n      function parseUrl(sourceUrl) {\n        const parsedUrl = url.parse(sourceUrl);\n\n        if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n          return parsedUrl;\n        }\n\n        if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n          return url.parse(`file:///${sourceUrl}`);\n        }\n\n        if (!parsedUrl.host) {\n          parsedUrl.protocol = \"file:\";\n        }\n\n        return parsedUrl;\n      }\n\n      class PDFNodeStream {\n        constructor(source) {\n          this.source = source;\n          this.url = parseUrl(source.url);\n          this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n          this.isFsUrl = this.url.protocol === \"file:\";\n          this.httpHeaders = this.isHttp && source.httpHeaders || {};\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n\n        get _progressiveDataLength() {\n          return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n        }\n\n        getFullReader() {\n          (0, _util.assert)(!this._fullRequestReader);\n          this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n          return this._fullRequestReader;\n        }\n\n        getRangeReader(start, end) {\n          if (end <= this._progressiveDataLength) {\n            return null;\n          }\n\n          const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n\n          this._rangeRequestReaders.push(rangeReader);\n\n          return rangeReader;\n        }\n\n        cancelAllRequests(reason) {\n          if (this._fullRequestReader) {\n            this._fullRequestReader.cancel(reason);\n          }\n\n          const readers = this._rangeRequestReaders.slice(0);\n\n          readers.forEach(function (reader) {\n            reader.cancel(reason);\n          });\n        }\n\n      }\n\n      exports.PDFNodeStream = PDFNodeStream;\n\n      class BaseFullReader {\n        constructor(stream) {\n          this._url = stream.url;\n          this._done = false;\n          this._storedError = null;\n          this.onProgress = null;\n          const source = stream.source;\n          this._contentLength = source.length;\n          this._loaded = 0;\n          this._filename = null;\n          this._disableRange = source.disableRange || false;\n          this._rangeChunkSize = source.rangeChunkSize;\n\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n\n          this._isStreamingSupported = !source.disableStream;\n          this._isRangeSupported = !source.disableRange;\n          this._readableStream = null;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          this._headersCapability = (0, _util.createPromiseCapability)();\n        }\n\n        get headersReady() {\n          return this._headersCapability.promise;\n        }\n\n        get filename() {\n          return this._filename;\n        }\n\n        get contentLength() {\n          return this._contentLength;\n        }\n\n        get isRangeSupported() {\n          return this._isRangeSupported;\n        }\n\n        get isStreamingSupported() {\n          return this._isStreamingSupported;\n        }\n\n        async read() {\n          await this._readCapability.promise;\n\n          if (this._done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n\n          if (this._storedError) {\n            throw this._storedError;\n          }\n\n          const chunk = this._readableStream.read();\n\n          if (chunk === null) {\n            this._readCapability = (0, _util.createPromiseCapability)();\n            return this.read();\n          }\n\n          this._loaded += chunk.length;\n\n          if (this.onProgress) {\n            this.onProgress({\n              loaded: this._loaded,\n              total: this._contentLength\n            });\n          }\n\n          const buffer = new Uint8Array(chunk).buffer;\n          return {\n            value: buffer,\n            done: false\n          };\n        }\n\n        cancel(reason) {\n          if (!this._readableStream) {\n            this._error(reason);\n\n            return;\n          }\n\n          this._readableStream.destroy(reason);\n        }\n\n        _error(reason) {\n          this._storedError = reason;\n\n          this._readCapability.resolve();\n        }\n\n        _setReadableStream(readableStream) {\n          this._readableStream = readableStream;\n          readableStream.on(\"readable\", () => {\n            this._readCapability.resolve();\n          });\n          readableStream.on(\"end\", () => {\n            readableStream.destroy();\n            this._done = true;\n\n            this._readCapability.resolve();\n          });\n          readableStream.on(\"error\", reason => {\n            this._error(reason);\n          });\n\n          if (!this._isStreamingSupported && this._isRangeSupported) {\n            this._error(new _util.AbortException(\"streaming is disabled\"));\n          }\n\n          if (this._storedError) {\n            this._readableStream.destroy(this._storedError);\n          }\n        }\n\n      }\n\n      class BaseRangeReader {\n        constructor(stream) {\n          this._url = stream.url;\n          this._done = false;\n          this._storedError = null;\n          this.onProgress = null;\n          this._loaded = 0;\n          this._readableStream = null;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          const source = stream.source;\n          this._isStreamingSupported = !source.disableStream;\n        }\n\n        get isStreamingSupported() {\n          return this._isStreamingSupported;\n        }\n\n        async read() {\n          await this._readCapability.promise;\n\n          if (this._done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n\n          if (this._storedError) {\n            throw this._storedError;\n          }\n\n          const chunk = this._readableStream.read();\n\n          if (chunk === null) {\n            this._readCapability = (0, _util.createPromiseCapability)();\n            return this.read();\n          }\n\n          this._loaded += chunk.length;\n\n          if (this.onProgress) {\n            this.onProgress({\n              loaded: this._loaded\n            });\n          }\n\n          const buffer = new Uint8Array(chunk).buffer;\n          return {\n            value: buffer,\n            done: false\n          };\n        }\n\n        cancel(reason) {\n          if (!this._readableStream) {\n            this._error(reason);\n\n            return;\n          }\n\n          this._readableStream.destroy(reason);\n        }\n\n        _error(reason) {\n          this._storedError = reason;\n\n          this._readCapability.resolve();\n        }\n\n        _setReadableStream(readableStream) {\n          this._readableStream = readableStream;\n          readableStream.on(\"readable\", () => {\n            this._readCapability.resolve();\n          });\n          readableStream.on(\"end\", () => {\n            readableStream.destroy();\n            this._done = true;\n\n            this._readCapability.resolve();\n          });\n          readableStream.on(\"error\", reason => {\n            this._error(reason);\n          });\n\n          if (this._storedError) {\n            this._readableStream.destroy(this._storedError);\n          }\n        }\n\n      }\n\n      function createRequestOptions(url, headers) {\n        return {\n          protocol: url.protocol,\n          auth: url.auth,\n          host: url.hostname,\n          port: url.port,\n          path: url.path,\n          method: \"GET\",\n          headers\n        };\n      }\n\n      class PDFNodeStreamFullReader extends BaseFullReader {\n        constructor(stream) {\n          super(stream);\n\n          const handleResponse = response => {\n            if (response.statusCode === 404) {\n              const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n              this._storedError = error;\n\n              this._headersCapability.reject(error);\n\n              return;\n            }\n\n            this._headersCapability.resolve();\n\n            this._setReadableStream(response);\n\n            const getResponseHeader = name => {\n              return this._readableStream.headers[name.toLowerCase()];\n            };\n\n            const {\n              allowRangeRequests,\n              suggestedLength\n            } = (0, _network_utils.validateRangeRequestCapabilities)({\n              getResponseHeader,\n              isHttp: stream.isHttp,\n              rangeChunkSize: this._rangeChunkSize,\n              disableRange: this._disableRange\n            });\n            this._isRangeSupported = allowRangeRequests;\n            this._contentLength = suggestedLength || this._contentLength;\n            this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n          };\n\n          this._request = null;\n\n          if (this._url.protocol === \"http:\") {\n            this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n          } else {\n            this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n          }\n\n          this._request.on(\"error\", reason => {\n            this._storedError = reason;\n\n            this._headersCapability.reject(reason);\n          });\n\n          this._request.end();\n        }\n\n      }\n\n      class PDFNodeStreamRangeReader extends BaseRangeReader {\n        constructor(stream, start, end) {\n          super(stream);\n          this._httpHeaders = {};\n\n          for (const property in stream.httpHeaders) {\n            const value = stream.httpHeaders[property];\n\n            if (typeof value === \"undefined\") {\n              continue;\n            }\n\n            this._httpHeaders[property] = value;\n          }\n\n          this._httpHeaders[\"Range\"] = `bytes=${start}-${end - 1}`;\n\n          const handleResponse = response => {\n            if (response.statusCode === 404) {\n              const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n              this._storedError = error;\n              return;\n            }\n\n            this._setReadableStream(response);\n          };\n\n          this._request = null;\n\n          if (this._url.protocol === \"http:\") {\n            this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n          } else {\n            this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n          }\n\n          this._request.on(\"error\", reason => {\n            this._storedError = reason;\n          });\n\n          this._request.end();\n        }\n\n      }\n\n      class PDFNodeStreamFsFullReader extends BaseFullReader {\n        constructor(stream) {\n          super(stream);\n          let path = decodeURIComponent(this._url.path);\n\n          if (fileUriRegex.test(this._url.href)) {\n            path = path.replace(/^\\//, \"\");\n          }\n\n          fs.lstat(path, (error, stat) => {\n            if (error) {\n              if (error.code === \"ENOENT\") {\n                error = new _util.MissingPDFException(`Missing PDF \"${path}\".`);\n              }\n\n              this._storedError = error;\n\n              this._headersCapability.reject(error);\n\n              return;\n            }\n\n            this._contentLength = stat.size;\n\n            this._setReadableStream(fs.createReadStream(path));\n\n            this._headersCapability.resolve();\n          });\n        }\n\n      }\n\n      class PDFNodeStreamFsRangeReader extends BaseRangeReader {\n        constructor(stream, start, end) {\n          super(stream);\n          let path = decodeURIComponent(this._url.path);\n\n          if (fileUriRegex.test(this._url.href)) {\n            path = path.replace(/^\\//, \"\");\n          }\n\n          this._setReadableStream(fs.createReadStream(path, {\n            start,\n            end: end - 1\n          }));\n        }\n\n      }\n      /***/\n\n    },\n    /* 20 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.createResponseStatusError = createResponseStatusError;\n      exports.extractFilenameFromHeader = extractFilenameFromHeader;\n      exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n      exports.validateResponseStatus = validateResponseStatus;\n\n      var _util = __w_pdfjs_require__(1);\n\n      var _content_disposition = __w_pdfjs_require__(21);\n\n      function validateRangeRequestCapabilities(_ref21) {\n        let {\n          getResponseHeader,\n          isHttp,\n          rangeChunkSize,\n          disableRange\n        } = _ref21;\n        (0, _util.assert)(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n        const returnValues = {\n          allowRangeRequests: false,\n          suggestedLength: undefined\n        };\n        const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n\n        if (!Number.isInteger(length)) {\n          return returnValues;\n        }\n\n        returnValues.suggestedLength = length;\n\n        if (length <= 2 * rangeChunkSize) {\n          return returnValues;\n        }\n\n        if (disableRange || !isHttp) {\n          return returnValues;\n        }\n\n        if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n          return returnValues;\n        }\n\n        const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n\n        if (contentEncoding !== \"identity\") {\n          return returnValues;\n        }\n\n        returnValues.allowRangeRequests = true;\n        return returnValues;\n      }\n\n      function extractFilenameFromHeader(getResponseHeader) {\n        const contentDisposition = getResponseHeader(\"Content-Disposition\");\n\n        if (contentDisposition) {\n          let filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n\n          if (filename.includes(\"%\")) {\n            try {\n              filename = decodeURIComponent(filename);\n            } catch (ex) {}\n          }\n\n          if (/\\.pdf$/i.test(filename)) {\n            return filename;\n          }\n        }\n\n        return null;\n      }\n\n      function createResponseStatusError(status, url) {\n        if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n          return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n        }\n\n        return new _util.UnexpectedResponseException(\"Unexpected server response (\" + status + ') while retrieving PDF \"' + url + '\".', status);\n      }\n\n      function validateResponseStatus(status) {\n        return status === 200 || status === 206;\n      }\n      /***/\n\n    },\n    /* 21 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n\n      function getFilenameFromContentDispositionHeader(contentDisposition) {\n        let needsEncodingFixup = true;\n        let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n\n        if (tmp) {\n          tmp = tmp[1];\n          let filename = rfc2616unquote(tmp);\n          filename = unescape(filename);\n          filename = rfc5987decode(filename);\n          filename = rfc2047decode(filename);\n          return fixupEncoding(filename);\n        }\n\n        tmp = rfc2231getparam(contentDisposition);\n\n        if (tmp) {\n          const filename = rfc2047decode(tmp);\n          return fixupEncoding(filename);\n        }\n\n        tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n\n        if (tmp) {\n          tmp = tmp[1];\n          let filename = rfc2616unquote(tmp);\n          filename = rfc2047decode(filename);\n          return fixupEncoding(filename);\n        }\n\n        function toParamRegExp(attributePattern, flags) {\n          return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n        }\n\n        function textdecode(encoding, value) {\n          if (encoding) {\n            if (!/^[\\x00-\\xFF]+$/.test(value)) {\n              return value;\n            }\n\n            try {\n              const decoder = new TextDecoder(encoding, {\n                fatal: true\n              });\n              const bytes = Array.from(value, function (ch) {\n                return ch.charCodeAt(0) & 0xff;\n              });\n              value = decoder.decode(new Uint8Array(bytes));\n              needsEncodingFixup = false;\n            } catch (e) {\n              if (/^utf-?8$/i.test(encoding)) {\n                try {\n                  value = decodeURIComponent(escape(value));\n                  needsEncodingFixup = false;\n                } catch (err) {}\n              }\n            }\n          }\n\n          return value;\n        }\n\n        function fixupEncoding(value) {\n          if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n            value = textdecode(\"utf-8\", value);\n\n            if (needsEncodingFixup) {\n              value = textdecode(\"iso-8859-1\", value);\n            }\n          }\n\n          return value;\n        }\n\n        function rfc2231getparam(contentDisposition) {\n          const matches = [];\n          let match;\n          const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n\n          while ((match = iter.exec(contentDisposition)) !== null) {\n            let [, n, quot, part] = match;\n            n = parseInt(n, 10);\n\n            if (n in matches) {\n              if (n === 0) {\n                break;\n              }\n\n              continue;\n            }\n\n            matches[n] = [quot, part];\n          }\n\n          const parts = [];\n\n          for (let n = 0; n < matches.length; ++n) {\n            if (!(n in matches)) {\n              break;\n            }\n\n            let [quot, part] = matches[n];\n            part = rfc2616unquote(part);\n\n            if (quot) {\n              part = unescape(part);\n\n              if (n === 0) {\n                part = rfc5987decode(part);\n              }\n            }\n\n            parts.push(part);\n          }\n\n          return parts.join(\"\");\n        }\n\n        function rfc2616unquote(value) {\n          if (value.startsWith('\"')) {\n            const parts = value.slice(1).split('\\\\\"');\n\n            for (let i = 0; i < parts.length; ++i) {\n              const quotindex = parts[i].indexOf('\"');\n\n              if (quotindex !== -1) {\n                parts[i] = parts[i].slice(0, quotindex);\n                parts.length = i + 1;\n              }\n\n              parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n            }\n\n            value = parts.join('\"');\n          }\n\n          return value;\n        }\n\n        function rfc5987decode(extvalue) {\n          const encodingend = extvalue.indexOf(\"'\");\n\n          if (encodingend === -1) {\n            return extvalue;\n          }\n\n          const encoding = extvalue.slice(0, encodingend);\n          const langvalue = extvalue.slice(encodingend + 1);\n          const value = langvalue.replace(/^[^']*'/, \"\");\n          return textdecode(encoding, value);\n        }\n\n        function rfc2047decode(value) {\n          if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n            return value;\n          }\n\n          return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (_, charset, encoding, text) {\n            if (encoding === \"q\" || encoding === \"Q\") {\n              text = text.replace(/_/g, \" \");\n              text = text.replace(/=([0-9a-fA-F]{2})/g, function (_, hex) {\n                return String.fromCharCode(parseInt(hex, 16));\n              });\n              return textdecode(charset, text);\n            }\n\n            try {\n              text = atob(text);\n            } catch (e) {}\n\n            return textdecode(charset, text);\n          });\n        }\n\n        return \"\";\n      }\n      /***/\n\n    },\n    /* 22 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFNetworkStream = void 0;\n\n      var _util = __w_pdfjs_require__(1);\n\n      var _network_utils = __w_pdfjs_require__(20);\n\n      ;\n      const OK_RESPONSE = 200;\n      const PARTIAL_CONTENT_RESPONSE = 206;\n\n      function getArrayBuffer(xhr) {\n        const data = xhr.response;\n\n        if (typeof data !== \"string\") {\n          return data;\n        }\n\n        const array = (0, _util.stringToBytes)(data);\n        return array.buffer;\n      }\n\n      class NetworkManager {\n        constructor(url, args) {\n          this.url = url;\n          args = args || {};\n          this.isHttp = /^https?:/i.test(url);\n          this.httpHeaders = this.isHttp && args.httpHeaders || {};\n          this.withCredentials = args.withCredentials || false;\n\n          this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n            return new XMLHttpRequest();\n          };\n\n          this.currXhrId = 0;\n          this.pendingRequests = Object.create(null);\n        }\n\n        requestRange(begin, end, listeners) {\n          const args = {\n            begin,\n            end\n          };\n\n          for (const prop in listeners) {\n            args[prop] = listeners[prop];\n          }\n\n          return this.request(args);\n        }\n\n        requestFull(listeners) {\n          return this.request(listeners);\n        }\n\n        request(args) {\n          const xhr = this.getXhr();\n          const xhrId = this.currXhrId++;\n          const pendingRequest = this.pendingRequests[xhrId] = {\n            xhr\n          };\n          xhr.open(\"GET\", this.url);\n          xhr.withCredentials = this.withCredentials;\n\n          for (const property in this.httpHeaders) {\n            const value = this.httpHeaders[property];\n\n            if (typeof value === \"undefined\") {\n              continue;\n            }\n\n            xhr.setRequestHeader(property, value);\n          }\n\n          if (this.isHttp && \"begin\" in args && \"end\" in args) {\n            xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n            pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n          } else {\n            pendingRequest.expectedStatus = OK_RESPONSE;\n          }\n\n          xhr.responseType = \"arraybuffer\";\n\n          if (args.onError) {\n            xhr.onerror = function (evt) {\n              args.onError(xhr.status);\n            };\n          }\n\n          xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n          xhr.onprogress = this.onProgress.bind(this, xhrId);\n          pendingRequest.onHeadersReceived = args.onHeadersReceived;\n          pendingRequest.onDone = args.onDone;\n          pendingRequest.onError = args.onError;\n          pendingRequest.onProgress = args.onProgress;\n          xhr.send(null);\n          return xhrId;\n        }\n\n        onProgress(xhrId, evt) {\n          const pendingRequest = this.pendingRequests[xhrId];\n\n          if (!pendingRequest) {\n            return;\n          }\n\n          if (pendingRequest.onProgress) {\n            pendingRequest.onProgress(evt);\n          }\n        }\n\n        onStateChange(xhrId, evt) {\n          const pendingRequest = this.pendingRequests[xhrId];\n\n          if (!pendingRequest) {\n            return;\n          }\n\n          const xhr = pendingRequest.xhr;\n\n          if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n            pendingRequest.onHeadersReceived();\n            delete pendingRequest.onHeadersReceived;\n          }\n\n          if (xhr.readyState !== 4) {\n            return;\n          }\n\n          if (!(xhrId in this.pendingRequests)) {\n            return;\n          }\n\n          delete this.pendingRequests[xhrId];\n\n          if (xhr.status === 0 && this.isHttp) {\n            if (pendingRequest.onError) {\n              pendingRequest.onError(xhr.status);\n            }\n\n            return;\n          }\n\n          const xhrStatus = xhr.status || OK_RESPONSE;\n          const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n          if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n            if (pendingRequest.onError) {\n              pendingRequest.onError(xhr.status);\n            }\n\n            return;\n          }\n\n          const chunk = getArrayBuffer(xhr);\n\n          if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n            const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n            const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n            pendingRequest.onDone({\n              begin: parseInt(matches[1], 10),\n              chunk\n            });\n          } else if (chunk) {\n            pendingRequest.onDone({\n              begin: 0,\n              chunk\n            });\n          } else if (pendingRequest.onError) {\n            pendingRequest.onError(xhr.status);\n          }\n        }\n\n        hasPendingRequests() {\n          for (const xhrId in this.pendingRequests) {\n            return true;\n          }\n\n          return false;\n        }\n\n        getRequestXhr(xhrId) {\n          return this.pendingRequests[xhrId].xhr;\n        }\n\n        isPendingRequest(xhrId) {\n          return xhrId in this.pendingRequests;\n        }\n\n        abortAllRequests() {\n          for (const xhrId in this.pendingRequests) {\n            this.abortRequest(xhrId | 0);\n          }\n        }\n\n        abortRequest(xhrId) {\n          const xhr = this.pendingRequests[xhrId].xhr;\n          delete this.pendingRequests[xhrId];\n          xhr.abort();\n        }\n\n      }\n\n      class PDFNetworkStream {\n        constructor(source) {\n          this._source = source;\n          this._manager = new NetworkManager(source.url, {\n            httpHeaders: source.httpHeaders,\n            withCredentials: source.withCredentials\n          });\n          this._rangeChunkSize = source.rangeChunkSize;\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n\n        _onRangeRequestReaderClosed(reader) {\n          const i = this._rangeRequestReaders.indexOf(reader);\n\n          if (i >= 0) {\n            this._rangeRequestReaders.splice(i, 1);\n          }\n        }\n\n        getFullReader() {\n          (0, _util.assert)(!this._fullRequestReader);\n          this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n          return this._fullRequestReader;\n        }\n\n        getRangeReader(begin, end) {\n          const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n          reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n\n          this._rangeRequestReaders.push(reader);\n\n          return reader;\n        }\n\n        cancelAllRequests(reason) {\n          if (this._fullRequestReader) {\n            this._fullRequestReader.cancel(reason);\n          }\n\n          const readers = this._rangeRequestReaders.slice(0);\n\n          readers.forEach(function (reader) {\n            reader.cancel(reason);\n          });\n        }\n\n      }\n\n      exports.PDFNetworkStream = PDFNetworkStream;\n\n      class PDFNetworkStreamFullRequestReader {\n        constructor(manager, source) {\n          this._manager = manager;\n          const args = {\n            onHeadersReceived: this._onHeadersReceived.bind(this),\n            onDone: this._onDone.bind(this),\n            onError: this._onError.bind(this),\n            onProgress: this._onProgress.bind(this)\n          };\n          this._url = source.url;\n          this._fullRequestId = manager.requestFull(args);\n          this._headersReceivedCapability = (0, _util.createPromiseCapability)();\n          this._disableRange = source.disableRange || false;\n          this._contentLength = source.length;\n          this._rangeChunkSize = source.rangeChunkSize;\n\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n\n          this._isStreamingSupported = false;\n          this._isRangeSupported = false;\n          this._cachedChunks = [];\n          this._requests = [];\n          this._done = false;\n          this._storedError = undefined;\n          this._filename = null;\n          this.onProgress = null;\n        }\n\n        _onHeadersReceived() {\n          const fullRequestXhrId = this._fullRequestId;\n\n          const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n          const getResponseHeader = name => {\n            return fullRequestXhr.getResponseHeader(name);\n          };\n\n          const {\n            allowRangeRequests,\n            suggestedLength\n          } = (0, _network_utils.validateRangeRequestCapabilities)({\n            getResponseHeader,\n            isHttp: this._manager.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange\n          });\n\n          if (allowRangeRequests) {\n            this._isRangeSupported = true;\n          }\n\n          this._contentLength = suggestedLength || this._contentLength;\n          this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n          if (this._isRangeSupported) {\n            this._manager.abortRequest(fullRequestXhrId);\n          }\n\n          this._headersReceivedCapability.resolve();\n        }\n\n        _onDone(args) {\n          if (args) {\n            if (this._requests.length > 0) {\n              const requestCapability = this._requests.shift();\n\n              requestCapability.resolve({\n                value: args.chunk,\n                done: false\n              });\n            } else {\n              this._cachedChunks.push(args.chunk);\n            }\n          }\n\n          this._done = true;\n\n          if (this._cachedChunks.length > 0) {\n            return;\n          }\n\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n\n          this._requests = [];\n        }\n\n        _onError(status) {\n          const url = this._url;\n          const exception = (0, _network_utils.createResponseStatusError)(status, url);\n          this._storedError = exception;\n\n          this._headersReceivedCapability.reject(exception);\n\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.reject(exception);\n          });\n\n          this._requests = [];\n          this._cachedChunks = [];\n        }\n\n        _onProgress(data) {\n          if (this.onProgress) {\n            this.onProgress({\n              loaded: data.loaded,\n              total: data.lengthComputable ? data.total : this._contentLength\n            });\n          }\n        }\n\n        get filename() {\n          return this._filename;\n        }\n\n        get isRangeSupported() {\n          return this._isRangeSupported;\n        }\n\n        get isStreamingSupported() {\n          return this._isStreamingSupported;\n        }\n\n        get contentLength() {\n          return this._contentLength;\n        }\n\n        get headersReady() {\n          return this._headersReceivedCapability.promise;\n        }\n\n        async read() {\n          if (this._storedError) {\n            throw this._storedError;\n          }\n\n          if (this._cachedChunks.length > 0) {\n            const chunk = this._cachedChunks.shift();\n\n            return {\n              value: chunk,\n              done: false\n            };\n          }\n\n          if (this._done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n\n          const requestCapability = (0, _util.createPromiseCapability)();\n\n          this._requests.push(requestCapability);\n\n          return requestCapability.promise;\n        }\n\n        cancel(reason) {\n          this._done = true;\n\n          this._headersReceivedCapability.reject(reason);\n\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n\n          this._requests = [];\n\n          if (this._manager.isPendingRequest(this._fullRequestId)) {\n            this._manager.abortRequest(this._fullRequestId);\n          }\n\n          this._fullRequestReader = null;\n        }\n\n      }\n\n      class PDFNetworkStreamRangeRequestReader {\n        constructor(manager, begin, end) {\n          this._manager = manager;\n          const args = {\n            onDone: this._onDone.bind(this),\n            onProgress: this._onProgress.bind(this)\n          };\n          this._requestId = manager.requestRange(begin, end, args);\n          this._requests = [];\n          this._queuedChunk = null;\n          this._done = false;\n          this.onProgress = null;\n          this.onClosed = null;\n        }\n\n        _close() {\n          if (this.onClosed) {\n            this.onClosed(this);\n          }\n        }\n\n        _onDone(data) {\n          const chunk = data.chunk;\n\n          if (this._requests.length > 0) {\n            const requestCapability = this._requests.shift();\n\n            requestCapability.resolve({\n              value: chunk,\n              done: false\n            });\n          } else {\n            this._queuedChunk = chunk;\n          }\n\n          this._done = true;\n\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n\n          this._requests = [];\n\n          this._close();\n        }\n\n        _onProgress(evt) {\n          if (!this.isStreamingSupported && this.onProgress) {\n            this.onProgress({\n              loaded: evt.loaded\n            });\n          }\n        }\n\n        get isStreamingSupported() {\n          return false;\n        }\n\n        async read() {\n          if (this._queuedChunk !== null) {\n            const chunk = this._queuedChunk;\n            this._queuedChunk = null;\n            return {\n              value: chunk,\n              done: false\n            };\n          }\n\n          if (this._done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n\n          const requestCapability = (0, _util.createPromiseCapability)();\n\n          this._requests.push(requestCapability);\n\n          return requestCapability.promise;\n        }\n\n        cancel(reason) {\n          this._done = true;\n\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n\n          this._requests = [];\n\n          if (this._manager.isPendingRequest(this._requestId)) {\n            this._manager.abortRequest(this._requestId);\n          }\n\n          this._close();\n        }\n\n      }\n      /***/\n\n    },\n    /* 23 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFFetchStream = void 0;\n\n      var _util = __w_pdfjs_require__(1);\n\n      var _network_utils = __w_pdfjs_require__(20);\n\n      function createFetchOptions(headers, withCredentials, abortController) {\n        return {\n          method: \"GET\",\n          headers,\n          signal: abortController && abortController.signal,\n          mode: \"cors\",\n          credentials: withCredentials ? \"include\" : \"same-origin\",\n          redirect: \"follow\"\n        };\n      }\n\n      function createHeaders(httpHeaders) {\n        const headers = new Headers();\n\n        for (const property in httpHeaders) {\n          const value = httpHeaders[property];\n\n          if (typeof value === \"undefined\") {\n            continue;\n          }\n\n          headers.append(property, value);\n        }\n\n        return headers;\n      }\n\n      class PDFFetchStream {\n        constructor(source) {\n          this.source = source;\n          this.isHttp = /^https?:/i.test(source.url);\n          this.httpHeaders = this.isHttp && source.httpHeaders || {};\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n\n        get _progressiveDataLength() {\n          return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n        }\n\n        getFullReader() {\n          (0, _util.assert)(!this._fullRequestReader);\n          this._fullRequestReader = new PDFFetchStreamReader(this);\n          return this._fullRequestReader;\n        }\n\n        getRangeReader(begin, end) {\n          if (end <= this._progressiveDataLength) {\n            return null;\n          }\n\n          const reader = new PDFFetchStreamRangeReader(this, begin, end);\n\n          this._rangeRequestReaders.push(reader);\n\n          return reader;\n        }\n\n        cancelAllRequests(reason) {\n          if (this._fullRequestReader) {\n            this._fullRequestReader.cancel(reason);\n          }\n\n          const readers = this._rangeRequestReaders.slice(0);\n\n          readers.forEach(function (reader) {\n            reader.cancel(reason);\n          });\n        }\n\n      }\n\n      exports.PDFFetchStream = PDFFetchStream;\n\n      class PDFFetchStreamReader {\n        constructor(stream) {\n          this._stream = stream;\n          this._reader = null;\n          this._loaded = 0;\n          this._filename = null;\n          const source = stream.source;\n          this._withCredentials = source.withCredentials || false;\n          this._contentLength = source.length;\n          this._headersCapability = (0, _util.createPromiseCapability)();\n          this._disableRange = source.disableRange || false;\n          this._rangeChunkSize = source.rangeChunkSize;\n\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n\n          if (typeof AbortController !== \"undefined\") {\n            this._abortController = new AbortController();\n          }\n\n          this._isStreamingSupported = !source.disableStream;\n          this._isRangeSupported = !source.disableRange;\n          this._headers = createHeaders(this._stream.httpHeaders);\n          const url = source.url;\n          fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n            if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n              throw (0, _network_utils.createResponseStatusError)(response.status, url);\n            }\n\n            this._reader = response.body.getReader();\n\n            this._headersCapability.resolve();\n\n            const getResponseHeader = name => {\n              return response.headers.get(name);\n            };\n\n            const {\n              allowRangeRequests,\n              suggestedLength\n            } = (0, _network_utils.validateRangeRequestCapabilities)({\n              getResponseHeader,\n              isHttp: this._stream.isHttp,\n              rangeChunkSize: this._rangeChunkSize,\n              disableRange: this._disableRange\n            });\n            this._isRangeSupported = allowRangeRequests;\n            this._contentLength = suggestedLength || this._contentLength;\n            this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n            if (!this._isStreamingSupported && this._isRangeSupported) {\n              this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n            }\n          }).catch(this._headersCapability.reject);\n          this.onProgress = null;\n        }\n\n        get headersReady() {\n          return this._headersCapability.promise;\n        }\n\n        get filename() {\n          return this._filename;\n        }\n\n        get contentLength() {\n          return this._contentLength;\n        }\n\n        get isRangeSupported() {\n          return this._isRangeSupported;\n        }\n\n        get isStreamingSupported() {\n          return this._isStreamingSupported;\n        }\n\n        async read() {\n          await this._headersCapability.promise;\n          const {\n            value,\n            done\n          } = await this._reader.read();\n\n          if (done) {\n            return {\n              value,\n              done\n            };\n          }\n\n          this._loaded += value.byteLength;\n\n          if (this.onProgress) {\n            this.onProgress({\n              loaded: this._loaded,\n              total: this._contentLength\n            });\n          }\n\n          const buffer = new Uint8Array(value).buffer;\n          return {\n            value: buffer,\n            done: false\n          };\n        }\n\n        cancel(reason) {\n          if (this._reader) {\n            this._reader.cancel(reason);\n          }\n\n          if (this._abortController) {\n            this._abortController.abort();\n          }\n        }\n\n      }\n\n      class PDFFetchStreamRangeReader {\n        constructor(stream, begin, end) {\n          this._stream = stream;\n          this._reader = null;\n          this._loaded = 0;\n          const source = stream.source;\n          this._withCredentials = source.withCredentials || false;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          this._isStreamingSupported = !source.disableStream;\n\n          if (typeof AbortController !== \"undefined\") {\n            this._abortController = new AbortController();\n          }\n\n          this._headers = createHeaders(this._stream.httpHeaders);\n\n          this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n          const url = source.url;\n          fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n            if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n              throw (0, _network_utils.createResponseStatusError)(response.status, url);\n            }\n\n            this._readCapability.resolve();\n\n            this._reader = response.body.getReader();\n          });\n          this.onProgress = null;\n        }\n\n        get isStreamingSupported() {\n          return this._isStreamingSupported;\n        }\n\n        async read() {\n          await this._readCapability.promise;\n          const {\n            value,\n            done\n          } = await this._reader.read();\n\n          if (done) {\n            return {\n              value,\n              done\n            };\n          }\n\n          this._loaded += value.byteLength;\n\n          if (this.onProgress) {\n            this.onProgress({\n              loaded: this._loaded\n            });\n          }\n\n          const buffer = new Uint8Array(value).buffer;\n          return {\n            value: buffer,\n            done: false\n          };\n        }\n\n        cancel(reason) {\n          if (this._reader) {\n            this._reader.cancel(reason);\n          }\n\n          if (this._abortController) {\n            this._abortController.abort();\n          }\n        }\n\n      }\n      /***/\n\n    }\n    /******/\n    ])\n  );\n});","map":{"version":3,"mappings":"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","names":["module","define","exports","root","i","l","modules","__w_pdfjs_require__","Object","enumerable","get","value","bind","key","pdfjsVersion","pdfjsBuild","pdfjsSharedUtil","require","pdfjsDisplayAPI","pdfjsDisplayTextLayer","pdfjsDisplayAnnotationLayer","pdfjsDisplayDisplayUtils","pdfjsDisplaySVG","pdfjsDisplayWorkerOptions","pdfjsDisplayAPICompatibility","isNodeJS","PDFNodeStream","params","PDFNetworkStream","PDFFetchStream","isFetchSupported","url","build","version","getDocument","LoopbackPort","PDFDataRangeTransport","PDFWorker","renderTextLayer","AnnotationLayer","createPromiseCapability","PasswordResponses","InvalidPDFException","MissingPDFException","SVGGraphics","NativeImageDecoding","CMapCompressionType","PermissionFlag","UnexpectedResponseException","OPS","VerbosityLevel","UNSUPPORTED_FEATURES","createValidAbsoluteUrl","createObjectURL","removeNullCharacters","shadow","Util","RenderingCancelledException","getFilenameFromUrl","LinkTarget","addLinkAttributes","loadScript","PDFDateString","GlobalWorkerOptions","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","NONE","DECODE","DISPLAY","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationStateModelType","MARKED","REVIEW","AnnotationMarkedState","UNMARKED","AnnotationReviewState","ACCEPTED","REJECTED","CANCELLED","COMPLETED","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","StreamType","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","FontType","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","INFOS","BINARY","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","Number","level","console","msg","cond","unreachable","base","baseUrl","origin","other","protocol","absoluteUrl","_isValidProtocol","configurable","writable","BaseException","message","name","Error","constructor","code","details","status","NullCharactersRegExp","warn","str","assert","bytes","length","MAX_ARGUMENT_COUNT","String","strBuf","chunkEnd","Math","chunk","arr","undefined","byteLength","Uint8Array","resultLength","arrayByteLength","pos","data","item","stringToBytes","itemLength","buffer8","view32","buffer","IsLittleEndianCached","isLittleEndian","IsEvalSupportedCached","isEvalSupported","rgbBuf","r","g","b","m1","m2","xt","p","m","yt","d","p1","p2","p3","p4","v","transpose","a","c","first","second","sx","sy","rect","orderedX","rect1","rect2","compare","orderedY","result","PDFStringTranslateTable","decodeURIComponent","escape","unescape","encodeURIComponent","arr1","arr2","element","index","capability","isSettled","resolve","reject","reason","digits","forceDataSchema","URL","blob","type","contentType","ii","b1","b2","b3","d1","d2","d3","d4","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","createPDFNetworkStream","pdfNetworkStreamFactory","task","PDFDocumentLoadingTask","source","src","isArrayBuffer","range","rangeTransport","worker","window","location","href","pdfBytes","isNaN","_display_utils","NativeImageDecoderValues","_util","nativeImageDecoderSupport","apiCompatibilityParams","maxImageSize","disableFontFace","disableRange","disableStream","disableAutoFetch","disableCreateObjectURL","setVerbosityLevel","workerParams","port","workerPort","docId","destroyed","_fetchDocument","networkStream","initialData","progressiveDone","httpHeaders","withCredentials","rangeChunkSize","messageHandler","postMessageTransfers","transport","Promise","pdfDataRangeTransport","apiVersion","password","docBaseUrl","ignoreErrors","workerId","nextDocumentId","promise","destroy","transportDestroyed","_transport","_worker","then","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","_rangeListeners","onDataProgress","_progressListeners","total","onDataProgressiveRead","_progressiveReadListeners","onDataProgressiveDone","_progressiveDoneListeners","transportReady","requestDataRange","abort","pdfInfo","numPages","fingerprint","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getOpenActionDestination","deprecated","openAction","getAttachments","getJavaScript","getOutline","getPermissions","getMetadata","getData","getDownloadInfo","getStats","cleanup","startCleanup","loadingParams","loadingTask","pdfBug","pageIndex","pageInfo","commonObjs","PDFObjects","rotate","userUnit","view","getViewport","scale","rotation","offsetX","offsetY","dontFlip","arguments","viewBox","getAnnotations","intent","annotationsPromise","_pageIndex","render","canvasContext","viewport","enableWebGL","renderInteractiveForms","imageLayer","canvasFactory","background","_stats","renderingIntent","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","webGLContext","enable","displayReadyCapability","fnArray","argsArray","lastChunk","complete","error","internalRenderTask","_tryCleanup","callback","objs","operatorList","useRequestAnimationFrame","_pdfBug","renderTasks","renderTask","transparency","pendingCleanup","operatorListChanged","getOperatorList","opListTask","opListReadCapability","streamTextContent","normalizeWhitespace","disableCombineTextItems","TEXT_CONTENT_CHUNK_SIZE","combineTextItems","highWaterMark","size","textContent","getTextContent","readableStream","reader","done","styles","items","pump","getReader","_destroy","waitOn","force","renderCompleted","cancel","clear","resetStats","intentStates","_startRenderPage","_renderPageChunk","operatorListChunk","_pumpOperatorList","args","_abortOperatorList","streamReader","setTimeout","defer","postMessage","cloned","transferable","transfers","byteOffset","Array","desc","cloneValue","_defer","obj","WeakMap","e","addEventListener","removeEventListener","terminate","pdfWorkerPorts","isWorkerDisabled","fallbackWorkerSrc","nextFakeWorkerId","fakeWorkerCapability","document","pdfjsFilePath","workerSrc","_is_node","mainWorkerMessageHandler","globalThis","WorkerMessageHandler","loader","getMainThreadWorkerMessageHandler","eval","getWorkerSrc","wrapper","_initialize","_port","_messageHandler","_initializeFromPort","isSameOrigin","createCDNWrapper","terminateEarly","onWorkerError","_setupFakeWorker","_webWorker","supportTransfers","sendTest","testObj","info","setupFakeWorkerGlobal","workerHandler","onUnsupportedFeature","CMapReaderFactory","cMapUrl","isCompressed","cMapPacked","setupMessageHandler","destroyCapability","_passwordCapability","page","terminated","_networkStream","getFullReader","evt","loaded","sink","close","headersCapability","fullReader","_fullReader","isStreamingSupported","isRangeSupported","onProgress","_lastProgress","contentLength","rangeReader","begin","end","ex","exception","onPassword","updatePassword","_params","exportedData","exportedError","fontRegistry","enabled","registerFont","pageProxy","img","Image","releaseImageResources","imageData","MAX_IMAGE_SIZE_TO_STORE","components","width","height","rgbaLength","buf","tmpCanvas","tmpCtx","j","imageUrl","fetched","builtInCMap","_onUnsupportedFeature","featureId","_numPages","pagePromises","results","metadata","contentDispositionFilename","filename","cleanupSuccessful","_ensureObj","objId","resolved","has","_objs","InternalRenderTask","canvasInRendering","WeakSet","canvas","initializeGraphics","cancelled","_canvas","StepperManager","getNextBreakPoint","graphicsReadyCallback","gfx","endDrawing","graphicsReady","_continueBound","stepper","running","_continue","onContinue","_scheduleNextBound","_scheduleNext","_useRequestAnimationFrame","operatorListIdx","DEFAULT_LINK_REL","SVG_NS","create","context","reset","canvasAndContext","compressionType","isValidFetchUrl","baseURI","fetch","response","ok","statusText","cMapData","arrayBuffer","text","request","XMLHttpRequest","DONE","responseText","svg","createElement","centerX","centerY","rotateD","rotateA","rotateB","rotateC","offsetCanvasY","offsetCanvasX","clone","slice","convertToViewportPoint","convertToViewportRectangle","topLeft","bottomRight","convertToPdfPoint","SELF","BLANK","PARENT","TOP","target","rel","urlNullRemoved","link","targetStr","anchor","query","time","started","Date","now","timeEnd","start","toString","outBuf","longest","times","duration","Response","prototype","script","documentElement","appendChild","revokeObjectURL","pdfDateStringRegex","isString","input","matches","year","parseInt","month","day","hour","minute","universalTimeRelation","offsetHour","offsetMinute","BaseFontLoader","addNativeFontFace","nativeFontFace","insertRule","styleElement","styleSheet","sheet","remove","missingFile","isFontLoadingAPISupported","createNativeFontFace","family","rule","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","supported","fonts","_prepareFontLoadEvent","FontLoader","requests","nextRequestId","navigator","userAgent","otherRequest","shift","loadingContext","completeRequest","getLoadTestFont","atob","offset","chunk1","s","chunk2","ctx","called","isFontReady","loadTestFontId","_loadTestFont","COMMENT_OFFSET","spliceString","CFF_CHECKSUM_OFFSET","XXXX_VALUE","checksum","int32","string32","btoa","names","loadedName","div","span","translatedData","bytesToString","mimetype","getPathGenerator","character","current","cmds","js","cmd","compatibilityParams","isIE","isIOSChrome","process","MIN_FONT_SIZE","MAX_FONT_SIZE","MAX_GROUP_SIZE","MIN_WIDTH_FACTOR","COMPILE_TYPE3_GLYPHS","MAX_SIZE_TO_COMPILE","FULL_CHUNK_HEIGHT","mozCurrentTransform","translate","setTransform","_transformMatrix","f","ad_bc","bc_ad","old","_originalSave","prev","pop","_originalRestore","y","x","cosValue","angle","sinValue","CachedCanvases","getCanvas","canvasEntry","addContextCurrentTransform","cache","POINT_TO_PROCESS_LIMIT","imgData","width1","points","POINT_TYPES","lineSize","data0","mask","elem","count","j0","sum","steps","outlines","coords","p0","pp","step","drawOutline","beginPath","o","jj","CanvasExtraState","setCurrentPoint","CanvasGraphics","EXECUTION_TIME","EXECUTION_STEPS","canvasCtx","ImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","srcPos","destPos","dest","elemsInThisChunk","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","thisChunkHeight","srcDiff","k","kEnd","kEndUnrolled","srcByte","kind","properties","property","sourceCtx","destCtx","getLineDash","lineDashOffset","alpha","r0","g0","b0","alpha_","maskData","transferMap","layerData","hasBackdrop","backdrop","composeFn","subtype","composeSMaskLuminosity","composeSMaskAlpha","PIXELS_TO_PROCESS","chunkSize","row","chunkHeight","maskCtx","layerCtx","composeSMaskBackdrop","isEnabled","composed","layer","genericComposeSMask","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","beginDrawing","transparentCanvas","resetCtxToDefault","beginLayout","executeOperatorList","executionStartIdx","argsArrayLen","chunkOperations","endTime","fnId","nextBreakPoint","continueCallback","objsPool","depObjId","endSMaskGroup","compositeCtx","endLayout","style","limit","dashArray","dashPhase","states","state","activeSMask","suspendSMaskGroup","beginSMaskGroup","drawnWidth","drawnHeight","cacheId","groupLevel","scratchCanvas","currentCtx","currentTransform","groupCtx","scaleY","mozCurrentTransformInverse","copyCtxState","composeSMask","deltaTransform","resumeSMaskGroup","resumeSMaskCtx","ops","getSinglePixelWidth","xw","yh","consumePath","strokeColor","strokeAlpha","lineWidth","fillAlpha","fillColor","isPatternFill","patternFill","needRestore","baseTransform","pendingEOFill","paths","pendingTextPaths","path","fontSize","spacing","leading","fontObj","fontRefName","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","mode","rise","paintChar","textRenderingMode","fontSizeScale","fillStrokeMode","isAddToPathSet","addToPath","patternTransform","glyphs","charSpacing","wordSpacing","fontDirection","textHScale","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","textMatrix","textRise","textMatrixScale","glyph","isNum","restoreNeeded","fontChar","accent","scaledAccentY","vy","vmetric","vx","scaledX","scaledY","measuredWidth","isFontSubpixelAAEnabled","characterScaleX","scaledAccentX","charWidth","showType3Text","fontMatrix","isTextInvisible","spacingLength","operatorListId","transformed","urx","llx","ury","lly","getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","getShadingPatternFromIR","patternIR","inv","bl","br","ul","ur","x0","y0","x1","y1","matrix","bbox","group","isolated","knockout","bounds","canvasBounds","scaleX","startTransformInverse","domImage","h","position","left","top","w","processingType3","compileType3Glyph","compiled","maskCanvas","putBinaryImageMask","positions","images","image","map","widthScale","heightScale","HTMLElement","imgToPaint","putBinaryImageData","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","entry","pendingClip","inverse","_cachedGetSinglePixelWidth","getCanvasPosition","op","ShadingIRs","region","Path2D","fromIR","raw","colorStops","r1","getPattern","applyBoundingBox","grad","createMeshCanvas","colors","rowSize","tmp","c1","c2","c3","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","maxY","cab","cbb","xa","car","cag","xb","cbr","cbg","x1_","x2_","ps","figure","cs","verticesPerRow","rows","cols","q","drawTriangle","EXPECTED_SCALE","MAX_PATTERN_SIZE","BORDER_SIZE","boundsWidth","boundsHeight","combinesScale","paddedWidth","paddedHeight","backgroundColor","figures","cachedCanvases","drawFigure","owner","matrixScale","temporaryPatternCanvas","shadingIR","TilingPattern","PaintType","COLORED","UNCOLORED","createPatternCanvas","xstep","ystep","paintType","tilingType","curMatrixScale","combinedScale","dimx","dimy","graphics","getSizeAndScale","maxSize","realOutputSize","clipBbox","bboxWidth","bboxHeight","setFillAndStrokeStyleToContext","fillStyle","strokeStyle","cssColor","CallbackKind","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","sourceName","targetName","comObj","event","stream","callbackId","wrapReason","action","streamId","_onComObjOnMessage","on","ah","actionHandler","actionName","handler","send","sendWithPromise","sendWithStream","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","queueingStrategy","_createStreamSink","self","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","onPull","onCancel","ready","success","_processStreamMessage","_postMessage","parser","_xml_parser","xmlDocument","Map","_repair","codes","chars","substring","_parse","rdf","firstChild","nextSibling","nodeName","hasChildNodes","children","childNodes","toLowerCase","trim","getAll","_metadataMap","XMLParserErrorCode","NoError","EndOfDocument","UnterminatedCdat","UnterminatedXmlDeclaration","UnterminatedDoctypeDeclaration","UnterminatedComment","MalformedElement","OutOfMemory","UnterminatedAttributeValue","UnterminatedElement","ElementNeverBegun","ch","isWhitespace","_resolveEntities","entity","_parseContent","attributes","skipWs","attrName","attrValue","attrEndChar","attrEndIndex","parsed","_parseProcessingInstruction","attrStart","parseXml","ch2","pi","q2","complexDoctype","doctypeContent","content","onResolveEntity","onPi","onComment","onCdata","onDoctype","onText","onBeginElement","onEndElement","onError","nodeValue","child","parseFromString","_currentFragment","isWhitespaceString","node","lastElement","_onProgressiveDone","_onReceiveData","_fullRequestReader","found","_loaded","_onProgress","firstReader","_removeRangeReader","queuedChunks","_queuedChunks","_progressiveDone","getRangeReader","_progressiveDataLength","cancelAllRequests","readers","_enqueue","_done","requestCapability","_headersReady","_filename","_isRangeSupported","_isStreamingSupported","_contentLength","requestsCapability","_queuedChunk","_enabled","WebGLUtils","tryInitGL","drawFigures","shader","gl","shaderType","COMPILE_STATUS","errorMsg","loadShader","VERTEX_SHADER","FRAGMENT_SHADER","program","createProgram","shaders","linked","LINK_STATUS","textureId","texture","createTexture","CLAMP_TO_EDGE","NEAREST","currentCanvas","currentGL","premultipliedalpha","smaskVertexShaderCode","smaskFragmentShaderCode","smaskCache","generateGL","vertexShader","createVertexShader","fragmentShader","createFragmentShader","texCoordLocation","texLayerLocation","texMaskLocation","texCoordBuffer","createBuffer","STATIC_DRAW","initSmaskGL","drawingBufferHeight","TEXTURE0","maskTexture","TEXTURE1","positionLocation","BLEND","ONE_MINUS_SRC_ALPHA","COLOR_BUFFER_BIT","flush","figuresVertexShaderCode","figuresFragmentShaderCode","figuresCache","initFiguresGL","coordsMap","colorsMap","pIndex","cIndex","col","coordsBuffer","colorsBuffer","colorLocation","MAX_TEXT_DIVS_TO_RENDER","NonWhitespaceRegexp","textDiv","textDivProperties","canvasWidth","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","isAllWhitespace","geom","tx","fontName","fontHeight","fontAscent","ascent","descent","fontFamily","_fontInspectorEnabled","PI","_textContentStream","_enhanceTextSelection","angleCos","angleSin","divWidth","divHeight","right","bottom","_canceled","textDivs","_textDivs","_capability","textDivsLength","_bounds","_viewport","expanded","expandBounds","divProperties","ts","t","findPositiveMin","boxScale","boxes","box","x1New","x2New","expandBoundsLTR","fakeBoundary","Infinity","horizon","boundary","affectedBoundary","maxXNew","horizonPart","xNew","changedHorizon","lastBoundary","useBoundary","used","textContentStream","container","textContentItemsStr","enhanceTextSelection","_layoutTextCtx","TextLayerRenderTask","_reader","_renderTimer","_processItems","len","appendText","styleCache","_layoutText","_layoutTextLastFontFamily","_render","_textContent","textItems","textStyles","timeout","expandTextDivs","_renderingDone","expand","transformBuf","paddingBuf","divProps","renderParameters","parameters","annotationType","fieldType","radioButton","checkBox","isRenderable","ignoreBorder","linkService","downloadManager","imageResourcesPath","svgFactory","_createContainer","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","_createPopup","trigger","popupElement","title","modificationDate","contents","hideWrapper","popup","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindLink","destination","_bindNamedAction","JSON","hasPopup","hasAppearance","fieldValue","TEXT_ALIGNMENT","multiLine","readOnly","maxLen","comb","fieldWidth","combWidth","textAlignment","_setTextStyle","fieldName","buttonValue","selectElement","combo","multiSelect","options","optionElement","option","displayValue","exportValue","IGNORE_TYPES","parentType","selector","parentId","parentElement","parentLeft","parseFloat","parentWidth","BACKGROUND_ENLIGHT","dateObject","date","toLocaleDateString","toLocaleTimeString","_formatContents","lines","line","_toggle","pinned","_show","pin","_hide","unpin","borderWidth","square","circle","containerClassName","vertices","coordinate","polyline","svgElementName","inkLists","file","eventBus","stringToPDFString","_download","sortedAnnotations","popupAnnotations","annotations","AnnotationElementFactory","SVG_DEFAULTS","fontStyle","fontWeight","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","crc","body","crc32","deflateSyncUncompressed","literals","Buffer","output","__non_webpack_require__","maxBlockLength","deflateBlocks","idat","adler","adler32","colorType","bitDepth","offsetLiterals","offsetBytes","isMask","ihdr","deflateSync","pngLength","writePngChunk","encode","opTree","opListElement","fn","pf","clipCount","maskCount","shadingCount","SVGExtraState","transformMatrix","loadDependencies","dependencies","getSVG","svgElement","convertOpList","operatorIdMapping","_operatorIdMapping","opList","opListToTree","executeOpTree","opTreeElement","tspan","isInFont","lineWidthScale","pm","txtElement","addFontStyle","cssStyle","setStrokeAlpha","setFillAlpha","_makeColorN_Pattern","_makeTilingPattern","tilingId","txstep","xscale","tystep","yscale","tiling","tx1","tx0","ty1","ty0","_makeShadingPattern","shadingId","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","stop","colorStop","clipId","clipPath","clipElement","activeClipUrl","_setStrokeAttributes","miterLimit","lineCap","lineJoin","imgObj","imgEl","imgSrc","cliprect","maskId","definitions","rootGroup","_ensureClipGroup","clipGroup","_ensureTransformGroup","tgrp","fs","http","https","fileUriRegex","parsedUrl","sourceUrl","host","parseUrl","_rangeChunkSize","_disableRange","_storedError","read","_readableStream","_error","_setReadableStream","auth","hostname","method","headers","handleResponse","_url","getResponseHeader","allowRangeRequests","suggestedLength","isHttp","extractFilenameFromHeader","createRequestOptions","stat","returnValues","contentEncoding","contentDisposition","getFilenameFromContentDispositionHeader","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","flags","decoder","fatal","encoding","textdecode","match","iter","n","parts","part","quotindex","encodingend","extvalue","langvalue","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","xhr","array","requestRange","listeners","prop","requestFull","getXhr","xhrId","currXhrId","pendingRequest","onHeadersReceived","onDone","onStateChange","pendingRequests","xhrStatus","ok_response_on_range_request","expectedStatus","getArrayBuffer","rangeHeader","hasPendingRequests","getRequestXhr","isPendingRequest","abortAllRequests","abortRequest","_onRangeRequestReaderClosed","_manager","_source","manager","_onHeadersReceived","fullRequestXhrId","_fullRequestId","fullRequestXhr","_onDone","_onError","createResponseStatusError","_close","onClosed","_requestId","signal","abortController","credentials","redirect","Headers","AbortController","createHeaders","createFetchOptions","validateResponseStatus","_abortController"],"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/shared/compatibility.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/api_compatibility.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/xml_parser.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/webgl.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __w_pdfjs_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__w_pdfjs_require__.m = modules;\n\n \t// expose the module cache\n \t__w_pdfjs_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__w_pdfjs_require__.d = function(exports, name, getter) {\n \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__w_pdfjs_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__w_pdfjs_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __w_pdfjs_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__w_pdfjs_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __w_pdfjs_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__w_pdfjs_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__w_pdfjs_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable no-unused-vars */\n\n\"use strict\";\n\nvar pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\nvar pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nvar pdfjsSharedUtil = require(\"./shared/util.js\");\nvar pdfjsDisplayAPI = require(\"./display/api.js\");\nvar pdfjsDisplayTextLayer = require(\"./display/text_layer.js\");\nvar pdfjsDisplayAnnotationLayer = require(\"./display/annotation_layer.js\");\nvar pdfjsDisplayDisplayUtils = require(\"./display/display_utils.js\");\nvar pdfjsDisplaySVG = require(\"./display/svg.js\");\nconst pdfjsDisplayWorkerOptions = require(\"./display/worker_options.js\");\nconst pdfjsDisplayAPICompatibility = require(\"./display/api_compatibility.js\");\n\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const { isNodeJS } = require(\"./shared/is_node.js\");\n  if (isNodeJS) {\n    const PDFNodeStream = require(\"./display/node_stream.js\").PDFNodeStream;\n    pdfjsDisplayAPI.setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n    let PDFFetchStream;\n    if (pdfjsDisplayDisplayUtils.isFetchSupported()) {\n      PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n    }\n    pdfjsDisplayAPI.setPDFNetworkStreamFactory(params => {\n      if (\n        PDFFetchStream &&\n        pdfjsDisplayDisplayUtils.isValidFetchUrl(params.url)\n      ) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n} else if (PDFJSDev.test(\"CHROME\")) {\n  const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n  let PDFFetchStream;\n  const isChromeWithFetchCredentials = function() {\n    // fetch does not include credentials until Chrome 61.0.3138.0 and later.\n    // https://chromium.googlesource.com/chromium/src/+/2e231cf052ca5e68e22baf0008ac9e5e29121707\n    try {\n      // Indexed properties on window are read-only in Chrome 61.0.3151.0+\n      // https://chromium.googlesource.com/chromium/src.git/+/58ab4a971b06dec13e4edf9de8382ca6847f6190\n      window[999] = 123; // should throw. Note: JS strict mode MUST be enabled.\n      delete window[999];\n      return false;\n    } catch (e) {\n      return true;\n    }\n  };\n  if (\n    pdfjsDisplayDisplayUtils.isFetchSupported() &&\n    isChromeWithFetchCredentials()\n  ) {\n    PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n  }\n  pdfjsDisplayAPI.setPDFNetworkStreamFactory(params => {\n    if (\n      PDFFetchStream &&\n      pdfjsDisplayDisplayUtils.isValidFetchUrl(params.url)\n    ) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n}\n\nexports.build = pdfjsDisplayAPI.build;\nexports.version = pdfjsDisplayAPI.version;\nexports.getDocument = pdfjsDisplayAPI.getDocument;\nexports.LoopbackPort = pdfjsDisplayAPI.LoopbackPort;\nexports.PDFDataRangeTransport = pdfjsDisplayAPI.PDFDataRangeTransport;\nexports.PDFWorker = pdfjsDisplayAPI.PDFWorker;\nexports.renderTextLayer = pdfjsDisplayTextLayer.renderTextLayer;\nexports.AnnotationLayer = pdfjsDisplayAnnotationLayer.AnnotationLayer;\nexports.createPromiseCapability = pdfjsSharedUtil.createPromiseCapability;\nexports.PasswordResponses = pdfjsSharedUtil.PasswordResponses;\nexports.InvalidPDFException = pdfjsSharedUtil.InvalidPDFException;\nexports.MissingPDFException = pdfjsSharedUtil.MissingPDFException;\nexports.SVGGraphics = pdfjsDisplaySVG.SVGGraphics;\nexports.NativeImageDecoding = pdfjsSharedUtil.NativeImageDecoding;\nexports.CMapCompressionType = pdfjsSharedUtil.CMapCompressionType;\nexports.PermissionFlag = pdfjsSharedUtil.PermissionFlag;\nexports.UnexpectedResponseException =\n  pdfjsSharedUtil.UnexpectedResponseException;\nexports.OPS = pdfjsSharedUtil.OPS;\nexports.VerbosityLevel = pdfjsSharedUtil.VerbosityLevel;\nexports.UNSUPPORTED_FEATURES = pdfjsSharedUtil.UNSUPPORTED_FEATURES;\nexports.createValidAbsoluteUrl = pdfjsSharedUtil.createValidAbsoluteUrl;\nexports.createObjectURL = pdfjsSharedUtil.createObjectURL;\nexports.removeNullCharacters = pdfjsSharedUtil.removeNullCharacters;\nexports.shadow = pdfjsSharedUtil.shadow;\nexports.Util = pdfjsSharedUtil.Util;\nexports.RenderingCancelledException =\n  pdfjsDisplayDisplayUtils.RenderingCancelledException;\nexports.getFilenameFromUrl = pdfjsDisplayDisplayUtils.getFilenameFromUrl;\nexports.LinkTarget = pdfjsDisplayDisplayUtils.LinkTarget;\nexports.addLinkAttributes = pdfjsDisplayDisplayUtils.addLinkAttributes;\nexports.loadScript = pdfjsDisplayDisplayUtils.loadScript;\nexports.PDFDateString = pdfjsDisplayDisplayUtils.PDFDateString;\nexports.GlobalWorkerOptions = pdfjsDisplayWorkerOptions.GlobalWorkerOptions;\nexports.apiCompatibilityParams =\n  pdfjsDisplayAPICompatibility.apiCompatibilityParams;\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\nconst NativeImageDecoding = {\n  NONE: \"none\",\n  DECODE: \"decode\",\n  DISPLAY: \"display\",\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  font: \"font\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the whitelisted protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\nconst BaseException = (function BaseExceptionClosure() {\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined);\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array} arr - the array of the arrays (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n\nclass Util {\n  // makeCssRgb() can be called thousands of times. Using ´rgbBuf` avoids\n  // creating many intermediate strings.\n  static makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join(\"\");\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\n// prettier-ignore\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isEmptyObj(obj) {\n  for (const key in obj) {\n    return false;\n  }\n  return true;\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  return arr1.every(function(element, index) {\n    return element === arr2[index];\n  });\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function(resolve, reject) {\n    capability.resolve = function(data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function(reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nconst createObjectURL = (function createObjectURLClosure() {\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  return function createObjectURL(data, contentType, forceDataSchema = false) {\n    if (!forceDataSchema && URL.createObjectURL) {\n      const blob = new Blob([data], { type: contentType });\n      return URL.createObjectURL(blob);\n    }\n\n    let buffer = `data:${contentType};base64,`;\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n        d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n})();\n\nexport {\n  BaseException,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  OPS,\n  VerbosityLevel,\n  UNSUPPORTED_FEATURES,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  FontType,\n  ImageKind,\n  CMapCompressionType,\n  AbortException,\n  InvalidPDFException,\n  MissingPDFException,\n  NativeImageDecoding,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  StreamType,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  Util,\n  FormatError,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  bytesToString,\n  createPromiseCapability,\n  createObjectURL,\n  getVerbosityLevel,\n  info,\n  isArrayBuffer,\n  isArrayEqual,\n  isBool,\n  isEmptyObj,\n  isNum,\n  isString,\n  isSameOrigin,\n  createValidAbsoluteUrl,\n  IsLittleEndianCached,\n  IsEvalSupportedCached,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  utf8StringToString,\n  warn,\n  unreachable,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\n// Skip compatibility checks for modern builds (unless we're running the\n// unit-tests in Node.js/Travis) and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!SKIP_BABEL || (LIB && TESTING)\")) &&\n  (typeof globalThis === \"undefined\" || !globalThis._pdfjsCompatibilityChecked)\n) {\n  // Provides support for globalThis in legacy browsers.\n  // Support: IE11/Edge, Opera\n  if (typeof globalThis === \"undefined\" || globalThis.Math !== Math) {\n    // eslint-disable-next-line no-global-assign\n    globalThis = require(\"core-js/es/global-this\");\n  }\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  const { isNodeJS } = require(\"./is_node.js\");\n\n  const hasDOM = typeof window === \"object\" && typeof document === \"object\";\n  const userAgent =\n    (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n  const isIE = /Trident/.test(userAgent);\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function(chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function(input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Provides support for ChildNode.remove in legacy browsers.\n  // Support: IE.\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== \"undefined\") {\n      return;\n    }\n    Element.prototype.remove = function() {\n      if (this.parentNode) {\n        // eslint-disable-next-line mozilla/avoid-removeChild\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.{add, remove}, with more than\n  // one parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListAddRemove() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    div.classList.add(\"testOne\", \"testTwo\");\n\n    if (\n      div.classList.contains(\"testOne\") === true &&\n      div.classList.contains(\"testTwo\") === true\n    ) {\n      return;\n    }\n    const OriginalDOMTokenListAdd = DOMTokenList.prototype.add;\n    const OriginalDOMTokenListRemove = DOMTokenList.prototype.remove;\n\n    DOMTokenList.prototype.add = function(...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListAdd.call(this, token);\n      }\n    };\n    DOMTokenList.prototype.remove = function(...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListRemove.call(this, token);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.toggle, with the optional\n  // \"force\" parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListToggle() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    if (div.classList.toggle(\"test\", 0) === false) {\n      return;\n    }\n\n    DOMTokenList.prototype.toggle = function(token) {\n      const force =\n        arguments.length > 1 ? !!arguments[1] : !this.contains(token);\n      return this[force ? \"add\" : \"remove\"](token), force;\n    };\n  })();\n\n  // Provides support for window.history.{pushState, replaceState}, with the\n  // `url` parameter set to `undefined`, without breaking the document URL.\n  // Support: IE\n  (function checkWindowHistoryPushStateReplaceState() {\n    if (!hasDOM || !isIE) {\n      return;\n    }\n    const OriginalPushState = window.history.pushState;\n    const OriginalReplaceState = window.history.replaceState;\n\n    window.history.pushState = function(state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalPushState.apply(this, args);\n    };\n    window.history.replaceState = function(state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalReplaceState.apply(this, args);\n    };\n  })();\n\n  // Provides support for String.prototype.startsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringStartsWith() {\n    if (String.prototype.startsWith) {\n      return;\n    }\n    require(\"core-js/es/string/starts-with.js\");\n  })();\n\n  // Provides support for String.prototype.endsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringEndsWith() {\n    if (String.prototype.endsWith) {\n      return;\n    }\n    require(\"core-js/es/string/ends-with.js\");\n  })();\n\n  // Provides support for String.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringIncludes() {\n    if (String.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/string/includes.js\");\n  })();\n\n  // Provides support for Array.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<47\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/array/includes.js\");\n  })();\n\n  // Provides support for Array.from in legacy browsers.\n  // Support: IE\n  (function checkArrayFrom() {\n    if (Array.from) {\n      return;\n    }\n    require(\"core-js/es/array/from.js\");\n  })();\n\n  // Provides support for Object.assign in legacy browsers.\n  // Support: IE\n  (function checkObjectAssign() {\n    if (Object.assign) {\n      return;\n    }\n    require(\"core-js/es/object/assign.js\");\n  })();\n\n  // Provides support for Math.log2 in legacy browsers.\n  // Support: IE, Chrome<38\n  (function checkMathLog2() {\n    if (Math.log2) {\n      return;\n    }\n    Math.log2 = require(\"core-js/es/math/log2.js\");\n  })();\n\n  // Provides support for Number.isNaN in legacy browsers.\n  // Support: IE.\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = require(\"core-js/es/number/is-nan.js\");\n  })();\n\n  // Provides support for Number.isInteger in legacy browsers.\n  // Support: IE, Chrome<34\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = require(\"core-js/es/number/is-integer.js\");\n  })();\n\n  // Support: IE, Safari<11, Chrome<63\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise && globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: IE\n  (function checkURL() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders don't use the `URL` constructor, so it\n      // doesn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"GENERIC\")) {\n      // The `URL` constructor is assumed to be available in the extension\n      // builds.\n      return;\n    }\n    globalThis.URL = require(\"core-js/web/url.js\");\n  })();\n\n  // Support: IE, Node.js\n  (function checkReadableStream() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `ReadableStream`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    let isReadableStreamSupported = false;\n\n    if (typeof ReadableStream !== \"undefined\") {\n      // MS Edge may say it has ReadableStream but they are not up to spec yet.\n      try {\n        // eslint-disable-next-line no-new\n        new ReadableStream({\n          start(controller) {\n            controller.close();\n          },\n        });\n        isReadableStreamSupported = true;\n      } catch (e) {\n        // The ReadableStream constructor cannot be used.\n      }\n    }\n    if (isReadableStreamSupported) {\n      return;\n    }\n    globalThis.ReadableStream = require(\"web-streams-polyfill/dist/ponyfill.js\").ReadableStream;\n  })();\n\n  // We want to support Map iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkMapEntries() {\n    if (globalThis.Map && globalThis.Map.prototype.entries) {\n      return;\n    }\n    globalThis.Map = require(\"core-js/es/map/index.js\");\n  })();\n\n  // We want to support Set iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkSetEntries() {\n    if (globalThis.Set && globalThis.Set.prototype.entries) {\n      return;\n    }\n    globalThis.Set = require(\"core-js/es/set/index.js\");\n  })();\n\n  // Support: IE<11, Safari<8, Chrome<36\n  (function checkWeakMap() {\n    if (globalThis.WeakMap) {\n      return;\n    }\n    globalThis.WeakMap = require(\"core-js/es/weak-map/index.js\");\n  })();\n\n  // Support: IE11\n  (function checkWeakSet() {\n    if (globalThis.WeakSet) {\n      return;\n    }\n    globalThis.WeakSet = require(\"core-js/es/weak-set/index.js\");\n  })();\n\n  // Provides support for String.codePointAt in legacy browsers.\n  // Support: IE11.\n  (function checkStringCodePointAt() {\n    if (String.prototype.codePointAt) {\n      return;\n    }\n    require(\"core-js/es/string/code-point-at.js\");\n  })();\n\n  // Provides support for String.fromCodePoint in legacy browsers.\n  // Support: IE11.\n  (function checkStringFromCodePoint() {\n    if (String.fromCodePoint) {\n      return;\n    }\n    String.fromCodePoint = require(\"core-js/es/string/from-code-point.js\");\n  })();\n\n  // Support: IE\n  (function checkSymbol() {\n    if (globalThis.Symbol) {\n      return;\n    }\n    require(\"core-js/es/symbol/index.js\");\n  })();\n\n  // Provides support for String.prototype.padStart in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadStart() {\n    if (String.prototype.padStart) {\n      return;\n    }\n    require(\"core-js/es/string/pad-start.js\");\n  })();\n\n  // Provides support for String.prototype.padEnd in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadEnd() {\n    if (String.prototype.padEnd) {\n      return;\n    }\n    require(\"core-js/es/string/pad-end.js\");\n  })();\n\n  // Provides support for Object.values in legacy browsers.\n  // Support: IE, Chrome<54\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = require(\"core-js/es/object/values.js\");\n  })();\n}\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  NativeImageDecoding,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  loadScript,\n  PageViewport,\n  releaseImageResources,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport { apiCompatibilityParams } from \"./api_compatibility.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { WebGLContext } from \"./webgl.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params The document initialization\n * parameters. The \"url\" key is always present.\n * @returns {IPDFStream}\n */\n\n/** @type IPDFStreamFactory */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates a IPDFStream as an alternative PDF data\n * transport.\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - the factory function\n * that takes document initialization parameters (including a \"url\") and returns\n * an instance of IPDFStream.\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string}     [url] - The URL of the PDF.\n * @property {TypedArray|Array|string} [data] - Binary PDF data. Use typed\n *    arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use atob() to convert it to a binary string first.\n * @property {Object}     [httpHeaders] - Basic authentication headers.\n * @property {boolean}    [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is false.\n * @property {string}     [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number}     [length] - The PDF file length. It's used for\n *   progress reports and range requests operations.\n * @property {PDFDataRangeTransport} [range]\n * @property {number}     [rangeChunkSize] - Specify maximum number of bytes\n *   fetched per range request. The default value is 2^16 = 65536.\n * @property {PDFWorker}  [worker] - The worker that will be used for\n *   the loading and parsing of the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document,\n *   used when attempting to recover valid absolute URLs for annotations, and\n *   outline items, that (incorrectly) only specify relative URLs.\n * @property {string} [nativeImageDecoderSupport] - Strategy for\n *   decoding certain (simple) JPEG images in the browser. This is useful for\n *   environments without DOM image and canvas support, such as e.g. Node.js.\n *   Valid values are 'decode', 'display' or 'none'; where 'decode' is intended\n *   for browsers with full image/canvas support, 'display' for environments\n *   with limited image support through stubs (useful for SVG conversion),\n *   and 'none' where JPEG images will be decoded entirely by PDF.js.\n *   The default value is 'decode'.\n * @property {string} [cMapUrl] - The URL where the predefined\n *   Adobe CMaps are located. Include trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are\n *   binary packed.\n * @property {Object} [CMapReaderFactory] - The factory that will be\n *   used when reading built-in CMap files. Providing a custom factory is useful\n *   for environments without `XMLHttpRequest` support, such as e.g. Node.js.\n *   The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size\n *   in total pixels, i.e. width * height. Images above this value will not be\n *   rendered. Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can eval\n *   strings as JS. Primarily used to improve performance of font rendering,\n *   and when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are\n *   converted to OpenType fonts and loaded via font face rules. If disabled,\n *   fonts will be rendered using a built-in font renderer that constructs the\n *   glyphs with primitive path commands. The default value is `false`.\n * @property {boolean} [disableRange] - Disable range request loading\n *   of PDF files. When enabled, and if the server supports partial content\n *   requests, then the PDF will be fetched in chunks.\n *   The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file\n *   data. By default PDF.js attempts to load PDFs in chunks.\n *   The default value is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF\n *   file data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *   NOTE: It is also necessary to disable streaming, see above,\n *         in order for disabling of pre-fetching to work correctly.\n * @property {boolean} [disableCreateObjectURL] - Disable the use of\n *   `URL.createObjectURL`, for compatibility with older browsers.\n *   The default value is `false`.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging\n *   PDF.js (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * @typedef {Object} PDFDocumentStats\n * @property {Object} streamTypes - Used stream types in the document (an item\n *   is set to true if specific stream ID was used in the document).\n * @property {Object} fontTypes - Used font types in the document (an item\n *   is set to true if specific font ID was used in the document).\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n * NOTE: If a URL is used to fetch the PDF data a standard XMLHttpRequest(XHR)\n * is used, which means it must follow the same origin rules that any XHR does\n * e.g. No cross domain requests without CORS.\n *\n * @param {string|TypedArray|DocumentInitParameters|PDFDataRangeTransport} src\n * Can be a url to where a PDF is located, a typed array (Uint8Array)\n * already populated with data or parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\") {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either Uint8Array, string or a parameter object\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    if (key === \"url\" && typeof window !== \"undefined\") {\n      // The full path is required in the 'url' field.\n      params[key] = new URL(source[key], window.location).href;\n      continue;\n    } else if (key === \"range\") {\n      rangeTransport = source[key];\n      continue;\n    } else if (key === \"worker\") {\n      worker = source[key];\n      continue;\n    } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n      // Converting string or array-like data to Uint8Array.\n      const pdfBytes = source[key];\n      if (typeof pdfBytes === \"string\") {\n        params[key] = stringToBytes(pdfBytes);\n      } else if (\n        typeof pdfBytes === \"object\" &&\n        pdfBytes !== null &&\n        !isNaN(pdfBytes.length)\n      ) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else if (isArrayBuffer(pdfBytes)) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else {\n        throw new Error(\n          \"Invalid PDF binary data: either typed array, \" +\n            \"string or array-like object is expected in the \" +\n            \"data property.\"\n        );\n      }\n      continue;\n    }\n    params[key] = source[key];\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory = params.CMapReaderFactory || DOMCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.pdfBug = params.pdfBug === true;\n\n  const NativeImageDecoderValues = Object.values(NativeImageDecoding);\n  if (\n    params.nativeImageDecoderSupport === undefined ||\n    !NativeImageDecoderValues.includes(params.nativeImageDecoderSupport)\n  ) {\n    params.nativeImageDecoderSupport =\n      apiCompatibilityParams.nativeImageDecoderSupport ||\n      NativeImageDecoding.DECODE;\n  }\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = apiCompatibilityParams.disableFontFace || false;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n  if (typeof params.disableCreateObjectURL !== \"boolean\") {\n    params.disableCreateObjectURL =\n      apiCompatibilityParams.disableCreateObjectURL || false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function() {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n      return _fetchDocument(worker, params, rangeTransport, docId).then(\n        function(workerId) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          let networkStream;\n          if (rangeTransport) {\n            networkStream = new PDFDataTransportStream(\n              {\n                length: params.length,\n                initialData: params.initialData,\n                progressiveDone: params.progressiveDone,\n                disableRange: params.disableRange,\n                disableStream: params.disableStream,\n              },\n              rangeTransport\n            );\n          } else if (!params.data) {\n            networkStream = createPDFNetworkStream({\n              url: params.url,\n              length: params.length,\n              httpHeaders: params.httpHeaders,\n              withCredentials: params.withCredentials,\n              rangeChunkSize: params.rangeChunkSize,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            });\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId Unique document id, used as MessageHandler id.\n * @returns {Promise} The promise, which is resolved when worker id of\n *                    MessageHandler is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      disableCreateObjectURL: source.disableCreateObjectURL,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      nativeImageDecoderSupport: source.nativeImageDecoderSupport,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n    })\n    .then(function(workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique document loading task id -- used in MessageHandlers.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Shows if loading task is destroyed.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if wrong or no password was provided.\n       * The callback receives two parameters: function that needs to be called\n       * with new password and reason (see {PasswordResponses}).\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar). The callback receives\n       * an {Object} with the properties: {number} loaded and {number} total.\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback to when unsupported feature is used. The callback receives\n       * an {UNSUPPORTED_FEATURES} argument.\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * Aborts all network requests and destroys worker.\n     * @returns {Promise} A promise that is resolved after destruction activity\n     *                    is completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n\n    /**\n     * Registers callbacks to indicate the document loading completion.\n     * @ignore\n     */\n    then(onFulfilled, onRejected) {\n      throw new Error(\n        \"Removed API method: \" +\n          \"PDFDocumentLoadingTask.then, use the `promise` getter instead.\"\n      );\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n * @param {number} length\n * @param {Uint8Array} initialData\n * @param {boolean} progressiveDone\n */\nclass PDFDataRangeTransport {\n  constructor(length, initialData, progressiveDone = false) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a PDFDocument in the worker thread. Also, contains commonly used\n * properties that can be read synchronously.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  /**\n   * @type {number} Total number of pages the PDF contains.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {string} A (not guaranteed to be) unique ID to identify a PDF.\n   */\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise} A promise that is resolved with a {@link PDFPageProxy}\n   *   object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {{num: number, gen: number}} ref - The page reference. Must have\n   *   the `num` and `gen` properties.\n   * @returns {Promise} A promise that is resolved with the page index (starting\n   *   from zero) that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a lookup table for\n   *   mapping named destinations to reference numbers.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise} A promise that is resolved with all information\n   *   of the given named destination.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} containing\n   *   the page labels that correspond to the page indexes, or `null` when\n   *   no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {string} containing\n   *   the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {string} containing\n   *   the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *   the viewer preferences.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *   the currently supported actions, or `null` when no OpenAction exists.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  getOpenActionDestination() {\n    deprecated(\"getOpenActionDestination, use getOpenAction instead.\");\n    return this.getOpenAction().then(function(openAction) {\n      return openAction && openAction.dest ? openAction.dest : null;\n    });\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a lookup table for\n   *   mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} of all the\n   *   JavaScript strings in the name tree, or `null` if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} that is a\n   * tree outline (if it has one) of the PDF. The tree is in the format of:\n   * [\n   *   {\n   *     title: string,\n   *     bold: boolean,\n   *     italic: boolean,\n   *     color: rgb Uint8ClampedArray,\n   *     count: integer or undefined,\n   *     dest: dest obj,\n   *     url: string,\n   *     items: array of more items like this\n   *   },\n   *   ...\n   * ]\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} that contains\n   *   the permission flags for the PDF document, or `null` when\n   *   no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} that has\n   *   `info` and `metadata` properties. `info` is an {Object} filled with\n   *   anything available in the information dictionary and similarly\n   *   `metadata` is a {Metadata} object with information from the metadata\n   *   section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {TypedArray} that has\n   *   the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved when the document's data\n   *   is loaded. It is resolved with an {Object} that contains the `length`\n   *   property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @returns {Promise} A promise this is resolved with current statistics about\n   *   document structures (see {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document, on both the main- and\n   * worker-threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   *       currently ongoing since that may lead to rendering errors.\n   *\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup() {\n    return this._transport.startCleanup();\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {Object} A subset of the current {DocumentInitParameters}, which are\n   *   either needed in the viewer and/or whose default values may be affected\n   *   by the `apiCompatibilityParams`.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {array} items - array of {@link TextItem}\n * @property {Object} styles - {@link TextStyle} objects, indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - text content.\n * @property {string} dir - text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {array} transform - transformation matrix.\n * @property {number} width - width in device space.\n * @property {number} height - height in device space.\n * @property {string} fontName - font name used by pdf.js for converted font.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - font ascent.\n * @property {number} descent - font descent.\n * @property {boolean} vertical - text is in vertical mode.\n * @property {string} fontFamily - possible font family\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} intent - Determines the annotations that will be fetched,\n *                    can be either 'display' (viewable annotations) or 'print'\n *                    (printable annotations).\n *                    If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by\n *                          calling the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'\n *                    (default value is 'display').\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering\n *                     for some operations. The default value is `false`.\n * @property {boolean} [renderInteractiveForms] - Whether or not\n *                     interactive form elements are rendered in the display\n *                     layer. If so, we do not render them on canvas as well.\n * @property {Array}  [transform] - Additional transform, applied\n *                    just before viewport transform.\n * @property {Object} [imageLayer] - An object that has beginLayout,\n *                    endLayout and appendImage functions.\n * @property {Object} [canvasFactory] - The factory that will be used\n *                    when creating canvases. The default value is\n *                    {DOMCanvasFactory}.\n * @property {Object} [background] - Background to use for the canvas.\n *                    Can use any valid canvas.fillStyle: A DOMString parsed as\n *                    CSS <color> value, a CanvasGradient object (a linear or\n *                    radial gradient) or a CanvasPattern object (a repetitive\n *                    image). The default value is 'rgb(255,255,255)'.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array} fnArray - Array containing the operator functions.\n * @property {Array} argsArray - Array containing the arguments of the\n *                               functions.\n */\n\n/**\n * Proxy to a PDFPage in the worker thread.\n * @alias PDFPageProxy\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this.intentStates = Object.create(null);\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {Object} The reference that points to this page. It has `num` and\n   *   `gen` properties.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array} An array of the visible portion of the PDF page in user\n   *   space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"GENERIC\") &&\n      (arguments.length > 1 || typeof arguments[0] === \"number\")\n    ) {\n      throw new Error(\n        \"PDFPageProxy.getViewport is called with obsolete arguments.\"\n      );\n    }\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise} A promise that is resolved with an {Array} of the\n   *   annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n      this.annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        intent\n      );\n      this.annotationsIntent = intent;\n    }\n    return this.annotationsPromise;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   * @param {RenderParameters} params Page render parameters.\n   * @returns {RenderTask} An object that contains the promise, which\n   *                       is resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    enableWebGL = false,\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n    const intentState = this.intentStates[renderingIntent];\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance = canvasFactory || new DOMCanvasFactory();\n    const webGLContext = new WebGLContext({\n      enable: enableWebGL,\n    });\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n      });\n    }\n\n    const complete = error => {\n      const i = intentState.renderTasks.indexOf(internalRenderTask);\n      if (i >= 0) {\n        intentState.renderTasks.splice(i, 1);\n      }\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      webGLContext,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    if (!intentState.renderTasks) {\n      intentState.renderTasks = [];\n    }\n    intentState.renderTasks.push(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    intentState.displayReadyCapability.promise\n      .then(transparency => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics(transparency);\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @returns {Promise} A promise resolved with an {@link PDFOperatorList}\n   *   object that represents page's operator list.\n   */\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        const i = intentState.renderTasks.indexOf(opListTask);\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n    const intentState = this.intentStates[renderingIntent];\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = {};\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      intentState.renderTasks = [];\n      intentState.renderTasks.push(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} ReadableStream to read textContent chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise} That is resolved a {@link TextContent}\n   *   object that represent the page text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function(resolve, reject) {\n      function pump() {\n        reader.read().then(function({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    Object.keys(this.intentStates).forEach(intent => {\n      const intentState = this.intentStates[intent];\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent === \"oplist\") {\n        // Avoid errors below, since the renderTasks are just stubs.\n        return;\n      }\n      intentState.renderTasks.forEach(function(renderTask) {\n        const renderCompleted = renderTask.capability.promise.catch(\n          function() {}\n        ); // ignoring failures\n        waitOn.push(renderCompleted);\n        renderTask.cancel();\n      });\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicating if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (\n      !this.pendingCleanup ||\n      Object.keys(this.intentStates).some(intent => {\n        const intentState = this.intentStates[intent];\n        return (\n          intentState.renderTasks.length !== 0 ||\n          !intentState.operatorList.lastChunk\n        );\n      })\n    ) {\n      return false;\n    }\n\n    Object.keys(this.intentStates).forEach(intent => {\n      delete this.intentStates[intent];\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this.intentStates[intent];\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (let i = 0; i < intentState.renderTasks.length; i++) {\n      intentState.renderTasks[i].operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this.intentStates[args.intent];\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (let i = 0; i < intentState.renderTasks.length; i++) {\n              intentState.renderTasks[i].operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.length !== 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(\n      new AbortException(reason && reason.message)\n    );\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    Object.keys(this.intentStates).some(intent => {\n      if (this.intentStates[intent] === intentState) {\n        delete this.intentStates[intent];\n        return true;\n      }\n      return false;\n    });\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor(defer = true) {\n    this._listeners = [];\n    this._defer = defer;\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        const transferable = transfers && transfers.includes(buffer);\n        if (transferable) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      result = Array.isArray(value) ? [] : {};\n      cloned.set(value, result); // adding to cache now for cyclic references\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n            throw new Error(\n              `LoopbackPort.postMessage - cannot clone: ${value[i]}`\n            );\n          }\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    if (!this._defer) {\n      this._listeners.forEach(listener => {\n        listener.call(this, { data: obj });\n      });\n      return;\n    }\n\n    const cloned = new WeakMap();\n    const e = { data: cloneValue(obj) };\n    this._deferred.then(() => {\n      this._listeners.forEach(listener => {\n        listener.call(this, e);\n      });\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort`.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {VerbosityLevel} should be used.\n */\n\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // eslint-disable-next-line no-undef\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n      // Workers aren't supported in Node.js, force-disabling them there.\n      isWorkerDisabled = true;\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\n        fallbackWorkerSrc = \"../pdf.worker.js\";\n      } else {\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      }\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath =\n        document.currentScript && document.currentScript.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler =\n        globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function() {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        if (typeof SystemJS !== \"object\") {\n          throw new Error(\"SystemJS must be used to load fake worker.\");\n        }\n        const worker = await SystemJS.import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction, which controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function() {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *                                       parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n    });\n    this._params = params;\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: params.cMapUrl,\n      isCompressed: params.cMapPacked,\n    });\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    this.pageCache.forEach(function(page) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    });\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    Promise.all(waitOn).then(() => {\n      this.fontLoader.clear();\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(this._networkStream);\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(isArrayBuffer(value));\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(this._networkStream);\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(isArrayBuffer(value));\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function(ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || TESTING\")\n      ) {\n        assert(reason instanceof Error, \"DocException: expected an Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (\n            params.pdfBug &&\n            globalThis.FontInspector &&\n            globalThis.FontInspector.enabled\n          ) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader.bind(font).then(\n            () => {\n              this.commonObjs.resolve(id, font);\n            },\n            reason => {\n              messageHandler\n                .sendWithPromise(\"FontFallback\", {\n                  id,\n                })\n                .finally(() => {\n                  this.commonObjs.resolve(id, font);\n                });\n            }\n          );\n          break;\n        case \"FontPath\":\n        case \"FontType3Res\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"JpegStream\":\n          return new Promise((resolve, reject) => {\n            const img = new Image();\n            img.onload = function() {\n              resolve(img);\n            };\n            img.onerror = function() {\n              // Note that when the browser image loading/decoding fails,\n              // we'll fallback to the built-in PDF.js JPEG decoder; see\n              // `PartialEvaluator.buildPaintImageXObject` in the\n              // `src/core/evaluator.js` file.\n              reject(new Error(\"Error during JPEG image loading\"));\n\n              // Always remember to release the image data if errors occurred.\n              releaseImageResources(img);\n            };\n            img.src = imageData;\n          }).then(img => {\n            pageProxy.objs.resolve(id, img);\n          });\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (\n            imageData &&\n            \"data\" in imageData &&\n            imageData.data.length > MAX_IMAGE_SIZE_TO_STORE\n          ) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"JpegDecode\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed\"));\n      }\n\n      if (typeof document === \"undefined\") {\n        // Make sure that this code is not executing in node.js, as\n        // it's using DOM image, and there is no library to support that.\n        return Promise.reject(new Error('\"document\" is not defined.'));\n      }\n\n      const [imageUrl, components] = data;\n      if (components !== 3 && components !== 1) {\n        return Promise.reject(\n          new Error(\"Only 3 components or 1 component can be returned\")\n        );\n      }\n\n      return new Promise(function(resolve, reject) {\n        const img = new Image();\n        img.onload = function() {\n          const { width, height } = img;\n          const size = width * height;\n          const rgbaLength = size * 4;\n          const buf = new Uint8ClampedArray(size * components);\n          let tmpCanvas = document.createElement(\"canvas\");\n          tmpCanvas.width = width;\n          tmpCanvas.height = height;\n          let tmpCtx = tmpCanvas.getContext(\"2d\");\n          tmpCtx.drawImage(img, 0, 0);\n          const data = tmpCtx.getImageData(0, 0, width, height).data;\n\n          if (components === 3) {\n            for (let i = 0, j = 0; i < rgbaLength; i += 4, j += 3) {\n              buf[j] = data[i];\n              buf[j + 1] = data[i + 1];\n              buf[j + 2] = data[i + 2];\n            }\n          } else if (components === 1) {\n            for (let i = 0, j = 0; i < rgbaLength; i += 4, j++) {\n              buf[j] = data[i];\n            }\n          }\n          resolve({ data: buf, width, height });\n\n          // Immediately release the image data once decoding has finished.\n          releaseImageResources(img);\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          tmpCanvas.width = 0;\n          tmpCanvas.height = 0;\n          tmpCanvas = null;\n          tmpCtx = null;\n        };\n        img.onerror = function() {\n          reject(new Error(\"JpegDecode failed to load image\"));\n\n          // Always remember to release the image data if errors occurred.\n          releaseImageResources(img);\n        };\n        img.src = imageUrl;\n      });\n    });\n\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n        fetched = true;\n\n        this.CMapReaderFactory.fetch(data)\n          .then(function(builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          })\n          .catch(function(reason) {\n            sink.error(reason);\n          });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function(reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader\n            ? this._fullReader.filename\n            : null,\n        };\n      });\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  startCleanup() {\n    return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n      for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n        const page = this.pageCache[i];\n        if (page) {\n          const cleanupSuccessful = page.cleanup();\n\n          if (!cleanupSuccessful) {\n            throw new Error(\n              `startCleanup: Page ${i + 1} is currently rendering.`\n            );\n          }\n        }\n      }\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n    });\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableCreateObjectURL: params.disableCreateObjectURL,\n      disableFontFace: params.disableFontFace,\n      nativeImageDecoderSupport: params.nativeImageDecoderSupport,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj ? obj.resolved : false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    for (const objId in this._objs) {\n      const { data } = this._objs[objId];\n\n      if (typeof Image !== \"undefined\" && data instanceof Image) {\n        // Always release the image data when clearing out the cached objects.\n        releaseImageResources(data);\n      }\n    }\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n * @alias RenderTask\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n\n  /**\n   * Registers callbacks to indicate the rendering task completion.\n   * @ignore\n   */\n  then(onFulfilled, onRejected) {\n    throw new Error(\n      \"Removed API method: \" +\n        \"RenderTask.then, use the `promise` getter instead.\"\n    );\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      webGLContext,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    initializeGraphics(transparency = false) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (\n        this._pdfBug &&\n        globalThis.StepperManager &&\n        globalThis.StepperManager.enabled\n      ) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      } = this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        this.webGLContext,\n        imageLayer\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this.cancel.bind(this));\n        });\n      } else {\n        Promise.resolve()\n          .then(this._nextBound)\n          .catch(this.cancel.bind(this));\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  setPDFNetworkStreamFactory,\n  version,\n  build,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  BaseException,\n  CMapCompressionType,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass DOMCanvasFactory {\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context,\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n}\n\nclass DOMCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (isFetchSupported() && isValidFetchUrl(url, document.baseURI))\n    ) {\n      return fetch(url)\n        .then(async response => {\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          let cMapData;\n          if (this.isCompressed) {\n            cMapData = new Uint8Array(await response.arrayBuffer());\n          } else {\n            cMapData = stringToBytes(await response.text());\n          }\n          return { cMapData, compressionType };\n        })\n        .catch(reason => {\n          throw new Error(\n            `Unable to load ${this.isCompressed ? \"binary \" : \"\"}` +\n              `CMap at: ${url}`\n          );\n        });\n    }\n\n    // The Fetch API is not supported.\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = stringToBytes(request.responseText);\n          }\n          if (cMapData) {\n            resolve({ cMapData, compressionType });\n            return;\n          }\n        }\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    }).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}` +\n          `CMap at: ${url}`\n      );\n    });\n  }\n}\n\nclass DOMSVGFactory {\n  create(width, height) {\n    assert(width > 0 && height > 0, \"Invalid SVG dimensions\");\n\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    return svg;\n  }\n\n  createElement(type) {\n    assert(typeof type === \"string\", \"Invalid SVG element type\");\n\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array} viewBox - The xMin, yMin, xMax and yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      // case 0:\n      default:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\n// Gets the file name from a given URL.\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isFetchSupported() {\n  return (\n    typeof fetch !== \"undefined\" &&\n    typeof Response !== \"undefined\" &&\n    \"body\" in Response.prototype &&\n    typeof ReadableStream !== \"undefined\"\n  );\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\nfunction loadScript(src) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = resolve;\n    script.onerror = function() {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nfunction releaseImageResources(img) {\n  assert(img instanceof Image, \"Invalid `img` parameter.\");\n\n  const url = img.src;\n  if (\n    typeof url === \"string\" &&\n    url.startsWith(\"blob:\") &&\n    URL.revokeObjectURL\n  ) {\n    URL.revokeObjectURL(url);\n  }\n  img.removeAttribute(\"src\");\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n        \"(\\\\d{4})\" + // Year (required)\n        \"(\\\\d{2})?\" + // Month (optional)\n        \"(\\\\d{2})?\" + // Day (optional)\n        \"(\\\\d{2})?\" + // Hour (optional)\n        \"(\\\\d{2})?\" + // Minute (optional)\n        \"(\\\\d{2})?\" + // Second (optional)\n        \"([Z|+|-])?\" + // Universal time relation (optional)\n        \"(\\\\d{2})?\" + // Offset hour (optional)\n        \"'?\" + // Splitting apostrophe (optional)\n        \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\nexport {\n  PageViewport,\n  RenderingCancelledException,\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  DEFAULT_LINK_REL,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMSVGFactory,\n  StatTimer,\n  isFetchSupported,\n  isValidFetchUrl,\n  loadScript,\n  deprecated,\n  releaseImageResources,\n  PDFDateString,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({ docId, onUnsupportedFeature }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    this.nativeFontFaces.forEach(function(nativeFontFace) {\n      document.fonts.delete(nativeFontFace);\n    });\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({ featureId: UNSUPPORTED_FEATURES.font });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const supported = typeof document !== \"undefined\" && !!document.fonts;\n    return shadow(this, \"isFontLoadingAPISupported\", supported);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(docId) {\n      super(docId);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m && m[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function() {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        const span = document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n      document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, function() {\n        document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature = null,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(new Uint8Array(this.data));\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds, current;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      if (this._onUnsupportedFeature) {\n        this._onUnsupportedFeature({ featureId: UNSUPPORTED_FEATURES.font });\n      }\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function(c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      let args,\n        js = \"\";\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.args !== undefined) {\n          args = current.args.join(\",\");\n        } else {\n          args = \"\";\n        }\n        js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\"c\", \"size\", js));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function(c, size) {\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const { isNodeJS } = require(\"../shared/is_node.js\");\n\n  const userAgent =\n    (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n  const isIE = /Trident/.test(userAgent);\n  const isIOSChrome = /CriOS/.test(userAgent);\n\n  // Checks if possible to use URL.createObjectURL()\n  // Support: IE, Chrome on iOS\n  (function checkOnBlobSupport() {\n    // Sometimes IE and Chrome on iOS losing the data created with\n    // createObjectURL(), see issues #3977 and #8081.\n    if (isIE || isIOSChrome) {\n      compatibilityParams.disableCreateObjectURL = true;\n    }\n  })();\n\n  // Support: Node.js\n  (function checkFontFaceAndImage() {\n    // Node.js is missing native support for `@font-face` and `Image`.\n    if (isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n      compatibilityParams.nativeImageDecoderSupport = \"none\";\n    }\n  })();\n}\n\nexports.apiCompatibilityParams = Object.freeze(compatibilityParams);\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://electronjs.org/docs/api/process#processversionselectron\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions[\"nw\"] &&\n  !process.versions[\"electron\"];\n\nexport { isNodeJS };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPatternFromIR, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n\n// Minimal font size that would be used during canvas fillText operations.\nvar MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nvar MAX_FONT_SIZE = 100;\nvar MAX_GROUP_SIZE = 4096;\n\n// Heuristic value used when enforcing minimum line widths.\nvar MIN_WIDTH_FACTOR = 0.65;\n\nvar COMPILE_TYPE3_GLYPHS = true;\nvar MAX_SIZE_TO_COMPILE = 1000;\n\nvar FULL_CHUNK_HEIGHT = 16;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (!ctx.mozCurrentTransform) {\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n\n    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n    ctx._transformStack = [];\n\n    Object.defineProperty(ctx, \"mozCurrentTransform\", {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      },\n    });\n\n    Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n      get: function getCurrentTransformInverse() {\n        // Calculation done using WolframAlpha:\n        // http://www.wolframalpha.com/input/?\n        //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n        var m = this._transformMatrix;\n        var a = m[0],\n          b = m[1],\n          c = m[2],\n          d = m[3],\n          e = m[4],\n          f = m[5];\n\n        var ad_bc = a * d - b * c;\n        var bc_ad = b * c - a * d;\n\n        return [\n          d / ad_bc,\n          b / bc_ad,\n          c / bc_ad,\n          a / ad_bc,\n          (d * e - c * f) / bc_ad,\n          (b * e - a * f) / ad_bc,\n        ];\n      },\n    });\n\n    ctx.save = function ctxSave() {\n      var old = this._transformMatrix;\n      this._transformStack.push(old);\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      var prev = this._transformStack.pop();\n      if (prev) {\n        this._transformMatrix = prev;\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      var m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      var m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * a + m[2] * b,\n        m[1] * a + m[3] * b,\n        m[0] * c + m[2] * d,\n        m[1] * c + m[3] * d,\n        m[0] * e + m[2] * f + m[4],\n        m[1] * e + m[3] * f + m[5],\n      ];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      var cosValue = Math.cos(angle);\n      var sinValue = Math.sin(angle);\n\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * cosValue + m[2] * sinValue,\n        m[1] * cosValue + m[3] * sinValue,\n        m[0] * -sinValue + m[2] * cosValue,\n        m[1] * -sinValue + m[3] * cosValue,\n        m[4],\n        m[5],\n      ];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nvar CachedCanvases = (function CachedCanvasesClosure() {\n  function CachedCanvases(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n  CachedCanvases.prototype = {\n    getCanvas: function CachedCanvases_getCanvas(\n      id,\n      width,\n      height,\n      trackTransform\n    ) {\n      var canvasEntry;\n      if (this.cache[id] !== undefined) {\n        canvasEntry = this.cache[id];\n        this.canvasFactory.reset(canvasEntry, width, height);\n        // reset canvas transform for emulated mozCurrentTransform, if needed\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        canvasEntry = this.canvasFactory.create(width, height);\n        this.cache[id] = canvasEntry;\n      }\n      if (trackTransform) {\n        addContextCurrentTransform(canvasEntry.context);\n      }\n      return canvasEntry;\n    },\n    clear() {\n      for (var id in this.cache) {\n        var canvasEntry = this.cache[id];\n        this.canvasFactory.destroy(canvasEntry);\n        delete this.cache[id];\n      }\n    },\n  };\n  return CachedCanvases;\n})();\n\nfunction compileType3Glyph(imgData) {\n  var POINT_TO_PROCESS_LIMIT = 1000;\n\n  var width = imgData.width,\n    height = imgData.height;\n  var i,\n    j,\n    j0,\n    width1 = width + 1;\n  var points = new Uint8Array(width1 * (height + 1));\n  // prettier-ignore\n  var POINT_TYPES =\n      new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n\n  // decodes bit-packed mask data\n  var lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  var data = new Uint8Array(lineSize * height),\n    pos = 0,\n    ii;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    var mask = 128,\n      elem = data0[i];\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  var count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  var outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    var p = i * width1;\n    var end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    var coords = [p % width1, i];\n\n    var type = points[p],\n      p0 = p,\n      pp;\n    do {\n      var step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1);\n      coords.push((p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  var drawOutline = function(c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (var i = 0, ii = outlines.length; i < ii; i++) {\n      var o = outlines[i];\n      c.moveTo(o[0], o[1]);\n      for (var j = 2, jj = o.length; j < jj; j += 2) {\n        c.lineTo(o[j], o[j + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nvar CanvasExtraState = (function CanvasExtraStateClosure() {\n  function CanvasExtraState() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    },\n  };\n  return CanvasExtraState;\n})();\n\nvar CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  var EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  var EXECUTION_STEPS = 10;\n\n  function CanvasGraphics(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    webGLContext,\n    imageLayer\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.webGLContext = webGLContext;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see pdf\n    // spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  function putBinaryImageData(ctx, imgData) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0,\n      destPos;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n    var i, j, thisChunkHeight, elemsInThisChunk;\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      var srcLength = src.byteLength;\n      var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      var dest32DataLength = dest32.length;\n      var fullSrcDiff = (width + 7) >> 3;\n      var white = 0xffffffff;\n      var black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          var srcDiff = srcLength - srcPos;\n          var k = 0;\n          var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          var kEndUnrolled = kEnd & ~7;\n          var mask = 0;\n          var srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n\n    for (var i = 0; i < totalChunks; i++) {\n      var thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      var destPos = 3; // alpha component offset\n      for (var j = 0; j < thisChunkHeight; j++) {\n        var mask = 0;\n        for (var k = 0; k < width; k++) {\n          if (!mask) {\n            var elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    var properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (var i = 0, ii = properties.length; i < ii; i++) {\n      var property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    var length = bytes.length;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        var alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    var scale = 1 / 255;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    for (var i = 3; i < length; i += 4) {\n      var y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    var hasBackdrop = !!backdrop;\n    var r0 = hasBackdrop ? backdrop[0] : 0;\n    var g0 = hasBackdrop ? backdrop[1] : 0;\n    var b0 = hasBackdrop ? backdrop[2] : 0;\n\n    var composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    var PIXELS_TO_PROCESS = 1048576;\n    var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (var row = 0; row < height; row += chunkSize) {\n      var chunkHeight = Math.min(chunkSize, height - row);\n      var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx, webGLContext) {\n    var mask = smask.canvas;\n    var maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    var backdrop = smask.backdrop || null;\n    if (!smask.transferMap && webGLContext.isEnabled) {\n      const composed = webGLContext.composeSMask({\n        layer: layerCtx.canvas,\n        mask,\n        properties: {\n          subtype: smask.subtype,\n          backdrop,\n        },\n      });\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n      return;\n    }\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  var NORMAL_CLIP = {};\n  var EO_CLIP = {};\n\n  CanvasGraphics.prototype = {\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      var width = this.ctx.canvas.width;\n      var height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        var transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      var argsArray = operatorList.argsArray;\n      var fnArray = operatorList.fnArray;\n      var i = executionStartIdx || 0;\n      var argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      var chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      var steps = 0;\n\n      var commonObjs = this.commonObjs;\n      var objs = this.objs;\n      var fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    },\n\n    endDrawing: function CanvasGraphics_endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      if (this.current.activeSMask !== null) {\n        this.endSMaskGroup();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n      this.webGLContext.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n\n    // Graphics state\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      var ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    },\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setGState: function CanvasGraphics_setGState(states) {\n      for (var i = 0, ii = states.length; i < ii; i++) {\n        var state = states[i];\n        var key = state[0];\n        var value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n        }\n      }\n    },\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n      var activeSMask = this.current.activeSMask;\n      var drawnWidth = activeSMask.canvas.width;\n      var drawnHeight = activeSMask.canvas.height;\n      var cacheId = \"smaskGroupAt\" + this.groupLevel;\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      var currentCtx = this.ctx;\n      var currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      var groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    },\n    resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      var groupCtx = this.current.resumeSMaskCtx;\n      var currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      var old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    },\n    restore: function CanvasGraphics_restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    },\n\n    // Path\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var x = current.x,\n        y = current.y;\n      for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            var width = args[j++];\n            var height = args[j++];\n            if (width === 0) {\n              width = this.getSinglePixelWidth();\n            }\n            if (height === 0) {\n              height = this.getSinglePixelWidth();\n            }\n            var xw = x + width;\n            var yh = y + height;\n            this.ctx.moveTo(x, y);\n            this.ctx.lineTo(xw, y);\n            this.ctx.lineTo(xw, yh);\n            this.ctx.lineTo(x, yh);\n            this.ctx.lineTo(x, y);\n            this.ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (\n        strokeColor &&\n        strokeColor.hasOwnProperty(\"type\") &&\n        strokeColor.type === \"Pattern\"\n      ) {\n        // for patterns, we transform to pattern space, calculate\n        // the pattern, call stroke, and restore to user space\n        ctx.save();\n        // The current transform will be replaced while building the pattern,\n        // but the line width needs to be adjusted by the current transform, so\n        // we must scale it. To properly fix this we should be using a pattern\n        // transform instead (see #10955).\n        const transform = ctx.mozCurrentTransform;\n        const scale = Util.singularValueDecompose2dScale(transform)[0];\n        ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n        ctx.lineWidth = Math.max(\n          this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n          this.current.lineWidth * scale\n        );\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        // Prevent drawing too thin lines by enforcing a minimum line width.\n        ctx.lineWidth = Math.max(\n          this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n          this.current.lineWidth\n        );\n        ctx.stroke();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      var needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        if (this.baseTransform) {\n          ctx.setTransform.apply(ctx, this.baseTransform);\n        }\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n\n    // Clipping\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n\n    // Text\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      var paths = this.pendingTextPaths;\n      var ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (var i = 0; i < paths.length; i++) {\n        var path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      var fontObj = this.commonObjs.get(fontRefName);\n      var current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      var name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      var italic = fontObj.italic ? \"italic\" : \"normal\";\n      var typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    paintChar(character, x, y, patternTransform) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var textRenderingMode = current.textRenderingMode;\n      var fontSize = current.fontSize / current.fontSizeScale;\n      var fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      var isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && font.data;\n\n      var addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.strokeText(character, x, y);\n        }\n      }\n\n      if (isAddToPathSet) {\n        var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    },\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      var data = ctx.getImageData(0, 0, 10, 10).data;\n      var enabled = false;\n      for (var i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    },\n\n    showText: function CanvasGraphics_showText(glyphs) {\n      var current = this.current;\n      var font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      var fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      var ctx = this.ctx;\n      var fontSizeScale = current.fontSizeScale;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var fontDirection = current.fontDirection;\n      var textHScale = current.textHScale * fontDirection;\n      var glyphsLength = glyphs.length;\n      var vertical = font.vertical;\n      var spacingDir = vertical ? 1 : -1;\n      var defaultVMetrics = font.defaultVMetrics;\n      var widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      var simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      var lineWidth = current.lineWidth;\n      var scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        var fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      var x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        var glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        var restoreNeeded = false;\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var character = glyph.fontChar;\n        var accent = glyph.accent;\n        var scaledX, scaledY, scaledAccentX, scaledAccentY;\n        var width = glyph.width;\n        if (vertical) {\n          var vmetric, vx, vy;\n          vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n          var measuredWidth =\n            ((ctx.measureText(character).width * 1000) / fontSize) *\n            fontSizeScale;\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n            var characterScaleX = width / measuredWidth;\n            restoreNeeded = true;\n            ctx.save();\n            ctx.scale(characterScaleX, 1);\n            scaledX /= characterScaleX;\n          } else if (width !== measuredWidth) {\n            scaledX +=\n              (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n          }\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (glyph.isInFont || font.missingFile) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(character, scaledX, scaledY, patternTransform);\n            if (accent) {\n              scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n              scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform\n              );\n            }\n          }\n        }\n\n        var charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n    },\n\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var fontSize = current.fontSize;\n      var fontDirection = current.fontDirection;\n      var spacingDir = font.vertical ? 1 : -1;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var textHScale = current.textHScale * fontDirection;\n      var fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      var glyphsLength = glyphs.length;\n      var isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      var i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n\n        var transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    },\n\n    // Type3 fonts\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    },\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(\n      xWidth,\n      yWidth,\n      llx,\n      lly,\n      urx,\n      ury\n    ) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n\n    // Color\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n      var pattern;\n      if (IR[0] === \"TilingPattern\") {\n        var color = IR[1];\n        var baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        var canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory,\n              this.webGLContext\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = getShadingPatternFromIR(IR);\n      }\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    },\n\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      var ctx = this.ctx;\n\n      this.save();\n      var pattern = getShadingPatternFromIR(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      var inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        var canvas = ctx.canvas;\n        var width = canvas.width;\n        var height = canvas.height;\n\n        var bl = Util.applyTransform([0, 0], inv);\n        var br = Util.applyTransform([0, height], inv);\n        var ul = Util.applyTransform([width, 0], inv);\n        var ur = Util.applyTransform([width, height], inv);\n\n        var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n\n    // Images\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    },\n\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(\n      matrix,\n      bbox\n    ) {\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      this.save();\n      var currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      var currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      var bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      var canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      var offsetX = Math.floor(bounds[0]);\n      var offsetY = Math.floor(bounds[1]);\n      var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      var scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      var cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      var groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Reseting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    },\n\n    endGroup: function CanvasGraphics_endGroup(group) {\n      this.groupLevel--;\n      var groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    },\n\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    },\n\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n\n    beginAnnotation: function CanvasGraphics_beginAnnotation(\n      rect,\n      transform,\n      matrix\n    ) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        var width = rect[2] - rect[0];\n        var height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n\n    paintJpegXObject: function CanvasGraphics_paintJpegXObject(objId, w, h) {\n      const domImage = this.processingType3\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!domImage) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.save();\n\n      var ctx = this.ctx;\n      // scale the image to the unit square\n      ctx.scale(1 / w, -1 / h);\n\n      ctx.drawImage(\n        domImage,\n        0,\n        0,\n        domImage.width,\n        domImage.height,\n        0,\n        -h,\n        w,\n        h\n      );\n      if (this.imageLayer) {\n        var currentTransform = ctx.mozCurrentTransformInverse;\n        var position = this.getCanvasPosition(0, 0);\n        this.imageLayer.appendImage({\n          objId,\n          left: position[0],\n          top: position[1],\n          width: w / currentTransform[0],\n          height: h / currentTransform[3],\n        });\n      }\n      this.restore();\n    },\n\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      var ctx = this.ctx;\n      var width = img.width,\n        height = img.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph && glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n\n    paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      var ctx = this.ctx;\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(\n      images\n    ) {\n      var ctx = this.ctx;\n\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      for (var i = 0, ii = images.length; i < ii; i++) {\n        var image = images[i];\n        var width = image.width,\n          height = image.height;\n\n        var maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        var maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(maskCtx, this)\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      const imgData = this.processingType3\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    },\n\n    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(\n      objId,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      const imgData = this.processingType3\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      var width = imgData.width;\n      var height = imgData.height;\n      var map = [];\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    },\n\n    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(\n      imgData\n    ) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      var currentTransform = ctx.mozCurrentTransformInverse;\n      var a = currentTransform[0],\n        b = currentTransform[1];\n      var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n      var c = currentTransform[2],\n        d = currentTransform[3];\n      var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n\n      var imgToPaint, tmpCanvas;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        var tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      var paintWidth = width,\n        paintHeight = height;\n      var tmpCanvasId = \"prescale1\";\n      // Vertial or horizontal scaling shall not be more than 2 to not loose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        var newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          imgToPaint,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      ctx.drawImage(\n        imgToPaint,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        var position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3],\n        });\n      }\n      this.restore();\n    },\n\n    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(\n      imgData,\n      map\n    ) {\n      var ctx = this.ctx;\n      var w = imgData.width;\n      var h = imgData.height;\n\n      var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      var tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n\n      for (var i = 0, ii = map.length; i < ii; i++) {\n        var entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          var position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    },\n\n    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n      this.ctx.fillRect(0, 0, 1, 1);\n    },\n\n    paintXObject: function CanvasGraphics_paintXObject() {\n      warn(\"Unsupported 'paintXObject' command.\");\n    },\n\n    // Marked content\n\n    markPoint: function CanvasGraphics_markPoint(tag) {\n      // TODO Marked content.\n    },\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {\n      // TODO Marked content.\n    },\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n      // TODO Marked content.\n    },\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(\n      tag,\n      properties\n    ) {\n      // TODO Marked content.\n    },\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {\n      // TODO Marked content.\n    },\n\n    // Compatibility\n\n    beginCompat: function CanvasGraphics_beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    },\n    endCompat: function CanvasGraphics_endCompat() {\n      // TODO stop ignoring undefined operators\n    },\n\n    // Helper functions\n\n    consumePath: function CanvasGraphics_consumePath() {\n      var ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    },\n    getSinglePixelWidth(scale) {\n      if (this._cachedGetSinglePixelWidth === null) {\n        const inverse = this.ctx.mozCurrentTransformInverse;\n        // max of the current horizontal and vertical scale\n        this._cachedGetSinglePixelWidth = Math.sqrt(\n          Math.max(\n            inverse[0] * inverse[0] + inverse[1] * inverse[1],\n            inverse[2] * inverse[2] + inverse[3] * inverse[3]\n          )\n        );\n      }\n      return this._cachedGetSinglePixelWidth;\n    },\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n      var transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    },\n  };\n\n  for (var op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, Util } from \"../shared/util.js\";\n\nvar ShadingIRs = {};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nShadingIRs.RadialAxial = {\n  fromIR: function RadialAxial_fromIR(raw) {\n    var type = raw[1];\n    var bbox = raw[2];\n    var colorStops = raw[3];\n    var p0 = raw[4];\n    var p1 = raw[5];\n    var r0 = raw[6];\n    var r1 = raw[7];\n    return {\n      type: \"Pattern\",\n      getPattern: function RadialAxial_getPattern(ctx) {\n        applyBoundingBox(ctx, bbox);\n        var grad;\n        if (type === \"axial\") {\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === \"radial\") {\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n\n        for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n          var c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n        return grad;\n      },\n    };\n  },\n};\n\nvar createMeshCanvas = (function createMeshCanvasClosure() {\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n    // Very basic Gouraud-shaded triangle rasterization algorithm.\n    var coords = context.coords,\n      colors = context.colors;\n    var bytes = data.data,\n      rowSize = data.width * 4;\n    var tmp;\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    if (coords[p2 + 1] > coords[p3 + 1]) {\n      tmp = p2;\n      p2 = p3;\n      p3 = tmp;\n      tmp = c2;\n      c2 = c3;\n      c3 = tmp;\n    }\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n    var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n    var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n    var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n    var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n    var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n    if (y1 >= y3) {\n      return;\n    }\n    var c1r = colors[c1],\n      c1g = colors[c1 + 1],\n      c1b = colors[c1 + 2];\n    var c2r = colors[c2],\n      c2g = colors[c2 + 1],\n      c2b = colors[c2 + 2];\n    var c3r = colors[c3],\n      c3g = colors[c3 + 1],\n      c3b = colors[c3 + 2];\n\n    var minY = Math.round(y1),\n      maxY = Math.round(y3);\n    var xa, car, cag, cab;\n    var xb, cbr, cbg, cbb;\n    for (var y = minY; y <= maxY; y++) {\n      if (y < y2) {\n        let k;\n        if (y < y1) {\n          k = 0;\n        } else if (y1 === y2) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y2);\n        }\n        xa = x1 - (x1 - x2) * k;\n        car = c1r - (c1r - c2r) * k;\n        cag = c1g - (c1g - c2g) * k;\n        cab = c1b - (c1b - c2b) * k;\n      } else {\n        let k;\n        if (y > y3) {\n          k = 1;\n        } else if (y2 === y3) {\n          k = 0;\n        } else {\n          k = (y2 - y) / (y2 - y3);\n        }\n        xa = x2 - (x2 - x3) * k;\n        car = c2r - (c2r - c3r) * k;\n        cag = c2g - (c2g - c3g) * k;\n        cab = c2b - (c2b - c3b) * k;\n      }\n\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else if (y > y3) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y3);\n      }\n      xb = x1 - (x1 - x3) * k;\n      cbr = c1r - (c1r - c3r) * k;\n      cbg = c1g - (c1g - c3g) * k;\n      cbb = c1b - (c1b - c3b) * k;\n      var x1_ = Math.round(Math.min(xa, xb));\n      var x2_ = Math.round(Math.max(xa, xb));\n      var j = rowSize * y + x1_ * 4;\n      for (var x = x1_; x <= x2_; x++) {\n        let k = (xa - x) / (xa - xb);\n        if (k < 0) {\n          k = 0;\n        } else if (k > 1) {\n          k = 1;\n        }\n        bytes[j++] = (car - (car - cbr) * k) | 0;\n        bytes[j++] = (cag - (cag - cbg) * k) | 0;\n        bytes[j++] = (cab - (cab - cbb) * k) | 0;\n        bytes[j++] = 255;\n      }\n    }\n  }\n\n  function drawFigure(data, figure, context) {\n    var ps = figure.coords;\n    var cs = figure.colors;\n    var i, ii;\n    switch (figure.type) {\n      case \"lattice\":\n        var verticesPerRow = figure.verticesPerRow;\n        var rows = Math.floor(ps.length / verticesPerRow) - 1;\n        var cols = verticesPerRow - 1;\n        for (i = 0; i < rows; i++) {\n          var q = i * verticesPerRow;\n          for (var j = 0; j < cols; j++, q++) {\n            drawTriangle(\n              data,\n              context,\n              ps[q],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n            drawTriangle(\n              data,\n              context,\n              ps[q + verticesPerRow + 1],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q + verticesPerRow + 1],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n          }\n        }\n        break;\n      case \"triangles\":\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\n          drawTriangle(\n            data,\n            context,\n            ps[i],\n            ps[i + 1],\n            ps[i + 2],\n            cs[i],\n            cs[i + 1],\n            cs[i + 2]\n          );\n        }\n        break;\n      default:\n        throw new Error(\"illegal figure\");\n    }\n  }\n\n  function createMeshCanvas(\n    bounds,\n    combinesScale,\n    coords,\n    colors,\n    figures,\n    backgroundColor,\n    cachedCanvases,\n    webGLContext\n  ) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    var EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    var BORDER_SIZE = 2;\n\n    var offsetX = Math.floor(bounds[0]);\n    var offsetY = Math.floor(bounds[1]);\n    var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n    var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n\n    var width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var scaleX = boundsWidth / width;\n    var scaleY = boundsHeight / height;\n\n    var context = {\n      coords,\n      colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    var paddedWidth = width + BORDER_SIZE * 2;\n    var paddedHeight = height + BORDER_SIZE * 2;\n\n    var canvas, tmpCanvas, i, ii;\n    if (webGLContext.isEnabled) {\n      canvas = webGLContext.drawFigures({\n        width,\n        height,\n        backgroundColor,\n        figures,\n        context,\n      });\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=972126\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    } else {\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      var tmpCtx = tmpCanvas.context;\n\n      var data = tmpCtx.createImageData(width, height);\n      if (backgroundColor) {\n        var bytes = data.data;\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\n          bytes[i] = backgroundColor[0];\n          bytes[i + 1] = backgroundColor[1];\n          bytes[i + 2] = backgroundColor[2];\n          bytes[i + 3] = 255;\n        }\n      }\n      for (i = 0; i < figures.length; i++) {\n        drawFigure(data, figures[i], context);\n      }\n      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    }\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n  return createMeshCanvas;\n})();\n\nShadingIRs.Mesh = {\n  fromIR: function Mesh_fromIR(raw) {\n    // var type = raw[1];\n    var coords = raw[2];\n    var colors = raw[3];\n    var figures = raw[4];\n    var bounds = raw[5];\n    var matrix = raw[6];\n    var bbox = raw[7];\n    var background = raw[8];\n    return {\n      type: \"Pattern\",\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n        applyBoundingBox(ctx, bbox);\n        var scale;\n        if (shadingFill) {\n          scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n        } else {\n          // Obtain scale from matrix and current transformation matrix.\n          scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n          if (matrix) {\n            var matrixScale = Util.singularValueDecompose2dScale(matrix);\n            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n          }\n        }\n\n        // Rasterizing on the main thread since sending/queue large canvases\n        // might cause OOM.\n        var temporaryPatternCanvas = createMeshCanvas(\n          bounds,\n          scale,\n          coords,\n          colors,\n          figures,\n          shadingFill ? null : background,\n          owner.cachedCanvases,\n          owner.webGLContext\n        );\n\n        if (!shadingFill) {\n          ctx.setTransform.apply(ctx, owner.baseTransform);\n          if (matrix) {\n            ctx.transform.apply(ctx, matrix);\n          }\n        }\n\n        ctx.translate(\n          temporaryPatternCanvas.offsetX,\n          temporaryPatternCanvas.offsetY\n        );\n        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n        return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n      },\n    };\n  },\n};\n\nShadingIRs.Dummy = {\n  fromIR: function Dummy_fromIR() {\n    return {\n      type: \"Pattern\",\n      getPattern: function Dummy_fromIR_getPattern() {\n        return \"hotpink\";\n      },\n    };\n  },\n};\n\nfunction getShadingPatternFromIR(raw) {\n  var shadingIR = ShadingIRs[raw[0]];\n  if (!shadingIR) {\n    throw new Error(`Unknown IR type: ${raw[0]}`);\n  }\n  return shadingIR.fromIR(raw);\n}\n\nvar TilingPattern = (function TilingPatternClosure() {\n  var PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2,\n  };\n\n  var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n\n  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n    this.type = \"Pattern\";\n    this.ctx = ctx;\n  }\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      var operatorList = this.operatorList;\n      var bbox = this.bbox;\n      var xstep = this.xstep;\n      var ystep = this.ystep;\n      var paintType = this.paintType;\n      var tilingType = this.tilingType;\n      var color = this.color;\n      var canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n      info(\"TilingType: \" + tilingType);\n\n      // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n      // described by bbox, and may repeat regularly by shifting the cell by\n      // xstep and ystep.\n      // Because the HTML5 canvas API does not support pattern repetition with\n      // gaps in between, we use the xstep/ystep instead of the bbox's size.\n      //\n      // This has the following consequences (similarly for ystep):\n      //\n      // - If xstep is the same as bbox, then there is no observable difference.\n      //\n      // - If xstep is larger than bbox, then the pattern canvas is partially\n      //   empty: the area bounded by bbox is painted, the outside area is void.\n      //\n      // - If xstep is smaller than bbox, then the pixels between xstep and the\n      //   bbox boundary will be missing. This is INCORRECT behavior.\n      //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n      //   but overlapping cells without common pixels are still valid.\n      //   TODO: Fix the implementation, to allow this scenario to be painted\n      //   correctly.\n\n      var x0 = bbox[0],\n        y0 = bbox[1],\n        x1 = bbox[2],\n        y1 = bbox[3];\n\n      // Obtain scale from matrix and current transformation matrix.\n      var matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n      var curMatrixScale = Util.singularValueDecompose2dScale(\n        this.baseTransform\n      );\n      var combinedScale = [\n        matrixScale[0] * curMatrixScale[0],\n        matrixScale[1] * curMatrixScale[1],\n      ];\n\n      // Use width and height values that are as close as possible to the end\n      // result when the pattern is used. Too low value makes the pattern look\n      // blurry. Too large value makes it look too crispy.\n      var dimx = this.getSizeAndScale(\n        xstep,\n        this.ctx.canvas.width,\n        combinedScale[0]\n      );\n      var dimy = this.getSizeAndScale(\n        ystep,\n        this.ctx.canvas.height,\n        combinedScale[1]\n      );\n\n      var tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        dimx.size,\n        dimy.size,\n        true\n      );\n      var tmpCtx = tmpCanvas.context;\n      var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n      graphics.groupLevel = owner.groupLevel;\n\n      this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n      graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n      // transform coordinates to pattern space\n      graphics.transform(1, 0, 0, 1, -x0, -y0);\n\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n      graphics.executeOperatorList(operatorList);\n\n      this.ctx.transform(1, 0, 0, 1, x0, y0);\n\n      // Rescale canvas so that the ctx.createPattern call generates a pattern\n      // with the desired size.\n      this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n      return tmpCanvas.canvas;\n    },\n\n    getSizeAndScale: function TilingPattern_getSizeAndScale(\n      step,\n      realOutputSize,\n      scale\n    ) {\n      // xstep / ystep may be negative -- normalize.\n      step = Math.abs(step);\n      // MAX_PATTERN_SIZE is used to avoid OOM situation.\n      // Use the destination canvas's size if it is bigger than the hard-coded\n      // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n      // whole canvas.\n      var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n      var size = Math.ceil(step * scale);\n      if (size >= maxSize) {\n        size = maxSize;\n      } else {\n        scale = size / step;\n      }\n      return { scale, size };\n    },\n\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (Array.isArray(bbox) && bbox.length === 4) {\n        var bboxWidth = x1 - x0;\n        var bboxHeight = y1 - y0;\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n\n    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(\n      graphics,\n      paintType,\n      color\n    ) {\n      const context = graphics.ctx,\n        current = graphics.current;\n      switch (paintType) {\n        case PaintType.COLORED:\n          var ctx = this.ctx;\n          context.fillStyle = ctx.fillStyle;\n          context.strokeStyle = ctx.strokeStyle;\n          current.fillColor = ctx.fillStyle;\n          current.strokeColor = ctx.strokeStyle;\n          break;\n        case PaintType.UNCOLORED:\n          var cssColor = Util.makeCssRgb(color[0], color[1], color[2]);\n          context.fillStyle = cssColor;\n          context.strokeStyle = cssColor;\n          // Set color needed by image masks (fixes issues 3226 and 8741).\n          current.fillColor = cssColor;\n          current.strokeColor = cssColor;\n          break;\n        default:\n          throw new FormatError(`Unsupported paint type: ${paintType}`);\n      }\n    },\n\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      ctx = this.ctx;\n      // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n\n      var temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n      return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n    },\n  };\n\n  return TilingPattern;\n})();\n\nexport { getShadingPatternFromIR, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst GlobalWorkerOptions = Object.create(null);\n\n/**\n * Defines global port for worker process. Overrides the `workerSrc` option.\n * @var {Object}\n */\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\n/**\n * A string containing the path and filename of the worker file.\n *\n * NOTE: The `workerSrc` option should always be set, in order to prevent any\n *       issues when using the PDF.js library.\n * @var {string}\n */\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error, prefer-const: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const sourceName = this.sourceName;\n        const targetName = data.sourceName;\n        new Promise(function(resolve) {\n          resolve(action(data.data));\n        }).then(\n          function(result) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function(reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function(resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function() {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function(reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function(resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function() {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function(reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function(resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function() {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function(reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function(capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from \"../shared/util.js\";\nimport { SimpleXMLParser } from \"./xml_parser.js\";\n\nclass Metadata {\n  constructor(data) {\n    assert(typeof data === \"string\", \"Metadata: input is not a string\");\n\n    // Ghostscript may produce invalid metadata, so try to repair that first.\n    data = this._repair(data);\n\n    // Convert the string to an XML document.\n    const parser = new SimpleXMLParser();\n    const xmlDocument = parser.parseFromString(data);\n\n    this._metadataMap = new Map();\n\n    if (xmlDocument) {\n      this._parse(xmlDocument);\n    }\n  }\n\n  _repair(data) {\n    // Start by removing any \"junk\" before the first tag (see issue 10395).\n    return data\n      .replace(/^[^<]+/, \"\")\n      .replace(/>\\\\376\\\\377([^<]+)/g, function(all, codes) {\n        const bytes = codes\n          .replace(/\\\\([0-3])([0-7])([0-7])/g, function(code, d1, d2, d3) {\n            return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n          })\n          .replace(/&(amp|apos|gt|lt|quot);/g, function(str, name) {\n            switch (name) {\n              case \"amp\":\n                return \"&\";\n              case \"apos\":\n                return \"'\";\n              case \"gt\":\n                return \">\";\n              case \"lt\":\n                return \"<\";\n              case \"quot\":\n                return '\"';\n            }\n            throw new Error(`_repair: ${name} isn't defined.`);\n          });\n\n        let chars = \"\";\n        for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n          const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n          if (\n            code >= /* Space = */ 32 &&\n            code < /* Delete = */ 127 &&\n            code !== /* '<' = */ 60 &&\n            code !== /* '>' = */ 62 &&\n            code !== /* '&' = */ 38\n          ) {\n            chars += String.fromCharCode(code);\n          } else {\n            chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n          }\n        }\n\n        return \">\" + chars;\n      });\n  }\n\n  _parse(xmlDocument) {\n    let rdf = xmlDocument.documentElement;\n\n    if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n      // Wrapped in <xmpmeta>\n      rdf = rdf.firstChild;\n      while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n        rdf = rdf.nextSibling;\n      }\n    }\n\n    const nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n    if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n      return;\n    }\n\n    const children = rdf.childNodes;\n    for (let i = 0, ii = children.length; i < ii; i++) {\n      const desc = children[i];\n      if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n        continue;\n      }\n\n      for (let j = 0, jj = desc.childNodes.length; j < jj; j++) {\n        if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n          const entry = desc.childNodes[j];\n          const name = entry.nodeName.toLowerCase();\n\n          this._metadataMap.set(name, entry.textContent.trim());\n        }\n      }\n    }\n  }\n\n  get(name) {\n    return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n  }\n\n  getAll() {\n    const obj = Object.create(null);\n    for (const [key, value] of this._metadataMap) {\n      obj[key] = value;\n    }\n    return obj;\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// The code for XMLParserBase copied from\n// https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/avm2/natives/xml.ts\n\nconst XMLParserErrorCode = {\n  NoError: 0,\n  EndOfDocument: -1,\n  UnterminatedCdat: -2,\n  UnterminatedXmlDeclaration: -3,\n  UnterminatedDoctypeDeclaration: -4,\n  UnterminatedComment: -5,\n  MalformedElement: -6,\n  OutOfMemory: -7,\n  UnterminatedAttributeValue: -8,\n  UnterminatedElement: -9,\n  ElementNeverBegun: -10,\n};\n\nfunction isWhitespace(s, index) {\n  const ch = s[index];\n  return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n}\n\nfunction isWhitespaceString(s) {\n  for (let i = 0, ii = s.length; i < ii; i++) {\n    if (!isWhitespace(s, i)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass XMLParserBase {\n  _resolveEntities(s) {\n    return s.replace(/&([^;]+);/g, (all, entity) => {\n      if (entity.substring(0, 2) === \"#x\") {\n        return String.fromCharCode(parseInt(entity.substring(2), 16));\n      } else if (entity.substring(0, 1) === \"#\") {\n        return String.fromCharCode(parseInt(entity.substring(1), 10));\n      }\n      switch (entity) {\n        case \"lt\":\n          return \"<\";\n        case \"gt\":\n          return \">\";\n        case \"amp\":\n          return \"&\";\n        case \"quot\":\n          return '\"';\n      }\n      return this.onResolveEntity(entity);\n    });\n  }\n\n  _parseContent(s, start) {\n    const attributes = [];\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    while (\n      pos < s.length &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\" &&\n      s[pos] !== \"?\"\n    ) {\n      skipWs();\n      let attrName = \"\",\n        attrValue = \"\";\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n        attrName += s[pos];\n        ++pos;\n      }\n      skipWs();\n      if (s[pos] !== \"=\") {\n        return null;\n      }\n      ++pos;\n      skipWs();\n      const attrEndChar = s[pos];\n      if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n        return null;\n      }\n      const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n      if (attrEndIndex < 0) {\n        return null;\n      }\n      attrValue = s.substring(pos, attrEndIndex);\n      attributes.push({\n        name: attrName,\n        value: this._resolveEntities(attrValue),\n      });\n      pos = attrEndIndex + 1;\n      skipWs();\n    }\n    return {\n      name,\n      attributes,\n      parsed: pos - start,\n    };\n  }\n\n  _parseProcessingInstruction(s, start) {\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    const attrStart = pos;\n    while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n      ++pos;\n    }\n    const value = s.substring(attrStart, pos);\n    return {\n      name,\n      value,\n      parsed: pos - start,\n    };\n  }\n\n  parseXml(s) {\n    let i = 0;\n    while (i < s.length) {\n      const ch = s[i];\n      let j = i;\n      if (ch === \"<\") {\n        ++j;\n        const ch2 = s[j];\n        let q;\n        switch (ch2) {\n          case \"/\":\n            ++j;\n            q = s.indexOf(\">\", j);\n            if (q < 0) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onEndElement(s.substring(j, q));\n            j = q + 1;\n            break;\n          case \"?\":\n            ++j;\n            const pi = this._parseProcessingInstruction(s, j);\n            if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n              this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n              return;\n            }\n            this.onPi(pi.name, pi.value);\n            j += pi.parsed + 2;\n            break;\n          case \"!\":\n            if (s.substring(j + 1, j + 3) === \"--\") {\n              q = s.indexOf(\"-->\", j + 3);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedComment);\n                return;\n              }\n              this.onComment(s.substring(j + 3, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n              q = s.indexOf(\"]]>\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedCdat);\n                return;\n              }\n              this.onCdata(s.substring(j + 8, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n              const q2 = s.indexOf(\"[\", j + 8);\n              let complexDoctype = false;\n              q = s.indexOf(\">\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                return;\n              }\n              if (q2 > 0 && q > q2) {\n                q = s.indexOf(\"]>\", j + 8);\n                if (q < 0) {\n                  this.onError(\n                    XMLParserErrorCode.UnterminatedDoctypeDeclaration\n                  );\n                  return;\n                }\n                complexDoctype = true;\n              }\n              const doctypeContent = s.substring(\n                j + 8,\n                q + (complexDoctype ? 1 : 0)\n              );\n              this.onDoctype(doctypeContent);\n              j = q + (complexDoctype ? 2 : 1);\n            } else {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            break;\n          default:\n            const content = this._parseContent(s, j);\n            if (content === null) {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            let isClosed = false;\n            if (\n              s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\"\n            ) {\n              isClosed = true;\n            } else if (\n              s.substring(j + content.parsed, j + content.parsed + 1) !== \">\"\n            ) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onBeginElement(content.name, content.attributes, isClosed);\n            j += content.parsed + (isClosed ? 2 : 1);\n            break;\n        }\n      } else {\n        while (j < s.length && s[j] !== \"<\") {\n          j++;\n        }\n        const text = s.substring(i, j);\n        this.onText(this._resolveEntities(text));\n      }\n      i = j;\n    }\n  }\n\n  onResolveEntity(name) {\n    return `&${name};`;\n  }\n\n  onPi(name, value) {}\n\n  onComment(text) {}\n\n  onCdata(text) {}\n\n  onDoctype(doctypeContent) {}\n\n  onText(text) {}\n\n  onBeginElement(name, attributes, isEmpty) {}\n\n  onEndElement(name) {}\n\n  onError(code) {}\n}\n\nclass SimpleDOMNode {\n  constructor(nodeName, nodeValue) {\n    this.nodeName = nodeName;\n    this.nodeValue = nodeValue;\n\n    Object.defineProperty(this, \"parentNode\", { value: null, writable: true });\n  }\n\n  get firstChild() {\n    return this.childNodes && this.childNodes[0];\n  }\n\n  get nextSibling() {\n    const childNodes = this.parentNode.childNodes;\n    if (!childNodes) {\n      return undefined;\n    }\n    const index = childNodes.indexOf(this);\n    if (index === -1) {\n      return undefined;\n    }\n    return childNodes[index + 1];\n  }\n\n  get textContent() {\n    if (!this.childNodes) {\n      return this.nodeValue || \"\";\n    }\n    return this.childNodes\n      .map(function(child) {\n        return child.textContent;\n      })\n      .join(\"\");\n  }\n\n  hasChildNodes() {\n    return this.childNodes && this.childNodes.length > 0;\n  }\n}\n\nclass SimpleXMLParser extends XMLParserBase {\n  constructor() {\n    super();\n    this._currentFragment = null;\n    this._stack = null;\n    this._errorCode = XMLParserErrorCode.NoError;\n  }\n\n  parseFromString(data) {\n    this._currentFragment = [];\n    this._stack = [];\n    this._errorCode = XMLParserErrorCode.NoError;\n\n    this.parseXml(data);\n\n    if (this._errorCode !== XMLParserErrorCode.NoError) {\n      return undefined; // return undefined on error\n    }\n\n    // We should only have one root.\n    const [documentElement] = this._currentFragment;\n    if (!documentElement) {\n      return undefined; // Return undefined if no root was found.\n    }\n    return { documentElement };\n  }\n\n  onResolveEntity(name) {\n    switch (name) {\n      case \"apos\":\n        return \"'\";\n    }\n    return super.onResolveEntity(name);\n  }\n\n  onText(text) {\n    if (isWhitespaceString(text)) {\n      return;\n    }\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onCdata(text) {\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onBeginElement(name, attributes, isEmpty) {\n    const node = new SimpleDOMNode(name);\n    node.childNodes = [];\n    this._currentFragment.push(node);\n    if (isEmpty) {\n      return;\n    }\n    this._stack.push(this._currentFragment);\n    this._currentFragment = node.childNodes;\n  }\n\n  onEndElement(name) {\n    this._currentFragment = this._stack.pop() || [];\n    const lastElement = this._currentFragment[this._currentFragment.length - 1];\n    if (!lastElement) {\n      return;\n    }\n    for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n      lastElement.childNodes[i].parentNode = lastElement;\n    }\n  }\n\n  onError(code) {\n    this._errorCode = code;\n  }\n}\n\nexport { SimpleXMLParser };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(pdfDataRangeTransport);\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n\n    const initialData = params.initialData;\n    if (initialData && initialData.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function(rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(found);\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader && firstReader.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader && fullReader.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(!this._fullRequestReader);\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeReaders.slice(0);\n    readers.forEach(function(rangeReader) {\n      rangeReader.cancel(reason);\n    });\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      this._requests.forEach(function(requestCapability) {\n        requestCapability.resolve({ value: undefined, done: true });\n      });\n      this._requests = [];\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable no-multi-str */\n\nimport { shadow } from \"../shared/util.js\";\n\nclass WebGLContext {\n  constructor({ enable = false }) {\n    this._enabled = enable === true;\n  }\n\n  get isEnabled() {\n    let enabled = this._enabled;\n    if (enabled) {\n      enabled = WebGLUtils.tryInitGL();\n    }\n    return shadow(this, \"isEnabled\", enabled);\n  }\n\n  composeSMask({ layer, mask, properties }) {\n    return WebGLUtils.composeSMask(layer, mask, properties);\n  }\n\n  drawFigures({ width, height, backgroundColor, figures, context }) {\n    return WebGLUtils.drawFigures(\n      width,\n      height,\n      backgroundColor,\n      figures,\n      context\n    );\n  }\n\n  clear() {\n    WebGLUtils.cleanup();\n  }\n}\n\nvar WebGLUtils = (function WebGLUtilsClosure() {\n  function loadShader(gl, code, shaderType) {\n    var shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      var errorMsg = gl.getShaderInfoLog(shader);\n      throw new Error(\"Error during shader compilation: \" + errorMsg);\n    }\n    return shader;\n  }\n  function createVertexShader(gl, code) {\n    return loadShader(gl, code, gl.VERTEX_SHADER);\n  }\n  function createFragmentShader(gl, code) {\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\n  }\n  function createProgram(gl, shaders) {\n    var program = gl.createProgram();\n    for (var i = 0, ii = shaders.length; i < ii; ++i) {\n      gl.attachShader(program, shaders[i]);\n    }\n    gl.linkProgram(program);\n    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n      var errorMsg = gl.getProgramInfoLog(program);\n      throw new Error(\"Error during program linking: \" + errorMsg);\n    }\n    return program;\n  }\n  function createTexture(gl, image, textureId) {\n    gl.activeTexture(textureId);\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // Upload the image into the texture.\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  }\n\n  var currentGL, currentCanvas;\n  function generateGL() {\n    if (currentGL) {\n      return;\n    }\n\n    // The temporary canvas is used in the WebGL context.\n    currentCanvas = document.createElement(\"canvas\");\n    currentGL = currentCanvas.getContext(\"webgl\", {\n      premultipliedalpha: false,\n    });\n  }\n\n  var smaskVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n\n  var smaskFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n\n  var smaskCache = null;\n\n  function initSmaskGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n    cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n\n    var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n    var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n    var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n\n    // provide texture coordinates for the rectangle.\n    var texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0.0, 0.0,\n      1.0, 0.0,\n      0.0, 1.0,\n      0.0, 1.0,\n      1.0, 0.0,\n      1.0, 1.0]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.uniform1i(texLayerLocation, 0);\n    gl.uniform1i(texMaskLocation, 1);\n\n    smaskCache = cache;\n  }\n\n  function composeSMask(layer, mask, properties) {\n    var width = layer.width,\n      height = layer.height;\n\n    if (!smaskCache) {\n      initSmaskGL();\n    }\n    var cache = smaskCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    if (properties.backdrop) {\n      gl.uniform4f(\n        cache.resolutionLocation,\n        properties.backdrop[0],\n        properties.backdrop[1],\n        properties.backdrop[2],\n        1\n      );\n    } else {\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n    }\n    gl.uniform1i(\n      cache.subtypeLocation,\n      properties.subtype === \"Luminosity\" ? 1 : 0\n    );\n\n    // Create a textures\n    var texture = createTexture(gl, layer, gl.TEXTURE0);\n    var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n\n    // Create a buffer and put a single clipspace rectangle in\n    // it (2 triangles)\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0, 0,\n      width, 0,\n      0, height,\n      0, height,\n      width, 0,\n      width, height]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // draw\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    gl.flush();\n\n    gl.deleteTexture(texture);\n    gl.deleteTexture(maskTexture);\n    gl.deleteBuffer(buffer);\n\n    return canvas;\n  }\n\n  var figuresVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n\n  var figuresFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n\n  var figuresCache = null;\n\n  function initFiguresGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n    cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n\n    figuresCache = cache;\n  }\n\n  function drawFigures(width, height, backgroundColor, figures, context) {\n    if (!figuresCache) {\n      initFiguresGL();\n    }\n    var cache = figuresCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    // count triangle points\n    var count = 0;\n    var i, ii, rows;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      switch (figures[i].type) {\n        case \"lattice\":\n          rows = (figures[i].coords.length / figures[i].verticesPerRow) | 0;\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n          break;\n        case \"triangles\":\n          count += figures[i].coords.length;\n          break;\n      }\n    }\n    // transfer data\n    var coords = new Float32Array(count * 2);\n    var colors = new Uint8Array(count * 3);\n    var coordsMap = context.coords,\n      colorsMap = context.colors;\n    var pIndex = 0,\n      cIndex = 0;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n        ps = figure.coords,\n        cs = figure.colors;\n      switch (figure.type) {\n        case \"lattice\":\n          var cols = figure.verticesPerRow;\n          rows = (ps.length / cols) | 0;\n          for (var row = 1; row < rows; row++) {\n            var offset = row * cols + 1;\n            for (var col = 1; col < cols; col++, offset++) {\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n\n              coords[pIndex + 6] = coords[pIndex + 2];\n              coords[pIndex + 7] = coords[pIndex + 3];\n              coords[pIndex + 8] = coords[pIndex + 4];\n              coords[pIndex + 9] = coords[pIndex + 5];\n              coords[pIndex + 10] = coordsMap[ps[offset]];\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n              colors[cIndex + 9] = colors[cIndex + 3];\n              colors[cIndex + 10] = colors[cIndex + 4];\n              colors[cIndex + 11] = colors[cIndex + 5];\n              colors[cIndex + 12] = colors[cIndex + 6];\n              colors[cIndex + 13] = colors[cIndex + 7];\n              colors[cIndex + 14] = colors[cIndex + 8];\n              colors[cIndex + 15] = colorsMap[cs[offset]];\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n              pIndex += 12;\n              cIndex += 18;\n            }\n          }\n          break;\n        case \"triangles\":\n          for (var j = 0, jj = ps.length; j < jj; j++) {\n            coords[pIndex] = coordsMap[ps[j]];\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\n            colors[cIndex] = colorsMap[cs[j]];\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\n            pIndex += 2;\n            cIndex += 3;\n          }\n          break;\n      }\n    }\n\n    // draw\n    if (backgroundColor) {\n      gl.clearColor(\n        backgroundColor[0] / 255,\n        backgroundColor[1] / 255,\n        backgroundColor[2] / 255,\n        1.0\n      );\n    } else {\n      gl.clearColor(0, 0, 0, 0);\n    }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    var coordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    var colorsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.colorLocation);\n    gl.vertexAttribPointer(\n      cache.colorLocation,\n      3,\n      gl.UNSIGNED_BYTE,\n      false,\n      0,\n      0\n    );\n\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n\n    gl.flush();\n\n    gl.deleteBuffer(coordsBuffer);\n    gl.deleteBuffer(colorsBuffer);\n\n    return canvas;\n  }\n\n  return {\n    tryInitGL() {\n      try {\n        generateGL();\n        return !!currentGL;\n      } catch (ex) {}\n      return false;\n    },\n\n    composeSMask,\n\n    drawFigures,\n\n    cleanup() {\n      if (smaskCache && smaskCache.canvas) {\n        smaskCache.canvas.width = 0;\n        smaskCache.canvas.height = 0;\n      }\n      if (figuresCache && figuresCache.canvas) {\n        figuresCache.canvas.width = 0;\n        figuresCache.canvas.height = 0;\n      }\n      smaskCache = null;\n      figuresCache = null;\n    },\n  };\n})();\n\nexport { WebGLContext };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {TextContent} [textContent] - Text content to render (the object\n *   is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {PageViewport} viewport - The target viewport to properly\n *   layout the text runs.\n * @property {Array} [textDivs] - HTML elements that are correspond to the\n *   text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array} [textContentItemsStr] - Strings that correspond to the\n *   `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\nvar renderTextLayer = (function renderTextLayerClosure() {\n  var MAX_TEXT_DIVS_TO_RENDER = 100000;\n\n  var NonWhitespaceRegexp = /\\S/;\n\n  function isAllWhitespace(str) {\n    return !NonWhitespaceRegexp.test(str);\n  }\n\n  function appendText(task, geom, styles) {\n    // Initialize all used properties to keep the caches monomorphic.\n    var textDiv = document.createElement(\"span\");\n    var textDivProperties = {\n      angle: 0,\n      canvasWidth: 0,\n      isWhitespace: false,\n      originalTransform: null,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      scale: 1,\n    };\n\n    task._textDivs.push(textDiv);\n    if (isAllWhitespace(geom.str)) {\n      textDivProperties.isWhitespace = true;\n      task._textDivProperties.set(textDiv, textDivProperties);\n      return;\n    }\n\n    var tx = Util.transform(task._viewport.transform, geom.transform);\n    var angle = Math.atan2(tx[1], tx[0]);\n    var style = styles[geom.fontName];\n    if (style.vertical) {\n      angle += Math.PI / 2;\n    }\n    var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n    var fontAscent = fontHeight;\n    if (style.ascent) {\n      fontAscent = style.ascent * fontAscent;\n    } else if (style.descent) {\n      fontAscent = (1 + style.descent) * fontAscent;\n    }\n\n    let left, top;\n    if (angle === 0) {\n      left = tx[4];\n      top = tx[5] - fontAscent;\n    } else {\n      left = tx[4] + fontAscent * Math.sin(angle);\n      top = tx[5] - fontAscent * Math.cos(angle);\n    }\n    // Setting the style properties individually, rather than all at once,\n    // should be OK since the `textDiv` isn't appended to the document yet.\n    textDiv.style.left = `${left}px`;\n    textDiv.style.top = `${top}px`;\n    textDiv.style.fontSize = `${fontHeight}px`;\n    textDiv.style.fontFamily = style.fontFamily;\n\n    textDiv.textContent = geom.str;\n    // `fontName` is only used by the FontInspector, and we only use `dataset`\n    // here to make the font name available in the debugger.\n    if (task._fontInspectorEnabled) {\n      textDiv.dataset.fontName = geom.fontName;\n    }\n    if (angle !== 0) {\n      textDivProperties.angle = angle * (180 / Math.PI);\n    }\n    // We don't bother scaling single-char text divs, because it has very\n    // little effect on text highlighting. This makes scrolling on docs with\n    // lots of such divs a lot faster.\n    if (geom.str.length > 1) {\n      if (style.vertical) {\n        textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n      } else {\n        textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n      }\n    }\n    task._textDivProperties.set(textDiv, textDivProperties);\n    if (task._textContentStream) {\n      task._layoutText(textDiv);\n    }\n\n    if (task._enhanceTextSelection) {\n      var angleCos = 1,\n        angleSin = 0;\n      if (angle !== 0) {\n        angleCos = Math.cos(angle);\n        angleSin = Math.sin(angle);\n      }\n      var divWidth =\n        (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n      var divHeight = fontHeight;\n\n      var m, b;\n      if (angle !== 0) {\n        m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n        b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n      } else {\n        b = [left, top, left + divWidth, top + divHeight];\n      }\n\n      task._bounds.push({\n        left: b[0],\n        top: b[1],\n        right: b[2],\n        bottom: b[3],\n        div: textDiv,\n        size: [divWidth, divHeight],\n        m,\n      });\n    }\n  }\n\n  function render(task) {\n    if (task._canceled) {\n      return;\n    }\n    var textDivs = task._textDivs;\n    var capability = task._capability;\n    var textDivsLength = textDivs.length;\n\n    // No point in rendering many divs as it would make the browser\n    // unusable even after the divs are rendered.\n    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n      task._renderingDone = true;\n      capability.resolve();\n      return;\n    }\n\n    if (!task._textContentStream) {\n      for (var i = 0; i < textDivsLength; i++) {\n        task._layoutText(textDivs[i]);\n      }\n    }\n\n    task._renderingDone = true;\n    capability.resolve();\n  }\n\n  function expand(task) {\n    var bounds = task._bounds;\n    var viewport = task._viewport;\n\n    var expanded = expandBounds(viewport.width, viewport.height, bounds);\n    for (var i = 0; i < expanded.length; i++) {\n      var div = bounds[i].div;\n      var divProperties = task._textDivProperties.get(div);\n      if (divProperties.angle === 0) {\n        divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n        divProperties.paddingTop = bounds[i].top - expanded[i].top;\n        divProperties.paddingRight = expanded[i].right - bounds[i].right;\n        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n        task._textDivProperties.set(div, divProperties);\n        continue;\n      }\n      // Box is rotated -- trying to find padding so rotated div will not\n      // exceed its expanded bounds.\n      var e = expanded[i],\n        b = bounds[i];\n      var m = b.m,\n        c = m[0],\n        s = m[1];\n      // Finding intersections with expanded box.\n      var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n      var ts = new Float64Array(64);\n      points.forEach(function(p, i) {\n        var t = Util.applyTransform(p, m);\n        ts[i + 0] = c && (e.left - t[0]) / c;\n        ts[i + 4] = s && (e.top - t[1]) / s;\n        ts[i + 8] = c && (e.right - t[0]) / c;\n        ts[i + 12] = s && (e.bottom - t[1]) / s;\n\n        ts[i + 16] = s && (e.left - t[0]) / -s;\n        ts[i + 20] = c && (e.top - t[1]) / c;\n        ts[i + 24] = s && (e.right - t[0]) / -s;\n        ts[i + 28] = c && (e.bottom - t[1]) / c;\n\n        ts[i + 32] = c && (e.left - t[0]) / -c;\n        ts[i + 36] = s && (e.top - t[1]) / -s;\n        ts[i + 40] = c && (e.right - t[0]) / -c;\n        ts[i + 44] = s && (e.bottom - t[1]) / -s;\n\n        ts[i + 48] = s && (e.left - t[0]) / s;\n        ts[i + 52] = c && (e.top - t[1]) / -c;\n        ts[i + 56] = s && (e.right - t[0]) / s;\n        ts[i + 60] = c && (e.bottom - t[1]) / -c;\n      });\n      var findPositiveMin = function(ts, offset, count) {\n        var result = 0;\n        for (var i = 0; i < count; i++) {\n          var t = ts[offset++];\n          if (t > 0) {\n            result = result ? Math.min(t, result) : t;\n          }\n        }\n        return result;\n      };\n      // Not based on math, but to simplify calculations, using cos and sin\n      // absolute values to not exceed the box (it can but insignificantly).\n      var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n      task._textDivProperties.set(div, divProperties);\n    }\n  }\n\n  function expandBounds(width, height, boxes) {\n    var bounds = boxes.map(function(box, i) {\n      return {\n        x1: box.left,\n        y1: box.top,\n        x2: box.right,\n        y2: box.bottom,\n        index: i,\n        x1New: undefined,\n        x2New: undefined,\n      };\n    });\n    expandBoundsLTR(width, bounds);\n    var expanded = new Array(boxes.length);\n    bounds.forEach(function(b) {\n      var i = b.index;\n      expanded[i] = {\n        left: b.x1New,\n        top: 0,\n        right: b.x2New,\n        bottom: 0,\n      };\n    });\n\n    // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n    // array and objects.\n    boxes.map(function(box, i) {\n      var e = expanded[i],\n        b = bounds[i];\n      b.x1 = box.top;\n      b.y1 = width - e.right;\n      b.x2 = box.bottom;\n      b.y2 = width - e.left;\n      b.index = i;\n      b.x1New = undefined;\n      b.x2New = undefined;\n    });\n    expandBoundsLTR(height, bounds);\n\n    bounds.forEach(function(b) {\n      var i = b.index;\n      expanded[i].top = b.x1New;\n      expanded[i].bottom = b.x2New;\n    });\n    return expanded;\n  }\n\n  function expandBoundsLTR(width, bounds) {\n    // Sorting by x1 coordinate and walk by the bounds in the same order.\n    bounds.sort(function(a, b) {\n      return a.x1 - b.x1 || a.index - b.index;\n    });\n\n    // First we see on the horizon is a fake boundary.\n    var fakeBoundary = {\n      x1: -Infinity,\n      y1: -Infinity,\n      x2: 0,\n      y2: Infinity,\n      index: -1,\n      x1New: 0,\n      x2New: 0,\n    };\n    var horizon = [\n      {\n        start: -Infinity,\n        end: Infinity,\n        boundary: fakeBoundary,\n      },\n    ];\n\n    bounds.forEach(function(boundary) {\n      // Searching for the affected part of horizon.\n      // TODO red-black tree or simple binary search\n      var i = 0;\n      while (i < horizon.length && horizon[i].end <= boundary.y1) {\n        i++;\n      }\n      var j = horizon.length - 1;\n      while (j >= 0 && horizon[j].start >= boundary.y2) {\n        j--;\n      }\n\n      var horizonPart, affectedBoundary;\n      var q,\n        k,\n        maxXNew = -Infinity;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        var xNew;\n        if (affectedBoundary.x2 > boundary.x1) {\n          // In the middle of the previous element, new x shall be at the\n          // boundary start. Extending if further if the affected boundary\n          // placed on top of the current one.\n          xNew =\n            affectedBoundary.index > boundary.index\n              ? affectedBoundary.x1New\n              : boundary.x1;\n        } else if (affectedBoundary.x2New === undefined) {\n          // We have some space in between, new x in middle will be a fair\n          // choice.\n          xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n        } else {\n          // Affected boundary has x2new set, using it as new x.\n          xNew = affectedBoundary.x2New;\n        }\n        if (xNew > maxXNew) {\n          maxXNew = xNew;\n        }\n      }\n\n      // Set new x1 for current boundary.\n      boundary.x1New = maxXNew;\n\n      // Adjusts new x2 for the affected boundaries.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New === undefined) {\n          // Was not set yet, choosing new x if possible.\n          if (affectedBoundary.x2 > boundary.x1) {\n            // Current and affected boundaries intersect. If affected boundary\n            // is placed on top of the current, shrinking the affected.\n            if (affectedBoundary.index > boundary.index) {\n              affectedBoundary.x2New = affectedBoundary.x2;\n            }\n          } else {\n            affectedBoundary.x2New = maxXNew;\n          }\n        } else if (affectedBoundary.x2New > maxXNew) {\n          // Affected boundary is touching new x, pushing it back.\n          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n        }\n      }\n\n      // Fixing the horizon.\n      var changedHorizon = [],\n        lastBoundary = null;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        // Checking which boundary will be visible.\n        var useBoundary =\n          affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n        if (lastBoundary === useBoundary) {\n          // Merging with previous.\n          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n        } else {\n          changedHorizon.push({\n            start: horizonPart.start,\n            end: horizonPart.end,\n            boundary: useBoundary,\n          });\n          lastBoundary = useBoundary;\n        }\n      }\n      if (horizon[i].start < boundary.y1) {\n        changedHorizon[0].start = boundary.y1;\n        changedHorizon.unshift({\n          start: horizon[i].start,\n          end: boundary.y1,\n          boundary: horizon[i].boundary,\n        });\n      }\n      if (boundary.y2 < horizon[j].end) {\n        changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n        changedHorizon.push({\n          start: boundary.y2,\n          end: horizon[j].end,\n          boundary: horizon[j].boundary,\n        });\n      }\n\n      // Set x2 new of boundary that is no longer visible (see overlapping case\n      // above).\n      // TODO more efficient, e.g. via reference counting.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New !== undefined) {\n          continue;\n        }\n        var used = false;\n        for (\n          k = i - 1;\n          !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n          k--\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (\n          k = j + 1;\n          !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n          k++\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (k = 0; !used && k < changedHorizon.length; k++) {\n          used = changedHorizon[k].boundary === affectedBoundary;\n        }\n        if (!used) {\n          affectedBoundary.x2New = maxXNew;\n        }\n      }\n\n      Array.prototype.splice.apply(\n        horizon,\n        [i, j - i + 1].concat(changedHorizon)\n      );\n    });\n\n    // Set new x2 for all unset boundaries.\n    horizon.forEach(function(horizonPart) {\n      var affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n      }\n    });\n  }\n\n  /**\n   * Text layer rendering task.\n   *\n   * @param {TextContent} textContent\n   * @param {HTMLElement} container\n   * @param {PageViewport} viewport\n   * @param {Array} textDivs\n   * @param {boolean} enhanceTextSelection\n   * @private\n   */\n  function TextLayerRenderTask({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!(\n      globalThis.FontInspector && globalThis.FontInspector.enabled\n    );\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n  TextLayerRenderTask.prototype = {\n    get promise() {\n      return this._capability.promise;\n    },\n\n    cancel: function TextLayer_cancel() {\n      this._canceled = true;\n      if (this._reader) {\n        this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n        this._reader = null;\n      }\n      if (this._renderTimer !== null) {\n        clearTimeout(this._renderTimer);\n        this._renderTimer = null;\n      }\n      this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n    },\n\n    _processItems(items, styleCache) {\n      for (let i = 0, len = items.length; i < len; i++) {\n        this._textContentItemsStr.push(items[i].str);\n        appendText(this, items[i], styleCache);\n      }\n    },\n\n    _layoutText(textDiv) {\n      const textDivProperties = this._textDivProperties.get(textDiv);\n      if (textDivProperties.isWhitespace) {\n        return;\n      }\n\n      let transform = \"\";\n      if (textDivProperties.canvasWidth !== 0) {\n        const { fontSize, fontFamily } = textDiv.style;\n\n        // Only build font string and set to context if different from last.\n        if (\n          fontSize !== this._layoutTextLastFontSize ||\n          fontFamily !== this._layoutTextLastFontFamily\n        ) {\n          this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n          this._layoutTextLastFontSize = fontSize;\n          this._layoutTextLastFontFamily = fontFamily;\n        }\n        // Only measure the width for multi-char text divs, see `appendText`.\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          transform = `scaleX(${textDivProperties.scale})`;\n        }\n      }\n      if (textDivProperties.angle !== 0) {\n        transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n      }\n      if (transform.length > 0) {\n        if (this._enhanceTextSelection) {\n          textDivProperties.originalTransform = transform;\n        }\n        textDiv.style.transform = transform;\n      }\n      this._textDivProperties.set(textDiv, textDivProperties);\n      this._container.appendChild(textDiv);\n    },\n\n    _render: function TextLayer_render(timeout) {\n      const capability = createPromiseCapability();\n      let styleCache = Object.create(null);\n\n      // The temporary canvas is used to measure text length in the DOM.\n      const canvas = document.createElement(\"canvas\");\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        canvas.mozOpaque = true;\n      }\n      this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n      if (this._textContent) {\n        const textItems = this._textContent.items;\n        const textStyles = this._textContent.styles;\n        this._processItems(textItems, textStyles);\n        capability.resolve();\n      } else if (this._textContentStream) {\n        const pump = () => {\n          this._reader.read().then(({ value, done }) => {\n            if (done) {\n              capability.resolve();\n              return;\n            }\n\n            Object.assign(styleCache, value.styles);\n            this._processItems(value.items, styleCache);\n            pump();\n          }, capability.reject);\n        };\n\n        this._reader = this._textContentStream.getReader();\n        pump();\n      } else {\n        throw new Error(\n          'Neither \"textContent\" nor \"textContentStream\"' +\n            \" parameters specified.\"\n        );\n      }\n\n      capability.promise.then(() => {\n        styleCache = null;\n        if (!timeout) {\n          // Render right away\n          render(this);\n        } else {\n          // Schedule\n          this._renderTimer = setTimeout(() => {\n            render(this);\n            this._renderTimer = null;\n          }, timeout);\n        }\n      }, this._capability.reject);\n    },\n\n    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n      if (!this._enhanceTextSelection || !this._renderingDone) {\n        return;\n      }\n      if (this._bounds !== null) {\n        expand(this);\n        this._bounds = null;\n      }\n      const transformBuf = [],\n        paddingBuf = [];\n\n      for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n        const div = this._textDivs[i];\n        const divProps = this._textDivProperties.get(div);\n\n        if (divProps.isWhitespace) {\n          continue;\n        }\n        if (expandDivs) {\n          transformBuf.length = 0;\n          paddingBuf.length = 0;\n\n          if (divProps.originalTransform) {\n            transformBuf.push(divProps.originalTransform);\n          }\n          if (divProps.paddingTop > 0) {\n            paddingBuf.push(`${divProps.paddingTop}px`);\n            transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingRight > 0) {\n            paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingBottom > 0) {\n            paddingBuf.push(`${divProps.paddingBottom}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingLeft > 0) {\n            paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n            transformBuf.push(\n              `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n            );\n          } else {\n            paddingBuf.push(0);\n          }\n\n          div.style.padding = paddingBuf.join(\" \");\n          if (transformBuf.length) {\n            div.style.transform = transformBuf.join(\" \");\n          }\n        } else {\n          div.style.padding = null;\n          div.style.transform = divProps.originalTransform;\n        }\n      }\n    },\n  };\n\n  /**\n   * Starts rendering of the text layer.\n   *\n   * @param {TextLayerRenderParameters} renderParameters\n   * @returns {TextLayerRenderTask}\n   */\n  function renderTextLayer(renderParameters) {\n    var task = new TextLayerRenderTask({\n      textContent: renderParameters.textContent,\n      textContentStream: renderParameters.textContentStream,\n      container: renderParameters.container,\n      viewport: renderParameters.viewport,\n      textDivs: renderParameters.textDivs,\n      textContentItemsStr: renderParameters.textContentItemsStr,\n      enhanceTextSelection: renderParameters.enhanceTextSelection,\n    });\n    task._render(renderParameters.timeout);\n    return task;\n  }\n\n  return renderTextLayer;\n})();\n\nexport { renderTextLayer };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(parameters, isRenderable = false, ignoreBorder = false) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `-${rect[0]}px -${rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeCssRgb(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLSectionElement} container\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(container, trigger, data) {\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof AnnotationElement\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the link annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LinkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"linkAnnotation\";\n\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else {\n      this._bindLink(link, data.dest);\n    }\n\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.navigateTo(destination);\n      }\n      return false;\n    };\n    if (destination) {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  /**\n   * Render the widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof WidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Show only the container for unsupported field types.\n    return this.container;\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = this.data.fieldValue;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", this.data.fieldValue);\n      }\n\n      element.disabled = this.data.readOnly;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n\n      let font = null;\n      if (\n        this.data.fontRefName &&\n        this.page.commonObjs.has(this.data.fontRefName)\n      ) {\n        font = this.page.commonObjs.get(this.data.fontRefName);\n      }\n      this._setTextStyle(element, font);\n    }\n\n    if (this.data.textAlignment !== null) {\n      element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @param {Object} font\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element, font) {\n    // TODO: This duplicates some of the logic in CanvasGraphics.setFont().\n    const style = element.style;\n    style.fontSize = `${this.data.fontSize}px`;\n    style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n\n    if (!font) {\n      return;\n    }\n\n    let bold = \"normal\";\n    if (font.black) {\n      bold = \"900\";\n    } else if (font.bold) {\n      bold = \"bold\";\n    }\n    style.fontWeight = bold;\n    style.fontStyle = font.italic ? \"italic\" : \"normal\";\n\n    // Use a reasonable default font if the font doesn't specify a fallback.\n    const fontFamily = font.loadedName ? `\"${font.loadedName}\", ` : \"\";\n    const fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n    style.fontFamily = fontFamily + fallbackName;\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the checkbox widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof CheckboxWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"checkbox\";\n    if (this.data.fieldValue && this.data.fieldValue !== \"Off\") {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the radio button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof RadioButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"radio\";\n    element.name = this.data.fieldName;\n    if (this.data.fieldValue === this.data.buttonValue) {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  /**\n   * Render the push button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof PushButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the choice widget annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof ChoiceWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.displayValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the popup annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PopupAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElement = this.layer.querySelector(selector);\n    if (!parentElement) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: parentElement,\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const parentLeft = parseFloat(parentElement.style.left);\n    const parentWidth = parseFloat(parentElement.style.width);\n    this.container.style.transformOrigin = `-${parentLeft + parentWidth}px -${\n      parentElement.style.top\n    }`;\n    this.container.style.left = `${parentLeft + parentWidth}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  /**\n   * Render the popup's HTML element.\n   *\n   * @public\n   * @memberof PopupElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.setAttribute(\"hidden\", true);\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeCssRgb(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    // Attach the event listeners to the trigger element.\n    this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n    this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n    this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hasAttribute(\"hidden\")) {\n      this.hideElement.removeAttribute(\"hidden\");\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n      this.hideElement.setAttribute(\"hidden\", true);\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the free text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof FreeTextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the line annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the square annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquareAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the circle annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CircleAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the polyline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PolylineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(this.container, polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the caret annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CaretAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the ink annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof InkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(this.container, polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the highlight annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof HighlightAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"highlightAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the underline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof UnderlineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"underlineAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the squiggly annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquigglyAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squigglyAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the strikeout annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StrikeOutAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"strikeoutAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the stamp annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StampAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, /* isRenderable = */ true);\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    if (this.linkService.eventBus) {\n      this.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n        source: this,\n        id: stringToPDFString(filename),\n        filename,\n        content,\n      });\n    }\n  }\n\n  /**\n   * Render the file attachment annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof FileAttachmentAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(this.container, trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    if (!this.downloadManager) {\n      warn(\"Download cannot be started due to unavailable download manager\");\n      return;\n    }\n    this.downloadManager.downloadData(this.content, this.filename, \"\");\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms: parameters.renderInteractiveForms || false,\n        svgFactory: new DOMSVGFactory(),\n      });\n      if (element.isRenderable) {\n        parameters.div.appendChild(element.render());\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    for (const data of parameters.annotations) {\n      const element = parameters.div.querySelector(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (element) {\n        element.style.transform = `matrix(${parameters.viewport.transform.join(\n          \",\"\n        )})`;\n      }\n    }\n    parameters.div.removeAttribute(\"hidden\");\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n/* eslint no-var: error */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nlet SVGGraphics = function() {\n  throw new Error(\"Not implemented: SVGGraphics\");\n};\n\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function() {\n    const PNG_HEADER = new Uint8Array([\n      0x89,\n      0x50,\n      0x4e,\n      0x47,\n      0x0d,\n      0x0a,\n      0x1a,\n      0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    function deflateSync(literals) {\n      if (!isNodeJS) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n      }\n      try {\n        // NOTE: This implementation is far from perfect, but already way better\n        // than not applying any compression.\n        //\n        // A better algorithm will try to choose a good predictor/filter and\n        // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n        //\n        // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n        // Node v3.0.0   Buffer inherits from Uint8Array.\n        // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n        let input;\n        // eslint-disable-next-line no-undef\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          // eslint-disable-next-line no-undef\n          input = Buffer.from(literals);\n        }\n        const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n          level: 9,\n        });\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        warn(\n          \"Not compressing PNG because zlib.deflateSync is unavailable: \" + e\n        );\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  SVGGraphics = class SVGGraphics {\n    constructor(commonObjs, objs, forceDataSchema) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintJpegXObject:\n            this.paintJpegXObject(args[0], args[1], args[2]);\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += -glyph * fontSize * 0.001;\n          continue;\n        }\n\n        const width = glyph.width;\n        const character = glyph.fontChar;\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const charWidth = width * widthAdvanceScale + spacing * fontDirection;\n\n        if (!glyph.isInFont && !font.missingFile) {\n          x += charWidth;\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n          continue;\n        }\n        current.xcoords.push(current.x + x);\n        current.tspan.textContent += character;\n        x += charWidth;\n      }\n      if (vertical) {\n        current.y -= x * textHScale;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        fontObj.data &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement &&\n        current.txtElement.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeCssRgb(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeCssRgb(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0] = Util.applyTransform([x0, y0], matrix);\n      const [tx1, ty1] = Util.applyTransform([x1, y1], matrix);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeCssRgb(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        this.extraStack.forEach(function(prev) {\n          prev.clipGroup = null;\n        });\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function(value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintJpegXObject(objId, w, h) {\n      const imgObj = this.objs.get(objId);\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgObj.src);\n      imgEl.setAttributeNS(null, \"width\", pf(w));\n      imgEl.setAttributeNS(null, \"height\", pf(h));\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-h));\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / w)} ${pf(-1 / h)})`\n      );\n\n      this._ensureTransformGroup().appendChild(imgEl);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(!this._fullRequestReader);\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function(reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(url, headers) {\n  return {\n    protocol: url.protocol,\n    auth: url.auth,\n    host: url.hostname,\n    port: url.port,\n    path: url.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const {\n        allowRangeRequests,\n        suggestedLength,\n      } = validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders[\"Range\"] = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (/\\.pdf$/i.test(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    \"Unexpected server response (\" +\n      status +\n      ') while retrieving PDF \"' +\n      url +\n      '\".',\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const bytes = Array.from(value, function(ch) {\n          return ch.charCodeAt(0) & 0xff;\n        });\n        value = decoder.decode(new Uint8Array(bytes));\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDisposition) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDisposition)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function(_, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function(_, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function(evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  hasPendingRequests() {\n    for (const xhrId in this.pendingRequests) {\n      return true;\n    }\n    return false;\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortAllRequests() {\n    for (const xhrId in this.pendingRequests) {\n      this.abortRequest(xhrId | 0);\n    }\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(!this._fullRequestReader);\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function(reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const {\n      allowRangeRequests,\n      suggestedLength,\n    } = validateRangeRequestCapabilities({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange,\n    });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.reject(exception);\n    });\n    this._requests = [];\n    this._cachedChunks = [];\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController && abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(!this._fullRequestReader);\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function(reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const {\n          allowRangeRequests,\n          suggestedLength,\n        } = validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: this._stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    ).then(response => {\n      if (!validateResponseStatus(response.status)) {\n        throw createResponseStatusError(response.status, url);\n      }\n      this._readCapability.resolve();\n      this._reader = response.body.getReader();\n    });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n"]},"metadata":{},"sourceType":"script"}